Check,Severity,Description,Filename,Line
arbitrary-send-eth,High,"TimelockControllerUpgradeable._call(bytes32,uint256,address,uint256,bytes) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#336-347) sends eth to arbitrary user
	Dangerous calls:
	- (success,None) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#343)
","bytes32,uint256,address,uint256,bytes) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol",336-347
arbitrary-send-eth,High,"GovernorUpgradeable._execute(uint256,address[],uint256[],bytes[],bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#237-249) sends eth to arbitrary user
	Dangerous calls:
	- (success,returndata) = targets[i].call{value: values[i]}(calldatas[i]) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#246)
","uint256,address[],uint256[],bytes[],bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol",237-249
incorrect-return,High,"TransparentUpgradeableProxy.upgradeTo(address) (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#95-97) calls TransparentUpgradeableProxy.ifAdmin() (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#45-51) which halt the execution return(uint256,uint256)(0,returndatasize()()) (node_modules/@openzeppelin/contracts/proxy/Proxy.sol#41)
",address) (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol,95-97
incorrect-return,High,"TransparentUpgradeableProxy.upgradeToAndCall(address,bytes) (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#106-108) calls TransparentUpgradeableProxy.ifAdmin() (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#45-51) which halt the execution return(uint256,uint256)(0,returndatasize()()) (node_modules/@openzeppelin/contracts/proxy/Proxy.sol#41)
","address,bytes) (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",106-108
incorrect-return,High,"TransparentUpgradeableProxy.implementation() (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#75-77) calls TransparentUpgradeableProxy.ifAdmin() (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#45-51) which halt the execution return(uint256,uint256)(0,returndatasize()()) (node_modules/@openzeppelin/contracts/proxy/Proxy.sol#41)
",) (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol,75-77
incorrect-return,High,"TransparentUpgradeableProxy.changeAdmin(address) (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#86-88) calls TransparentUpgradeableProxy.ifAdmin() (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#45-51) which halt the execution return(uint256,uint256)(0,returndatasize()()) (node_modules/@openzeppelin/contracts/proxy/Proxy.sol#41)
",address) (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol,86-88
incorrect-return,High,"TransparentUpgradeableProxy.ifAdmin() (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#45-51) calls Proxy._fallback() (node_modules/@openzeppelin/contracts/proxy/Proxy.sol#57-60) which halt the execution return(uint256,uint256)(0,returndatasize()()) (node_modules/@openzeppelin/contracts/proxy/Proxy.sol#41)
",) (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol,45-51
incorrect-return,High,"TransparentUpgradeableProxy.admin() (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#62-64) calls TransparentUpgradeableProxy.ifAdmin() (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#45-51) which halt the execution return(uint256,uint256)(0,returndatasize()()) (node_modules/@openzeppelin/contracts/proxy/Proxy.sol#41)
",) (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol,62-64
reentrancy-eth,High,"Reentrancy in TimelockControllerUpgradeable.execute(address,uint256,bytes,bytes32,bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#275-286):
	External calls:
	- _call(id,0,target,value,data) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#284)
		- (success,None) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#343)
	State variables written after the call(s):
	- _afterCall(id) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#285)
		- _timestamps[id] = _DONE_TIMESTAMP (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#328)
	TimelockControllerUpgradeable._timestamps (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#29) can be used in cross function reentrancies:
	- TimelockControllerUpgradeable._afterCall(bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#326-329)
	- TimelockControllerUpgradeable._schedule(bytes32,uint256) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#246-250)
	- TimelockControllerUpgradeable.cancel(bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#259-264)
	- TimelockControllerUpgradeable.getTimestamp(bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#153-155)
","address,uint256,bytes,bytes32,bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol",275-286
reentrancy-eth,High,"Reentrancy in TimelockControllerUpgradeable.executeBatch(address[],uint256[],bytes[],bytes32,bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#297-313):
	External calls:
	- _call(id,i,targets[i],values[i],datas[i]) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#310)
		- (success,None) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#343)
	State variables written after the call(s):
	- _afterCall(id) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#312)
		- _timestamps[id] = _DONE_TIMESTAMP (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#328)
	TimelockControllerUpgradeable._timestamps (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#29) can be used in cross function reentrancies:
	- TimelockControllerUpgradeable._afterCall(bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#326-329)
	- TimelockControllerUpgradeable._schedule(bytes32,uint256) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#246-250)
	- TimelockControllerUpgradeable.cancel(bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#259-264)
	- TimelockControllerUpgradeable.getTimestamp(bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#153-155)
","address[],uint256[],bytes[],bytes32,bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol",297-313
shadowing-state,High,"ERC20Detailed.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol#56) shadows:
	- Initializable.______gap (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#61)
",N/A,N/A
shadowing-state,High,"Pausable.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol#79) shadows:
	- PauserRole.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol#49)
	- Initializable.______gap (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#61)
",N/A,N/A
shadowing-state,High,"MinterRole.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol#49) shadows:
	- Initializable.______gap (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#61)
",N/A,N/A
shadowing-state,High,"ERC20Pausable.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol#40) shadows:
	- Pausable.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol#79)
	- PauserRole.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol#49)
	- ERC20.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol#233)
	- Initializable.______gap (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#61)
",N/A,N/A
shadowing-state,High,"PauserRole.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol#49) shadows:
	- Initializable.______gap (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#61)
",N/A,N/A
shadowing-state,High,"ERC20Mintable.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol#30) shadows:
	- MinterRole.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol#49)
	- ERC20.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol#233)
	- Initializable.______gap (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#61)
",N/A,N/A
shadowing-state,High,"ERC20.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol#233) shadows:
	- Initializable.______gap (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#61)
",N/A,N/A
shadowing-state,High,"ERC20MintableUpgradeable.______gap (contracts/ERC20Patched.sol#1751) shadows:
	- MinterRoleUpgradeable.______gap (contracts/ERC20Patched.sol#1712)
	- ERC20Upgradeable.______gap (contracts/ERC20Patched.sol#651)
	- ContextUpgradeable.______gap (contracts/ERC20Patched.sol#290)
",N/A,N/A
shadowing-state,High,"MinterRoleUpgradeable.______gap (contracts/ERC20Patched.sol#1712) shadows:
	- ContextUpgradeable.______gap (contracts/ERC20Patched.sol#290)
",N/A,N/A
shadowing-state,High,"ERC20Upgradeable.______gap (contracts/ERC20Patched.sol#651) shadows:
	- ContextUpgradeable.______gap (contracts/ERC20Patched.sol#290)
",N/A,N/A
unchecked-transfer,High,"Unlock.recordKeyPurchase(uint256,address) (contracts/Unlock.sol#289-366) ignores return value by IMintableERC20(udt).transfer(_referrer,tokensToDistribute - devReward) (contracts/Unlock.sol#354)
","uint256,address) (contracts/Unlock.sol",289-366
unchecked-transfer,High,"Unlock.recordKeyPurchase(uint256,address) (contracts/Unlock.sol#289-366) ignores return value by IMintableERC20(udt).transfer(owner(),devReward) (contracts/Unlock.sol#355)
","uint256,address) (contracts/Unlock.sol",289-366
unchecked-transfer,High,"MixinPurchase.purchase(uint256,address,address,bytes) (contracts/mixins/MixinPurchase.sol#35-109) ignores return value by token.transferFrom(msg.sender,address(this),pricePaid) (contracts/mixins/MixinPurchase.sol#97)
","uint256,address,address,bytes) (contracts/mixins/MixinPurchase.sol",35-109
divide-before-multiply,Medium,"UnlockUtils.uint2Str(uint256) (contracts/UnlockUtils.sol#21-47) performs a multiplication on the result of a division:
	- temp = (48 + uint8(c - c / 10 * 10)) (contracts/UnlockUtils.sol#41)
",uint256) (contracts/UnlockUtils.sol,21-47
divide-before-multiply,Medium,"Unlock.recordKeyPurchase(uint256,address) (contracts/Unlock.sol#289-366) performs a multiplication on the result of a division:
	- tokensToDistribute = (estimatedGasForPurchase * tx.gasprice) * (125 * 10 ** 18) / 100 / udtPrice (contracts/Unlock.sol#325)
	- devReward = tokensToDistribute * 20 / 100 (contracts/Unlock.sol#348)
","uint256,address) (contracts/Unlock.sol",289-366
incorrect-equality,Medium,"ERC20VotesUpgradeable._writeCheckpoint(ERC20VotesUpgradeable.Checkpoint[],function(uint256,uint256) returns(uint256),uint256) (contracts/ERC20Patched.sol#1588-1602) uses a dangerous strict equality:
	- pos > 0 && ckpts[pos - 1].fromBlock == block.number (contracts/ERC20Patched.sol#1597)
","ERC20VotesUpgradeable.Checkpoint[],function(uint256,uint256) returns(uint256),uint256) (contracts/ERC20Patched.sol",1588-1602
incorrect-equality,Medium,"TimelockControllerUpgradeable.isOperationDone(bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#145-147) uses a dangerous strict equality:
	- getTimestamp(id) == _DONE_TIMESTAMP (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#146)
",bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol,145-147
incorrect-equality,Medium,"ERC20VotesUpgradeable._writeCheckpoint(ERC20VotesUpgradeable.Checkpoint[],function(uint256,uint256) returns(uint256),uint256) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol#239-253) uses a dangerous strict equality:
	- pos > 0 && ckpts[pos - 1].fromBlock == block.number (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol#248)
","ERC20VotesUpgradeable.Checkpoint[],function(uint256,uint256) returns(uint256),uint256) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol",239-253
incorrect-equality,Medium,"MixinTransfer.getTransferFee(address,uint256) (contracts/mixins/MixinTransfer.sol#259-282) uses a dangerous strict equality:
	- _time == 0 (contracts/mixins/MixinTransfer.sol#274)
","address,uint256) (contracts/mixins/MixinTransfer.sol",259-282
reentrancy-no-eth,Medium,"Reentrancy in GovernorTimelockControlUpgradeable._cancel(address[],uint256[],bytes[],bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#127-141):
	External calls:
	- _timelock.cancel(_timelockIds[proposalId]) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#136)
	State variables written after the call(s):
	- delete _timelockIds[proposalId] (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#137)
	GovernorTimelockControlUpgradeable._timelockIds (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#23) can be used in cross function reentrancies:
	- GovernorTimelockControlUpgradeable.proposalEta(uint256) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#83-86)
	- GovernorTimelockControlUpgradeable.queue(address[],uint256[],bytes[],bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#91-108)
	- GovernorTimelockControlUpgradeable.state(uint256) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#55-71)
","address[],uint256[],bytes[],bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol",127-141
reentrancy-no-eth,Medium,"Reentrancy in Unlock.recordKeyPurchase(uint256,address) (contracts/Unlock.sol#289-366):
	External calls:
	- valueInETH = oracle.updateAndConsult(tokenAddress,_value,weth) (contracts/Unlock.sol#303)
	State variables written after the call(s):
	- locks[msg.sender].totalSales += valueInETH (contracts/Unlock.sol#313)
	Unlock.locks (contracts/Unlock.sol#68) can be used in cross function reentrancies:
	- Unlock.createLock(bytes) (contracts/Unlock.sol#211-230)
	- Unlock.locks (contracts/Unlock.sol#68)
	- Unlock.onlyFromDeployedLock() (contracts/Unlock.sol#58-61)
	- Unlock.recordKeyPurchase(uint256,address) (contracts/Unlock.sol#289-366)
","uint256,address) (contracts/Unlock.sol",289-366
tautology,Medium,"TestErc20Noop.balanceOf(address) (contracts/test-artifacts/TestErc20Noop.sol#55-62) contains a tautology or contradiction:
	- require(bool,string)(suppressCompileWarning >= 0,Suppressing the Solidity compile warning) (contracts/test-artifacts/TestErc20Noop.sol#60)
",address) (contracts/test-artifacts/TestErc20Noop.sol,55-62
uninitialized-local,Medium,"Unlock.recordKeyPurchase(uint256,address).valueInETH (contracts/Unlock.sol#297) is a local variable never initialized
",N/A,N/A
unused-return,Medium,"Unlock.recordKeyPurchase(uint256,address) (contracts/Unlock.sol#289-366) ignores return value by IMintableERC20(udt).mint(_referrer,tokensToDistribute - devReward) (contracts/Unlock.sol#359)
","uint256,address) (contracts/Unlock.sol",289-366
unused-return,Medium,"ERC1967Upgrade._upgradeBeaconToAndCall(address,bytes,bool) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#182-192) ignores return value by Address.functionDelegateCall(IBeacon(newBeacon).implementation(),data) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#190)
","address,bytes,bool) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",182-192
unused-return,Medium,"ERC1967Upgrade._upgradeToAndCallSecure(address,bytes,bool) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#79-107) ignores return value by Address.functionDelegateCall(newImplementation,abi.encodeWithSignature(upgradeTo(address),oldImplementation)) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#97-100)
","address,bytes,bool) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",79-107
unused-return,Medium,"ERC1967Upgrade._upgradeToAndCallSecure(address,bytes,bool) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#79-107) ignores return value by Address.functionDelegateCall(newImplementation,data) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#89)
","address,bytes,bool) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",79-107
unused-return,Medium,"GovernorUpgradeable._execute(uint256,address[],uint256[],bytes[],bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#237-249) ignores return value by AddressUpgradeable.verifyCallResult(success,returndata,errorMessage) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#247)
","uint256,address[],uint256[],bytes[],bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol",237-249
unused-return,Medium,"ERC1967Upgrade._upgradeToAndCall(address,bytes,bool) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#63-72) ignores return value by Address.functionDelegateCall(newImplementation,data) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#70)
","address,bytes,bool) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",63-72
unused-return,Medium,"Unlock.recordKeyPurchase(uint256,address) (contracts/Unlock.sol#289-366) ignores return value by IMintableERC20(udt).mint(owner(),devReward) (contracts/Unlock.sol#360)
","uint256,address) (contracts/Unlock.sol",289-366
shadowing-local,Low,"ERC20Detailed.initialize(string,string,uint8).decimals (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol#19) shadows:
	- ERC20Detailed.decimals() (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol#52-54) (function)
",) (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol,52-54
shadowing-local,Low,"ERC20Detailed.initialize(string,string,uint8).symbol (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol#19) shadows:
	- ERC20Detailed.symbol() (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol#36-38) (function)
",) (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol,36-38
shadowing-local,Low,"ERC20Detailed.initialize(string,string,uint8).name (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol#19) shadows:
	- ERC20Detailed.name() (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol#28-30) (function)
",) (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol,28-30
shadowing-local,Low,"ERC20PermitUpgradeable.__ERC20Permit_init(string).name (contracts/ERC20Patched.sol#991) shadows:
	- IERC20MetadataUpgradeable.name() (contracts/ERC20Patched.sol#200) (function)
",N/A,N/A
shadowing-local,Low,"ERC20DetailedUpgradeable.initialize(string,string,uint8).decimals (contracts/ERC20Patched.sol#1720) shadows:
	- ERC20DetailedUpgradeable.decimals() (contracts/ERC20Patched.sol#1734-1736) (function)
",) (contracts/ERC20Patched.sol,1734-1736
shadowing-local,Low,"ERC20DetailedUpgradeable.initialize(string,string,uint8).name (contracts/ERC20Patched.sol#1720) shadows:
	- ERC20DetailedUpgradeable.name() (contracts/ERC20Patched.sol#1726-1728) (function)
",) (contracts/ERC20Patched.sol,1726-1728
shadowing-local,Low,"ERC20DetailedUpgradeable.initialize(string,string,uint8).symbol (contracts/ERC20Patched.sol#1720) shadows:
	- ERC20DetailedUpgradeable.symbol() (contracts/ERC20Patched.sol#1730-1732) (function)
",) (contracts/ERC20Patched.sol,1730-1732
shadowing-local,Low,"ERC20PermitUpgradeable.__ERC20Permit_init_unsafe(string).name (contracts/ERC20Patched.sol#1001) shadows:
	- IERC20MetadataUpgradeable.name() (contracts/ERC20Patched.sol#200) (function)
",N/A,N/A
shadowing-local,Low,"ERC20PermitUpgradeable.__ERC20Permit_init_unchained(string).name (contracts/ERC20Patched.sol#997) shadows:
	- IERC20MetadataUpgradeable.name() (contracts/ERC20Patched.sol#200) (function)
",N/A,N/A
shadowing-local,Low,"UnlockProtocolGovernor.initialize(ERC20VotesUpgradeable,TimelockControllerUpgradeable)._timelock (contracts/UnlockProtocolGovernor.sol#22) shadows:
	- GovernorTimelockControlUpgradeable._timelock (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#22) (state variable)
",N/A,N/A
shadowing-local,Low,"ERC20PermitUpgradeable.__ERC20Permit_init_unchained(string).name (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#41) shadows:
	- ERC20Upgradeable.name() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#67-69) (function)
	- IERC20MetadataUpgradeable.name() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#16) (function)
",) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol,67-69
shadowing-local,Low,"ERC20PermitUpgradeable.__ERC20Permit_init(string).name (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#35) shadows:
	- ERC20Upgradeable.name() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#67-69) (function)
	- IERC20MetadataUpgradeable.name() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#16) (function)
",) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol,67-69
events-access,Low,"MixinLockCore.updateBeneficiary(address) (contracts/mixins/MixinLockCore.sol#192-199) should emit an event for: 
	- beneficiary = _beneficiary (contracts/mixins/MixinLockCore.sol#198) 
",address) (contracts/mixins/MixinLockCore.sol,192-199
missing-zero-check,Low,"UnlockOwnable.__initializeOwnable(address).sender (contracts/utils/UnlockOwnable.sol#30) lacks a zero-check on :
		- _owner = sender (contracts/utils/UnlockOwnable.sol#31)
",N/A,N/A
missing-zero-check,Low,"Unlock.setLockTemplate(address)._publicLockAddress (contracts/Unlock.sol#424) lacks a zero-check on :
		- publicLockAddress = _publicLockAddress (contracts/Unlock.sol#435)
",N/A,N/A
missing-zero-check,Low,"Unlock.configUnlock(address,address,uint256,string,string,uint256)._udt (contracts/Unlock.sol#398) lacks a zero-check on :
		- udt = _udt (contracts/Unlock.sol#407)
",N/A,N/A
missing-zero-check,Low,"Unlock.configUnlock(address,address,uint256,string,string,uint256)._weth (contracts/Unlock.sol#399) lacks a zero-check on :
		- weth = _weth (contracts/Unlock.sol#408)
",N/A,N/A
incorrect-modifier,Low,"Modifier Migrations.restricted() (contracts/Migrations.sol#9-11) does not always execute _; or revert
",) (contracts/Migrations.sol,9-11
incorrect-modifier,Low,"Modifier TransparentUpgradeableProxy.ifAdmin() (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#45-51) does not always execute _; or revert
",) (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol,45-51
calls-loop,Low,"TimelockControllerUpgradeable._call(bytes32,uint256,address,uint256,bytes) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#336-347) has external calls inside a loop: (success,None) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#343)
","bytes32,uint256,address,uint256,bytes) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol",336-347
reentrancy-benign,Low,"Reentrancy in Unlock.createLock(bytes) (contracts/Unlock.sol#211-230):
	External calls:
	- proxy = new TransparentUpgradeableProxy(publicLockAddress,proxyAdminAddress,data) (contracts/Unlock.sol#219)
	State variables written after the call(s):
	- locks[newLock] = LockBalances({deployed:true,totalSales:0,yieldedDiscountTokens:0}) (contracts/Unlock.sol#223-225)
",bytes) (contracts/Unlock.sol,211-230
reentrancy-benign,Low,"Reentrancy in Unlock.setLockTemplate(address) (contracts/Unlock.sol#423-438):
	External calls:
	- IPublicLock(_publicLockAddress).initialize(address(this),0,address(0),0,0,) (contracts/Unlock.sol#430-432)
	- IPublicLock(_publicLockAddress).renounceLockManager() (contracts/Unlock.sol#433)
	State variables written after the call(s):
	- publicLockAddress = _publicLockAddress (contracts/Unlock.sol#435)
",address) (contracts/Unlock.sol,423-438
reentrancy-benign,Low,"Reentrancy in Unlock.recordKeyPurchase(uint256,address) (contracts/Unlock.sol#289-366):
	External calls:
	- valueInETH = oracle.updateAndConsult(tokenAddress,_value,weth) (contracts/Unlock.sol#303)
	State variables written after the call(s):
	- grossNetworkProduct = grossNetworkProduct + valueInETH (contracts/Unlock.sol#311)
","uint256,address) (contracts/Unlock.sol",289-366
reentrancy-events,Low,"Reentrancy in ERC1967Upgrade._upgradeToAndCallSecure(address,bytes,bool) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#79-107):
	External calls:
	- Address.functionDelegateCall(newImplementation,data) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#89)
	- Address.functionDelegateCall(newImplementation,abi.encodeWithSignature(upgradeTo(address),oldImplementation)) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#97-100)
	Event emitted after the call(s):
	- Upgraded(newImplementation) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#55)
		- _upgradeTo(newImplementation) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#105)
","address,bytes,bool) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",79-107
reentrancy-events,Low,"Reentrancy in GovernorTimelockControlUpgradeable.queue(address[],uint256[],bytes[],bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#91-108):
	External calls:
	- _timelock.scheduleBatch(targets,values,calldatas,0,descriptionHash,delay) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#103)
	Event emitted after the call(s):
	- ProposalQueued(proposalId,block.timestamp + delay) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#105)
","address[],uint256[],bytes[],bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol",91-108
reentrancy-events,Low,"Reentrancy in Unlock.createLock(bytes) (contracts/Unlock.sol#211-230):
	External calls:
	- proxy = new TransparentUpgradeableProxy(publicLockAddress,proxyAdminAddress,data) (contracts/Unlock.sol#219)
	Event emitted after the call(s):
	- NewLock(msg.sender,newLock) (contracts/Unlock.sol#228)
",bytes) (contracts/Unlock.sol,211-230
reentrancy-events,Low,"Reentrancy in Unlock.setLockTemplate(address) (contracts/Unlock.sol#423-438):
	External calls:
	- IPublicLock(_publicLockAddress).initialize(address(this),0,address(0),0,0,) (contracts/Unlock.sol#430-432)
	- IPublicLock(_publicLockAddress).renounceLockManager() (contracts/Unlock.sol#433)
	Event emitted after the call(s):
	- SetLockTemplate(_publicLockAddress) (contracts/Unlock.sol#437)
",address) (contracts/Unlock.sol,423-438
reentrancy-events,Low,"Reentrancy in Unlock.upgradeLock(address,uint16) (contracts/Unlock.sol#237-255):
	External calls:
	- proxyAdmin.upgrade(proxy,impl) (contracts/Unlock.sol#251)
	Event emitted after the call(s):
	- LockUpgraded(lockAddress,version) (contracts/Unlock.sol#253)
","address,uint16) (contracts/Unlock.sol",237-255
reentrancy-events,Low,"Reentrancy in TimelockControllerUpgradeable._call(bytes32,uint256,address,uint256,bytes) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#336-347):
	External calls:
	- (success,None) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#343)
	Event emitted after the call(s):
	- CallExecuted(id,index,target,value,data) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#346)
","bytes32,uint256,address,uint256,bytes) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol",336-347
timestamp,Low,"ERC20PermitUpgradeable.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (contracts/ERC20Patched.sol#1008-1027) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,ERC20Permit: expired deadline) (contracts/ERC20Patched.sol#1017)
","address,address,uint256,uint256,uint8,bytes32,bytes32) (contracts/ERC20Patched.sol",1008-1027
timestamp,Low,"ERC20VotesUpgradeable.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (contracts/ERC20Patched.sol#1495-1512) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= expiry,ERC20Votes: signature expired) (contracts/ERC20Patched.sol#1503)
","address,uint256,uint256,uint8,bytes32,bytes32) (contracts/ERC20Patched.sol",1495-1512
timestamp,Low,"TimelockControllerUpgradeable._beforeCall(bytes32,bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#318-321) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(predecessor == bytes32(0) || isOperationDone(predecessor),TimelockController: missing dependency) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#320)
","bytes32,bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol",318-321
timestamp,Low,"TimelockControllerUpgradeable.isOperation(bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#123-125) uses timestamp for comparisons
	Dangerous comparisons:
	- getTimestamp(id) > 0 (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#124)
",bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol,123-125
timestamp,Low,"MixinTransfer.shareKey(address,uint256,uint256) (contracts/mixins/MixinTransfer.sol#47-107) uses timestamp for comparisons
	Dangerous comparisons:
	- timePlusFee < timeRemaining (contracts/mixins/MixinTransfer.sol#70)
	- toKey.expirationTimestamp <= block.timestamp (contracts/mixins/MixinTransfer.sol#92)
","address,uint256,uint256) (contracts/mixins/MixinTransfer.sol",47-107
timestamp,Low,"MixinTransfer.getTransferFee(address,uint256) (contracts/mixins/MixinTransfer.sol#259-282) uses timestamp for comparisons
	Dangerous comparisons:
	- _time == 0 (contracts/mixins/MixinTransfer.sol#274)
","address,uint256) (contracts/mixins/MixinTransfer.sol",259-282
timestamp,Low,"TimelockControllerUpgradeable.isOperationDone(bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#145-147) uses timestamp for comparisons
	Dangerous comparisons:
	- getTimestamp(id) == _DONE_TIMESTAMP (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#146)
",bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol,145-147
timestamp,Low,"MixinRefunds._getCancelAndRefundValue(address) (contracts/mixins/MixinRefunds.sol#133-159) uses timestamp for comparisons
	Dangerous comparisons:
	- timeRemaining + freeTrialLength >= expirationDuration (contracts/mixins/MixinRefunds.sol#143)
	- freeTrialLength == 0 || timeRemaining + freeTrialLength < expirationDuration (contracts/mixins/MixinRefunds.sol#150)
	- refund > penalty (contracts/mixins/MixinRefunds.sol#153)
",address) (contracts/mixins/MixinRefunds.sol,133-159
timestamp,Low,"TimersUpgradeable.isExpired(TimersUpgradeable.Timestamp) (node_modules/@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol#37-39) uses timestamp for comparisons
	Dangerous comparisons:
	- isStarted(timer) && timer._deadline <= block.timestamp (node_modules/@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol#38)
",TimersUpgradeable.Timestamp) (node_modules/@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol,37-39
timestamp,Low,"TimelockControllerUpgradeable.isOperationPending(bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#130-132) uses timestamp for comparisons
	Dangerous comparisons:
	- getTimestamp(id) > _DONE_TIMESTAMP (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#131)
",bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol,130-132
timestamp,Low,"MixinKeys.getHasValidKey(address) (contracts/mixins/MixinKeys.sol#145-153) uses timestamp for comparisons
	Dangerous comparisons:
	- keyByOwner[_keyOwner].expirationTimestamp > block.timestamp (contracts/mixins/MixinKeys.sol#152)
",address) (contracts/mixins/MixinKeys.sol,145-153
timestamp,Low,"MixinTransfer.transfer(address,uint256) (contracts/mixins/MixinTransfer.sol#174-194) uses timestamp for comparisons
	Dangerous comparisons:
	- maxTimeToSend < timeRemaining (contracts/mixins/MixinTransfer.sol#183)
","address,uint256) (contracts/mixins/MixinTransfer.sol",174-194
timestamp,Low,"MixinRefunds._cancelAndRefund(address,uint256) (contracts/mixins/MixinRefunds.sol#104-126) uses timestamp for comparisons
	Dangerous comparisons:
	- refund > 0 (contracts/mixins/MixinRefunds.sol#116)
","address,uint256) (contracts/mixins/MixinRefunds.sol",104-126
timestamp,Low,"MixinTransfer.transferFrom(address,address,uint256) (contracts/mixins/MixinTransfer.sol#109-166) uses timestamp for comparisons
	Dangerous comparisons:
	- previousExpiration <= block.timestamp (contracts/mixins/MixinTransfer.sol#138)
","address,address,uint256) (contracts/mixins/MixinTransfer.sol",109-166
timestamp,Low,"ERC20PermitUpgradeable.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#47-66) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,ERC20Permit: expired deadline) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#56)
","address,address,uint256,uint256,uint8,bytes32,bytes32) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",47-66
timestamp,Low,"ERC20VotesUpgradeable.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol#146-163) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= expiry,ERC20Votes: signature expired) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol#154)
","address,uint256,uint256,uint8,bytes32,bytes32) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol",146-163
timestamp,Low,"TimelockControllerUpgradeable.isOperationReady(bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#137-140) uses timestamp for comparisons
	Dangerous comparisons:
	- timestamp > _DONE_TIMESTAMP && timestamp <= block.timestamp (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#139)
",bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol,137-140
timestamp,Low,"MixinPurchase.purchase(uint256,address,address,bytes) (contracts/mixins/MixinPurchase.sol#35-109) uses timestamp for comparisons
	Dangerous comparisons:
	- toKey.expirationTimestamp > block.timestamp (contracts/mixins/MixinPurchase.sol#66)
","uint256,address,address,bytes) (contracts/mixins/MixinPurchase.sol",35-109
timestamp,Low,"TimersUpgradeable.isPending(TimersUpgradeable.Timestamp) (node_modules/@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol#33-35) uses timestamp for comparisons
	Dangerous comparisons:
	- timer._deadline > block.timestamp (node_modules/@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol#34)
",TimersUpgradeable.Timestamp) (node_modules/@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol,33-35
assembly,Informational,"Initializable.isConstructor() (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#48-58) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#56)
",) (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol,48-58
assembly,Informational,"ECDSAUpgradeable.recover(bytes32,bytes) (contracts/ERC20Patched.sol#684-713) uses assembly
	- INLINE ASM (contracts/ERC20Patched.sol#694-698)
	- INLINE ASM (contracts/ERC20Patched.sol#705-708)
","bytes32,bytes) (contracts/ERC20Patched.sol",684-713
assembly,Informational,"ECDSAUpgradeable.recover(bytes32,bytes32,bytes32) (contracts/ERC20Patched.sol#722-734) uses assembly
	- INLINE ASM (contracts/ERC20Patched.sol#729-732)
","bytes32,bytes32,bytes32) (contracts/ERC20Patched.sol",722-734
assembly,Informational,"StorageSlot.getBytes32Slot(bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#69-73) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#70-72)
",bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol,69-73
assembly,Informational,"console._sendLogPayload(bytes) (node_modules/hardhat/console.sol#7-14) uses assembly
	- INLINE ASM (node_modules/hardhat/console.sol#10-13)
",bytes) (node_modules/hardhat/console.sol,7-14
assembly,Informational,"StorageSlot.getUint256Slot(bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#78-82) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#79-81)
",bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol,78-82
assembly,Informational,"Proxy._delegate(address) (node_modules/@openzeppelin/contracts/proxy/Proxy.sol#21-44) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/proxy/Proxy.sol#22-43)
",address) (node_modules/@openzeppelin/contracts/proxy/Proxy.sol,21-44
assembly,Informational,"Address.isContract(address) (node_modules/@openzeppelin/contracts/utils/Address.sol#26-36) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Address.sol#32-34)
",address) (node_modules/@openzeppelin/contracts/utils/Address.sol,26-36
assembly,Informational,"StorageSlot.getAddressSlot(bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#51-55) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#52-54)
",bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol,51-55
assembly,Informational,"AddressUpgradeable.verifyCallResult(bool,bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#168-188) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#180-183)
","bool,bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",168-188
assembly,Informational,"Address.verifyCallResult(bool,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#195-215) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Address.sol#207-210)
","bool,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",195-215
assembly,Informational,"StorageSlot.getBooleanSlot(bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#60-64) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#61-63)
",bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol,60-64
assembly,Informational,"ECDSAUpgradeable.tryRecover(bytes32,bytes32,bytes32) (node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol#112-124) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol#119-122)
","bytes32,bytes32,bytes32) (node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",112-124
assembly,Informational,"ECDSAUpgradeable.tryRecover(bytes32,bytes) (node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol#54-83) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol#64-68)
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol#75-78)
","bytes32,bytes) (node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",54-83
assembly,Informational,"AddressUpgradeable.isContract(address) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#26-36) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#32-34)
",address) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol,26-36
assembly,Informational,"Clone2Factory.createClone2(address,bytes32) (contracts/utils/Clone2Factory.sol#20-71) uses assembly
	- INLINE ASM (contracts/utils/Clone2Factory.sol#27-67)
","address,bytes32) (contracts/utils/Clone2Factory.sol",20-71
boolean-equal,Informational,"Unlock.upgradeLock(address,uint16) (contracts/Unlock.sol#237-255) compares to a boolean constant:
	-require(bool,string)(_isLockManager(lockAddress,msg.sender) == true,caller is not a manager of this lock) (contracts/Unlock.sol#241)
","address,uint16) (contracts/Unlock.sol",237-255
pragma,Informational,"2 different versions of Solidity are used:
	- Version constraint >=0.5.17<0.9.0 is used by:
		->=0.5.17<0.9.0 (contracts/interfaces/IPublicLock.sol#2)
		->=0.5.17<0.9.0 (contracts/interfaces/hooks/ILockKeyCancelHook.sol#2)
		->=0.5.17<0.9.0 (contracts/interfaces/hooks/ILockKeyPurchaseHook.sol#2)
	- Version constraint 0.5.17 is used by:
		-0.5.17 (contracts/test-artifacts/TestEventHooks.sol#1)
",N/A,N/A
pragma,Informational,"3 different versions of Solidity are used:
	- Version constraint ^0.5.0 is used by:
		-^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol#1)
		-^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol#1)
		-^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol#1)
		-^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol#1)
		-^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol#1)
		-^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol#1)
		-^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol#1)
		-^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol#1)
		-^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol#1)
		-^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol#1)
		-^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol#1)
	- Version constraint >=0.4.24<0.7.0 is used by:
		->=0.4.24<0.7.0 (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#1)
	- Version constraint 0.5.17 is used by:
		-0.5.17 (contracts/UnlockDiscountToken.sol#2)
		-0.5.17 (contracts/test-artifacts/TestErc20PausableToken.sol#1)
",N/A,N/A
pragma,Informational,"7 different versions of Solidity are used:
	- Version constraint ^0.8.0 is used by:
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165StorageUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/access/Ownable.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/proxy/Proxy.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/Address.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/Context.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#3)
		-^0.8.0 (contracts/mixins/MixinDisable.sol#2)
		-^0.8.0 (contracts/mixins/MixinERC721Enumerable.sol#2)
		-^0.8.0 (contracts/mixins/MixinFunds.sol#2)
		-^0.8.0 (contracts/mixins/MixinGrantKeys.sol#2)
		-^0.8.0 (contracts/mixins/MixinKeys.sol#2)
		-^0.8.0 (contracts/mixins/MixinLockCore.sol#2)
		-^0.8.0 (contracts/mixins/MixinLockMetadata.sol#2)
		-^0.8.0 (contracts/mixins/MixinPurchase.sol#2)
		-^0.8.0 (contracts/mixins/MixinRefunds.sol#2)
		-^0.8.0 (contracts/mixins/MixinRoles.sol#2)
		-^0.8.0 (contracts/mixins/MixinTransfer.sol#2)
		-^0.8.0 (contracts/test-artifacts/TestProxyAdmin.sol#2)
		-^0.8.0 (contracts/test-artifacts/TestPublicLockUpgraded.sol#2)
		-^0.8.0 (contracts/utils/UnlockOwnable.sol#4)
	- Version constraint ^0.8.2 is used by:
		-^0.8.2 (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#3)
		-^0.8.2 (contracts/Unlock.sol#2)
		-^0.8.2 (contracts/UnlockProtocolGovernor.sol#2)
	- Version constraint ^0.8.4 is used by:
		-^0.8.4 (contracts/PublicLock.sol#2)
		-^0.8.4 (contracts/UnlockProtocolTimelock.sol#2)
	- Version constraint >=0.5.17<0.8.5 is used by:
		->=0.5.17<0.8.5 (contracts/UnlockUtils.sol#2)
		->=0.5.17<0.8.5 (contracts/mocks/KeyManagerMock.sol#2)
		->=0.5.17<0.8.5 (contracts/mocks/TimeMachineMock.sol#2)
		->=0.5.17<0.8.5 (contracts/mocks/UnlockUtilsMock.sol#2)
	- Version constraint >=0.5.17<0.9.0 is used by:
		->=0.5.17<0.9.0 (contracts/interfaces/IMintableERC20.sol#2)
		->=0.5.17<0.9.0 (contracts/interfaces/IPublicLock.sol#2)
		->=0.5.17<0.9.0 (contracts/interfaces/IUnlock.sol#2)
		->=0.5.17<0.9.0 (contracts/interfaces/hooks/ILockKeyCancelHook.sol#2)
		->=0.5.17<0.9.0 (contracts/interfaces/hooks/ILockKeyPurchaseHook.sol#2)
	- Version constraint >=0.4.22<0.9.0 is used by:
		->=0.4.22<0.9.0 (node_modules/hardhat/console.sol#2)
	- Version constraint >=0.5.0 is used by:
		->=0.5.0 (node_modules/hardlydifficult-eth/contracts/protocols/Uniswap/IUniswapOracle.sol#3)
",N/A,N/A
costly-loop,Informational,"MixinKeys._assignNewTokenId(MixinKeys.Key) (contracts/mixins/MixinKeys.sol#311-322) has costly operations inside a loop:
	- _totalSupply ++ (contracts/mixins/MixinKeys.sol#318)
",MixinKeys.Key) (contracts/mixins/MixinKeys.sol,311-322
dead-code,Informational,"ContextUpgradeable._msgData() (contracts/ERC20Patched.sol#287-289) is never used and should be removed
",) (contracts/ERC20Patched.sol,287-289
dead-code,Informational,"ERC20VotesUpgradeable._burn(address,uint256) (contracts/ERC20Patched.sol#1534-1538) is never used and should be removed
","address,uint256) (contracts/ERC20Patched.sol",1534-1538
dead-code,Informational,"EIP712Upgradeable.__EIP712_init(string,string) (contracts/ERC20Patched.sol#840-842) is never used and should be removed
","string,string) (contracts/ERC20Patched.sol",840-842
dead-code,Informational,"ERC20VotesUpgradeable._subtract(uint256,uint256) (contracts/ERC20Patched.sol#1608-1610) is never used and should be removed
","uint256,uint256) (contracts/ERC20Patched.sol",1608-1610
dead-code,Informational,"ERC20VotesUpgradeable._maxSupply() (contracts/ERC20Patched.sol#1517-1519) is never used and should be removed
",) (contracts/ERC20Patched.sol,1517-1519
dead-code,Informational,"UnlockDiscountTokenV2._burn(address,uint256) (contracts/UnlockDiscountTokenV2.sol#49-51) is never used and should be removed
","address,uint256) (contracts/UnlockDiscountTokenV2.sol",49-51
dead-code,Informational,"ERC20VotesUpgradeable._add(uint256,uint256) (contracts/ERC20Patched.sol#1604-1606) is never used and should be removed
","uint256,uint256) (contracts/ERC20Patched.sol",1604-1606
dead-code,Informational,"ERC20Upgradeable._burn(address,uint256) (contracts/ERC20Patched.sol#570-585) is never used and should be removed
","address,uint256) (contracts/ERC20Patched.sol",570-585
dead-code,Informational,"ERC20Upgradeable.__ERC20_init(string,string) (contracts/ERC20Patched.sol#344-347) is never used and should be removed
","string,string) (contracts/ERC20Patched.sol",344-347
dead-code,Informational,"ERC20VotesCompUpgradeable.__ERC20VotesComp_init_unchained() (contracts/ERC20Patched.sol#1640-1641) is never used and should be removed
",) (contracts/ERC20Patched.sol,1640-1641
dead-code,Informational,"ERC20VotesUpgradeable.__ERC20Votes_init_unchained() (contracts/ERC20Patched.sol#1370-1371) is never used and should be removed
",) (contracts/ERC20Patched.sol,1370-1371
dead-code,Informational,"ERC20Upgradeable.__ERC20_init_unchained(string,string) (contracts/ERC20Patched.sol#349-352) is never used and should be removed
","string,string) (contracts/ERC20Patched.sol",349-352
dead-code,Informational,"ContextUpgradeable.__Context_init() (contracts/ERC20Patched.sol#277-279) is never used and should be removed
",) (contracts/ERC20Patched.sol,277-279
dead-code,Informational,"UnlockProtocolGovernor._cancel(address[],uint256[],bytes[],bytes32) (contracts/UnlockProtocolGovernor.sol#108-114) is never used and should be removed
","address[],uint256[],bytes[],bytes32) (contracts/UnlockProtocolGovernor.sol",108-114
solc-version,Informational,"Version constraint 0.5.17 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow.
It is used by:
	- 0.5.17 (contracts/test-artifacts/TestEventHooks.sol#1)
",N/A,N/A
solc-version,Informational,"solc-0.5.17 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
",N/A,N/A
solc-version,Informational,"Version constraint >=0.5.17<0.9.0 is too complex.
It is used by:
	- >=0.5.17<0.9.0 (contracts/interfaces/IPublicLock.sol#2)
	- >=0.5.17<0.9.0 (contracts/interfaces/hooks/ILockKeyCancelHook.sol#2)
	- >=0.5.17<0.9.0 (contracts/interfaces/hooks/ILockKeyPurchaseHook.sol#2)
",N/A,N/A
solc-version,Informational,"Version constraint 0.5.17 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow.
It is used by:
	- 0.5.17 (contracts/Migrations.sol#2)
",N/A,N/A
solc-version,Informational,"Version constraint 0.5.17 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow.
It is used by:
	- 0.5.17 (contracts/test-artifacts/TestErc20Noop.sol#1)
",N/A,N/A
solc-version,Informational,"Version constraint 0.5.17 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow.
It is used by:
	- 0.5.17 (contracts/UnlockDiscountToken.sol#2)
	- 0.5.17 (contracts/test-artifacts/TestErc20PausableToken.sol#1)
",N/A,N/A
solc-version,Informational,"Version constraint >=0.4.24<0.7.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData.
It is used by:
	- >=0.4.24<0.7.0 (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#1)
",N/A,N/A
solc-version,Informational,"Version constraint ^0.5.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor
	- IncorrectEventSignatureInLibraries
	- ABIEncoderV2PackedStorage.
It is used by:
	- ^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol#1)
	- ^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol#1)
	- ^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol#1)
	- ^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol#1)
	- ^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol#1)
	- ^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol#1)
	- ^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol#1)
	- ^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol#1)
	- ^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol#1)
	- ^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol#1)
	- ^0.5.0 (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol#1)
",N/A,N/A
solc-version,Informational,"Version constraint 0.5.17 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow.
It is used by:
	- 0.5.17 (contracts/test-artifacts/TestNoop.sol#1)
",N/A,N/A
solc-version,Informational,"solc-0.6.12 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
",N/A,N/A
solc-version,Informational,"Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.0 (contracts/ERC20Patched.sol#3)
	- ^0.8.0 (contracts/UnlockDiscountTokenV2.sol#2)
",N/A,N/A
solc-version,Informational,"Version constraint >=0.5.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor
	- IncorrectEventSignatureInLibraries
	- ABIEncoderV2PackedStorage.
It is used by:
	- >=0.5.0 (node_modules/hardlydifficult-eth/contracts/protocols/Uniswap/IUniswapOracle.sol#3)
",N/A,N/A
solc-version,Informational,"Version constraint ^0.8.4 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables.
It is used by:
	- ^0.8.4 (contracts/PublicLock.sol#2)
	- ^0.8.4 (contracts/UnlockProtocolTimelock.sol#2)
",N/A,N/A
solc-version,Informational,"Version constraint >=0.4.22<0.9.0 is too complex.
It is used by:
	- >=0.4.22<0.9.0 (node_modules/hardhat/console.sol#2)
",N/A,N/A
solc-version,Informational,"Version constraint >=0.5.17<0.8.5 is too complex.
It is used by:
	- >=0.5.17<0.8.5 (contracts/UnlockUtils.sol#2)
	- >=0.5.17<0.8.5 (contracts/mocks/KeyManagerMock.sol#2)
	- >=0.5.17<0.8.5 (contracts/mocks/TimeMachineMock.sol#2)
	- >=0.5.17<0.8.5 (contracts/mocks/UnlockUtilsMock.sol#2)
",N/A,N/A
solc-version,Informational,"Version constraint ^0.8.2 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.2 (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol#3)
	- ^0.8.2 (contracts/Unlock.sol#2)
	- ^0.8.2 (contracts/UnlockProtocolGovernor.sol#2)
",N/A,N/A
solc-version,Informational,"Version constraint >=0.5.17<0.9.0 is too complex.
It is used by:
	- >=0.5.17<0.9.0 (contracts/interfaces/IMintableERC20.sol#2)
	- >=0.5.17<0.9.0 (contracts/interfaces/IPublicLock.sol#2)
	- >=0.5.17<0.9.0 (contracts/interfaces/IUnlock.sol#2)
	- >=0.5.17<0.9.0 (contracts/interfaces/hooks/ILockKeyCancelHook.sol#2)
	- >=0.5.17<0.9.0 (contracts/interfaces/hooks/ILockKeyPurchaseHook.sol#2)
",N/A,N/A
solc-version,Informational,"Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165StorageUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/access/Ownable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/proxy/Proxy.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/Address.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/Context.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#3)
	- ^0.8.0 (contracts/mixins/MixinDisable.sol#2)
	- ^0.8.0 (contracts/mixins/MixinERC721Enumerable.sol#2)
	- ^0.8.0 (contracts/mixins/MixinFunds.sol#2)
	- ^0.8.0 (contracts/mixins/MixinGrantKeys.sol#2)
	- ^0.8.0 (contracts/mixins/MixinKeys.sol#2)
	- ^0.8.0 (contracts/mixins/MixinLockCore.sol#2)
	- ^0.8.0 (contracts/mixins/MixinLockMetadata.sol#2)
	- ^0.8.0 (contracts/mixins/MixinPurchase.sol#2)
	- ^0.8.0 (contracts/mixins/MixinRefunds.sol#2)
	- ^0.8.0 (contracts/mixins/MixinRoles.sol#2)
	- ^0.8.0 (contracts/mixins/MixinTransfer.sol#2)
	- ^0.8.0 (contracts/test-artifacts/TestProxyAdmin.sol#2)
	- ^0.8.0 (contracts/test-artifacts/TestPublicLockUpgraded.sol#2)
	- ^0.8.0 (contracts/utils/UnlockOwnable.sol#4)
",N/A,N/A
solc-version,Informational,"Version constraint ^0.8.2 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.2 (contracts/utils/Clone2Factory.sol#2)
",N/A,N/A
low-level-calls,Informational,"Low level call in GovernorUpgradeable._execute(uint256,address[],uint256[],bytes[],bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#237-249):
	- (success,returndata) = targets[i].call{value: values[i]}(calldatas[i]) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#246)
","uint256,address[],uint256[],bytes[],bytes32) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol",237-249
low-level-calls,Informational,"Low level call in TimelockControllerUpgradeable._call(bytes32,uint256,address,uint256,bytes) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#336-347):
	- (success,None) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#343)
","bytes32,uint256,address,uint256,bytes) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol",336-347
low-level-calls,Informational,"Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#151-160):
	- (success,returndata) = target.staticcall(data) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#158)
","address,bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",151-160
low-level-calls,Informational,"Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#122-133):
	- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#131)
","address,bytes,uint256,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",122-133
low-level-calls,Informational,"Low level call in ProxyAdmin.getProxyAdmin(TransparentUpgradeableProxy) (node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol#35-41):
	- (success,returndata) = address(proxy).staticcall(0xf851a440) (node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol#38)
",TransparentUpgradeableProxy) (node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol,35-41
low-level-calls,Informational,"Low level call in Address.sendValue(address,uint256) (node_modules/@openzeppelin/contracts/utils/Address.sol#54-59):
	- (success,None) = recipient.call{value: amount}() (node_modules/@openzeppelin/contracts/utils/Address.sol#57)
","address,uint256) (node_modules/@openzeppelin/contracts/utils/Address.sol",54-59
low-level-calls,Informational,"Low level call in Address.functionStaticCall(address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#151-160):
	- (success,returndata) = target.staticcall(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#158)
","address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",151-160
low-level-calls,Informational,"Low level call in AddressUpgradeable.sendValue(address,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#54-59):
	- (success,None) = recipient.call{value: amount}() (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#57)
","address,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",54-59
low-level-calls,Informational,"Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#122-133):
	- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#131)
","address,bytes,uint256,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",122-133
low-level-calls,Informational,"Low level call in Address.functionDelegateCall(address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#178-187):
	- (success,returndata) = target.delegatecall(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#185)
","address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",178-187
low-level-calls,Informational,"Low level call in ProxyAdmin.getProxyImplementation(TransparentUpgradeableProxy) (node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol#20-26):
	- (success,returndata) = address(proxy).staticcall(0x5c60da1b) (node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol#23)
",TransparentUpgradeableProxy) (node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol,20-26
missing-inheritance,Informational,"TransparentUpgradeableProxy (node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol#28-124) should inherit from IBeacon (node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol#8-15)
",node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol,28-124
naming-convention,Informational,"Function IPublicLock.KEY_GRANTER_ROLE() (contracts/interfaces/IPublicLock.sol#36) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter TestEventHooks.onKeyPurchase(address,address,address,bytes,uint256,uint256)._from (contracts/test-artifacts/TestEventHooks.sol#42) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter TestEventHooks.onKeyPurchase(address,address,address,bytes,uint256,uint256)._referrer (contracts/test-artifacts/TestEventHooks.sol#44) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter TestEventHooks.configure(bool,uint256)._discount (contracts/test-artifacts/TestEventHooks.sol#34) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter TestEventHooks.onKeyCancel(address,address,uint256)._operator (contracts/test-artifacts/TestEventHooks.sol#74) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter TestEventHooks.onKeyCancel(address,address,uint256)._to (contracts/test-artifacts/TestEventHooks.sol#75) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter TestEventHooks.onKeyPurchase(address,address,address,bytes,uint256,uint256)._minKeyPrice (contracts/test-artifacts/TestEventHooks.sol#46) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function IPublicLock.DEFAULT_ADMIN_ROLE() (contracts/interfaces/IPublicLock.sol#35) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter TestEventHooks.onKeyPurchase(address,address,address,bytes,uint256,uint256)._recipient (contracts/test-artifacts/TestEventHooks.sol#43) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter TestEventHooks.onKeyPurchase(address,address,address,bytes,uint256,uint256)._pricePaid (contracts/test-artifacts/TestEventHooks.sol#47) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter TestEventHooks.configure(bool,uint256)._isPurchaseSupported (contracts/test-artifacts/TestEventHooks.sol#33) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter TestEventHooks.onKeyCancel(address,address,uint256)._refund (contracts/test-artifacts/TestEventHooks.sol#76) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function IPublicLock.LOCK_MANAGER_ROLE() (contracts/interfaces/IPublicLock.sol#37) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable ERC20.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol#233) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockDiscountToken.initialize(address)._minter (contracts/UnlockDiscountToken.sol#20) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable PauserRole.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol#49) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable ERC20Detailed.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol#56) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable ERC20Mintable.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol#30) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable Initializable.______gap (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#61) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable MinterRole.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol#49) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable ERC20Pausable.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol#40) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable Pausable.______gap (node_modules/@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol#79) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function ERC20PermitUpgradeable.__ERC20Permit_init(string) (contracts/ERC20Patched.sol#991-995) is not in mixedCase
",string) (contracts/ERC20Patched.sol,991-995
naming-convention,Informational,"Function IERC20PermitUpgradeable.DOMAIN_SEPARATOR() (contracts/ERC20Patched.sol#100) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable EIP712Upgradeable.__gap (contracts/ERC20Patched.sol#911) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable ContextUpgradeable.______gap (contracts/ERC20Patched.sol#290) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function ERC20VotesCompUpgradeable.__ERC20VotesComp_init_unchained() (contracts/ERC20Patched.sol#1640-1641) is not in mixedCase
",) (contracts/ERC20Patched.sol,1640-1641
naming-convention,Informational,"Variable EIP712Upgradeable._HASHED_NAME (contracts/ERC20Patched.sol#822) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function EIP712Upgradeable.__EIP712_init(string,string) (contracts/ERC20Patched.sol#840-842) is not in mixedCase
","string,string) (contracts/ERC20Patched.sol",840-842
naming-convention,Informational,"Function ERC20VotesUpgradeable.__ERC20Votes_init_unchained() (contracts/ERC20Patched.sol#1370-1371) is not in mixedCase
",) (contracts/ERC20Patched.sol,1370-1371
naming-convention,Informational,"Function ERC20PermitUpgradeable.__ERC20Permit_init_unchained(string) (contracts/ERC20Patched.sol#997-999) is not in mixedCase
",string) (contracts/ERC20Patched.sol,997-999
naming-convention,Informational,"Variable ERC20PermitUpgradeable._PERMIT_TYPEHASH (contracts/ERC20Patched.sol#984) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable MinterRoleUpgradeable.______gap (contracts/ERC20Patched.sol#1712) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable ERC20VotesUpgradeable.__gap (contracts/ERC20Patched.sol#1611) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function ERC20Upgradeable.__ERC20_init_unchained(string,string) (contracts/ERC20Patched.sol#349-352) is not in mixedCase
","string,string) (contracts/ERC20Patched.sol",349-352
naming-convention,Informational,"Variable ERC20VotesCompUpgradeable.__gap (contracts/ERC20Patched.sol#1662) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function ERC20Upgradeable.__ERC20_init(string,string) (contracts/ERC20Patched.sol#344-347) is not in mixedCase
","string,string) (contracts/ERC20Patched.sol",344-347
naming-convention,Informational,"Variable ERC20PermitUpgradeable.__gap (contracts/ERC20Patched.sol#1054) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function ContextUpgradeable.__Context_init_unchained() (contracts/ERC20Patched.sol#281-282) is not in mixedCase
",) (contracts/ERC20Patched.sol,281-282
naming-convention,Informational,"Function EIP712Upgradeable._EIP712VersionHash() (contracts/ERC20Patched.sol#908-910) is not in mixedCase
",) (contracts/ERC20Patched.sol,908-910
naming-convention,Informational,"Variable EIP712Upgradeable._HASHED_VERSION (contracts/ERC20Patched.sol#823) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function EIP712Upgradeable._EIP712NameHash() (contracts/ERC20Patched.sol#898-900) is not in mixedCase
",) (contracts/ERC20Patched.sol,898-900
naming-convention,Informational,"Function ERC20VotesUpgradeable.__ERC20Votes_init_unsafe() (contracts/ERC20Patched.sol#1373-1378) is not in mixedCase
",) (contracts/ERC20Patched.sol,1373-1378
naming-convention,Informational,"Function ERC20PermitUpgradeable.DOMAIN_SEPARATOR() (contracts/ERC20Patched.sol#1040-1042) is not in mixedCase
",) (contracts/ERC20Patched.sol,1040-1042
naming-convention,Informational,"Function ContextUpgradeable.__Context_init() (contracts/ERC20Patched.sol#277-279) is not in mixedCase
",) (contracts/ERC20Patched.sol,277-279
naming-convention,Informational,"Variable ERC20DetailedUpgradeable.______gap (contracts/ERC20Patched.sol#1738) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockDiscountTokenV2.initialize(address)._minter (contracts/UnlockDiscountTokenV2.sol#19) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function EIP712Upgradeable.__EIP712_init_unsafe(string,string) (contracts/ERC20Patched.sol#851-856) is not in mixedCase
","string,string) (contracts/ERC20Patched.sol",851-856
naming-convention,Informational,"Variable ERC20Upgradeable.______gap (contracts/ERC20Patched.sol#651) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function EIP712Upgradeable.__EIP712_init_unchained(string,string) (contracts/ERC20Patched.sol#844-849) is not in mixedCase
","string,string) (contracts/ERC20Patched.sol",844-849
naming-convention,Informational,"Variable ERC20MintableUpgradeable.______gap (contracts/ERC20Patched.sol#1751) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function ERC20PermitUpgradeable.__ERC20Permit_init_unsafe(string) (contracts/ERC20Patched.sol#1001-1003) is not in mixedCase
",string) (contracts/ERC20Patched.sol,1001-1003
naming-convention,Informational,"Parameter PublicLock.initialize(address,uint256,address,uint256,uint256,string)._lockCreator (contracts/PublicLock.sol#43) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.transfer(address,uint256)._value (contracts/mixins/MixinTransfer.sol#176) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockUtils.strConcat(string,string,string,string)._c (contracts/UnlockUtils.sol#13) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter TimeMachineMock.timeMachine(uint256,uint256,bool)._deltaT (contracts/mocks/TimeMachineMock.sol#11) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinPurchase.purchasePriceFor(address,address,bytes)._referrer (contracts/mixins/MixinPurchase.sol#117) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinKeys.approve(address,uint256)._tokenId (contracts/mixins/MixinKeys.sol#240) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinRoles.revokeKeyGranter(address)._granter (contracts/mixins/MixinRoles.sol#76) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.configUnlock(address,address,uint256,string,string,uint256)._weth (contracts/Unlock.sol#399) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function GovernorCountingSimpleUpgradeable.__GovernorCountingSimple_init() (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol#14-19) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol,14-19
naming-convention,Informational,"Function IUnlock.__initializeOwnable(address) (contracts/interfaces/IUnlock.sol#203) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.configUnlock(address,address,uint256,string,string,uint256)._chainId (contracts/Unlock.sol#403) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function TimelockControllerUpgradeable.__TimelockController_init(uint256,address[],address[]) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#63-72) is not in mixedCase
","uint256,address[],address[]) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol",63-72
naming-convention,Informational,"Parameter Unlock.publicLockVersions(address)._impl (contracts/Unlock.sol#171) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinKeys.setKeyManagerOf(uint256,address)._tokenId (contracts/mixins/MixinKeys.sol#208) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.setOracle(address,address)._oracleAddress (contracts/Unlock.sol#447) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.transfer(address,uint256)._to (contracts/mixins/MixinTransfer.sol#175) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.transferFrom(address,address,uint256)._from (contracts/mixins/MixinTransfer.sol#110) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinKeys.setKeyManagerOf(uint256,address)._keyManager (contracts/mixins/MixinKeys.sol#209) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockUtilsMock.uint2Str(uint256)._i (contracts/mocks/UnlockUtilsMock.sol#26) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function AccessControlUpgradeable.__AccessControl_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#56-57) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol,56-57
naming-convention,Informational,"Parameter MixinGrantKeys.grantKeys(address[],uint256[],address[])._keyManagers (contracts/mixins/MixinGrantKeys.sol#25) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.recordConsumedDiscount(uint256,uint256)._discount (contracts/Unlock.sol#375) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockUtils.strConcat(string,string,string,string)._a (contracts/UnlockUtils.sol#11) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.shareKey(address,uint256,uint256)._to (contracts/mixins/MixinTransfer.sol#48) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.resetTrackedValue(uint256,uint256)._totalDiscountGranted (contracts/Unlock.sol#460) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.transferFrom(address,address,uint256)._tokenId (contracts/mixins/MixinTransfer.sol#112) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinKeys.isApprovedForAll(address,address)._operator (contracts/mixins/MixinKeys.sol#276) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function IUniswapOracle.PERIOD() (node_modules/hardlydifficult-eth/contracts/protocols/Uniswap/IUniswapOracle.sol#7) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinGrantKeys.grantKeys(address[],uint256[],address[])._expirationTimestamps (contracts/mixins/MixinGrantKeys.sol#24) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable ContextUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#30) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function GovernorVotesQuorumFractionUpgradeable.__GovernorVotesQuorumFraction_init_unchained(uint256) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#26-28) is not in mixedCase
",uint256) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol,26-28
naming-convention,Informational,"Parameter MixinLockCore.approveBeneficiary(address,uint256)._spender (contracts/mixins/MixinLockCore.sol#227) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable UnlockOwnable.______gap (contracts/utils/UnlockOwnable.sol#86) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinGrantKeys.grantKeys(address[],uint256[],address[])._recipients (contracts/mixins/MixinGrantKeys.sol#23) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinKeys.setApprovalForAll(address,bool)._approved (contracts/mixins/MixinKeys.sol#381) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function GovernorVotesQuorumFractionUpgradeable.__GovernorVotesQuorumFraction_init(uint256) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#19-24) is not in mixedCase
",uint256) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol,19-24
naming-convention,Informational,"Parameter Unlock.configUnlock(address,address,uint256,string,string,uint256)._symbol (contracts/Unlock.sol#401) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.safeTransferFrom(address,address,uint256,bytes)._data (contracts/mixins/MixinTransfer.sol#229) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable AccessControlUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#219) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockUtilsMock.strConcat(string,string,string,string)._c (contracts/mocks/UnlockUtilsMock.sol#17) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable GovernorVotesUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol#35) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.safeTransferFrom(address,address,uint256,bytes)._to (contracts/mixins/MixinTransfer.sol#227) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockUtils.strConcat(string,string,string,string)._d (contracts/UnlockUtils.sol#14) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinERC721Enumerable.tokenByIndex(uint256)._index (contracts/mixins/MixinERC721Enumerable.sol#36) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinPurchase.purchase(uint256,address,address,bytes)._referrer (contracts/mixins/MixinPurchase.sol#38) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.safeTransferFrom(address,address,uint256,bytes)._from (contracts/mixins/MixinTransfer.sol#226) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinKeys.getApproved(uint256)._tokenId (contracts/mixins/MixinKeys.sol#259) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinLockCore.setEventHooks(address,address)._onKeyCancelHook (contracts/mixins/MixinLockCore.sol#206) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter IUnlock.configUnlock(address,address,uint256,string,string,uint256)._URI (contracts/interfaces/IUnlock.sol#133) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Contract console (node_modules/hardhat/console.sol#4-1532) is not in CapWords
",node_modules/hardhat/console.sol,4-1532
naming-convention,Informational,"Parameter MixinTransfer.safeTransferFrom(address,address,uint256)._to (contracts/mixins/MixinTransfer.sol#206) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinRefunds.getCancelAndRefundValueFor(address)._keyOwner (contracts/mixins/MixinRefunds.sol#93) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockUtilsMock.address2Str(address)._addr (contracts/mocks/UnlockUtilsMock.sol#34) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.setLockTemplate(address)._publicLockAddress (contracts/Unlock.sol#424) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinPurchase.purchase(uint256,address,address,bytes)._recipient (contracts/mixins/MixinPurchase.sol#37) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.getTransferFee(address,uint256)._time (contracts/mixins/MixinTransfer.sol#261) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.transferFrom(address,address,uint256)._recipient (contracts/mixins/MixinTransfer.sol#111) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinRefunds.cancelAndRefund(uint256)._tokenId (contracts/mixins/MixinRefunds.sol#58) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.resetTrackedValue(uint256,uint256)._grossNetworkProduct (contracts/Unlock.sol#459) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.initialize(address)._unlockOwner (contracts/Unlock.sol#142) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinLockCore.updateKeyPricing(uint256,address)._tokenAddress (contracts/mixins/MixinLockCore.sol#171) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinLockCore.updateBeneficiary(address)._beneficiary (contracts/mixins/MixinLockCore.sol#193) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable GovernorVotesQuorumFractionUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#57) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function IGovernorTimelockUpgradeable.__IGovernorTimelock_init() (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol#14-17) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol,14-17
naming-convention,Informational,"Function GovernorVotesUpgradeable.__GovernorVotes_init(ERC20VotesUpgradeable) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol#18-23) is not in mixedCase
",ERC20VotesUpgradeable) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol,18-23
naming-convention,Informational,"Function UnlockOwnable.__initializeOwnable(address) (contracts/utils/UnlockOwnable.sol#30-33) is not in mixedCase
",address) (contracts/utils/UnlockOwnable.sol,30-33
naming-convention,Informational,"Function GovernorUpgradeable.__Governor_init(string) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#55-61) is not in mixedCase
",string) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol,55-61
naming-convention,Informational,"Function ERC165Upgradeable.__ERC165_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#27-28) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol,27-28
naming-convention,Informational,"Parameter KeyManagerMock.isKeyManager(uint256,address)._keyManager (contracts/mocks/KeyManagerMock.sol#13) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.safeTransferFrom(address,address,uint256)._from (contracts/mixins/MixinTransfer.sol#205) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable GovernorTimelockControlUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#162) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinLockCore.updateKeyPricing(uint256,address)._keyPrice (contracts/mixins/MixinLockCore.sol#170) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable IGovernorTimelockUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol#33) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinLockMetadata.updateLockSymbol(string)._lockSymbol (contracts/mixins/MixinLockMetadata.sol#66) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinLockMetadata.updateLockName(string)._lockName (contracts/mixins/MixinLockMetadata.sol#55) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter TimeMachineMock.timeMachine(uint256,uint256,bool)._tokenId (contracts/mocks/TimeMachineMock.sol#10) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function IGovernorUpgradeable.__IGovernor_init() (node_modules/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol#14-16) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol,14-16
naming-convention,Informational,"Parameter MixinKeys.getTokenIdFor(address)._account (contracts/mixins/MixinKeys.sol#160) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable ERC20Upgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#361) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.configUnlock(address,address,uint256,string,string,uint256)._estimatedGasForPurchase (contracts/Unlock.sol#400) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable TimelockControllerUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#364) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable ERC165StorageUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165StorageUpgradeable.sol#49) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function AccessControlUpgradeable.__AccessControl_init() (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#50-54) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol,50-54
naming-convention,Informational,"Parameter UnlockUtilsMock.strConcat(string,string,string,string)._a (contracts/mocks/UnlockUtilsMock.sol#15) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinERC721Enumerable.tokenOfOwnerByIndex(address,uint256)._index (contracts/mixins/MixinERC721Enumerable.sol#53) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.shareKey(address,uint256,uint256)._tokenId (contracts/mixins/MixinTransfer.sol#49) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable IGovernorUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol#221) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function TimelockControllerUpgradeable.__TimelockController_init_unchained(uint256,address[],address[]) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol#74-99) is not in mixedCase
","uint256,address[],address[]) (node_modules/@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol",74-99
naming-convention,Informational,"Function GovernorVotesUpgradeable.__GovernorVotes_init_unchained(ERC20VotesUpgradeable) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol#25-27) is not in mixedCase
",ERC20VotesUpgradeable) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol,25-27
naming-convention,Informational,"Parameter MixinPurchase.purchase(uint256,address,address,bytes)._value (contracts/mixins/MixinPurchase.sol#36) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockProtocolGovernor.initialize(ERC20VotesUpgradeable,TimelockControllerUpgradeable)._timelock (contracts/UnlockProtocolGovernor.sol#22) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinKeys.keyExpirationTimestampFor(address)._keyOwner (contracts/mixins/MixinKeys.sol#173) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter PublicLock.initialize(address,uint256,address,uint256,uint256,string)._keyPrice (contracts/PublicLock.sol#46) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinLockCore.setEventHooks(address,address)._onKeyPurchaseHook (contracts/mixins/MixinLockCore.sol#205) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function GovernorTimelockControlUpgradeable.__GovernorTimelockControl_init(TimelockControllerUpgradeable) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#33-39) is not in mixedCase
",TimelockControllerUpgradeable) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol,33-39
naming-convention,Informational,"Parameter TimeMachineMock.timeMachine(uint256,uint256,bool)._addTime (contracts/mocks/TimeMachineMock.sol#12) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function IGovernorTimelockUpgradeable.__IGovernorTimelock_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol#19-20) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol,19-20
naming-convention,Informational,"Parameter MixinPurchase.purchasePriceFor(address,address,bytes)._recipient (contracts/mixins/MixinPurchase.sol#116) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.recordKeyPurchase(uint256,address)._value (contracts/Unlock.sol#290) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.recordKeyPurchase(uint256,address)._referrer (contracts/Unlock.sol#291) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.setOracle(address,address)._tokenAddress (contracts/Unlock.sol#446) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable ERC165Upgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#35) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter KeyManagerMock.isKeyManager(uint256,address)._tokenId (contracts/mocks/KeyManagerMock.sol#12) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinKeys.isApprovedForAll(address,address)._owner (contracts/mixins/MixinKeys.sol#275) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinRefunds.updateRefundPenalty(uint256,uint256)._refundPenaltyBasisPoints (contracts/mixins/MixinRefunds.sol#73) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockUtilsMock.strConcat(string,string,string,string)._d (contracts/mocks/UnlockUtilsMock.sol#18) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinKeys.balanceOf(address)._keyOwner (contracts/mixins/MixinKeys.sol#132) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable GovernorUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#346) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinPurchase.purchasePriceFor(address,address,bytes)._data (contracts/mixins/MixinPurchase.sol#118) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter PublicLock.initialize(address,uint256,address,uint256,uint256,string)._expirationDuration (contracts/PublicLock.sol#44) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinERC721Enumerable.tokenOfOwnerByIndex(address,uint256)._keyOwner (contracts/mixins/MixinERC721Enumerable.sol#52) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.getTransferFee(address,uint256)._keyOwner (contracts/mixins/MixinTransfer.sol#260) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter PublicLock.initialize(address,uint256,address,uint256,uint256,string)._maxNumberOfKeys (contracts/PublicLock.sol#47) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.shareKey(address,uint256,uint256)._timeShared (contracts/mixins/MixinTransfer.sol#50) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function GovernorUpgradeable.__Governor_init_unchained(string) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#63-65) is not in mixedCase
",string) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol,63-65
naming-convention,Informational,"Parameter PublicLock.initialize(address,uint256,address,uint256,uint256,string)._lockName (contracts/PublicLock.sol#48) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinKeys.ownerOf(uint256)._tokenId (contracts/mixins/MixinKeys.sol#194) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinLockCore.withdraw(address,uint256)._tokenAddress (contracts/mixins/MixinLockCore.sol#134) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinRefunds.expireAndRefundFor(address,uint256)._keyOwner (contracts/mixins/MixinRefunds.sol#45) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function GovernorCountingSimpleUpgradeable.__GovernorCountingSimple_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol#21-22) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol,21-22
naming-convention,Informational,"Parameter Unlock.configUnlock(address,address,uint256,string,string,uint256)._URI (contracts/Unlock.sol#402) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function GovernorCountingSimpleUpgradeable.COUNTING_MODE() (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol#45-47) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol,45-47
naming-convention,Informational,"Function IGovernorUpgradeable.__IGovernor_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol#18-19) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol,18-19
naming-convention,Informational,"Parameter MixinKeys.setApprovalForAll(address,bool)._to (contracts/mixins/MixinKeys.sol#380) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinPurchase.purchase(uint256,address,address,bytes)._data (contracts/mixins/MixinPurchase.sol#39) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.safeTransferFrom(address,address,uint256,bytes)._tokenId (contracts/mixins/MixinTransfer.sol#228) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function GovernorTimelockControlUpgradeable.__GovernorTimelockControl_init_unchained(TimelockControllerUpgradeable) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol#41-43) is not in mixedCase
",TimelockControllerUpgradeable) (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol,41-43
naming-convention,Informational,"Function ERC165StorageUpgradeable.__ERC165Storage_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165StorageUpgradeable.sol#20-21) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165StorageUpgradeable.sol,20-21
naming-convention,Informational,"Parameter MixinLockMetadata.setBaseTokenURI(string)._baseTokenURI (contracts/mixins/MixinLockMetadata.sol#93) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function IGovernorUpgradeable.COUNTING_MODE() (node_modules/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol#92) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable GovernorCountingSimpleUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol#115) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinLockCore.withdraw(address,uint256)._amount (contracts/mixins/MixinLockCore.sol#135) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function ERC165StorageUpgradeable.__ERC165Storage_init() (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165StorageUpgradeable.sol#15-18) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165StorageUpgradeable.sol,15-18
naming-convention,Informational,"Parameter MixinKeys.getHasValidKey(address)._keyOwner (contracts/mixins/MixinKeys.sol#146) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.publicLockImpls(uint16)._version (contracts/Unlock.sol#178) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinKeys.approve(address,uint256)._approved (contracts/mixins/MixinKeys.sol#239) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinLockMetadata.tokenURI(uint256)._tokenId (contracts/mixins/MixinLockMetadata.sol#110) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinLockCore.approveBeneficiary(address,uint256)._amount (contracts/mixins/MixinLockCore.sol#228) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter Unlock.configUnlock(address,address,uint256,string,string,uint256)._udt (contracts/Unlock.sol#398) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function ERC165Upgradeable.__ERC165_init() (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#23-25) is not in mixedCase
",) (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol,23-25
naming-convention,Informational,"Parameter UnlockUtils.strConcat(string,string,string,string)._b (contracts/UnlockUtils.sol#12) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinRefunds.updateRefundPenalty(uint256,uint256)._freeTrialLength (contracts/mixins/MixinRefunds.sol#72) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter PublicLock.initialize(address,uint256,address,uint256,uint256,string)._tokenAddress (contracts/PublicLock.sol#45) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.safeTransferFrom(address,address,uint256)._tokenId (contracts/mixins/MixinTransfer.sol#207) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockProtocolGovernor.initialize(ERC20VotesUpgradeable,TimelockControllerUpgradeable)._token (contracts/UnlockProtocolGovernor.sol#22) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MixinTransfer.updateTransferFee(uint256)._transferFeeBasisPoints (contracts/mixins/MixinTransfer.sol#242) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockUtilsMock.strConcat(string,string,string,string)._b (contracts/mocks/UnlockUtilsMock.sol#16) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockUtils.address2Str(address)._addr (contracts/UnlockUtils.sol#50) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter UnlockUtils.uint2Str(uint256)._i (contracts/UnlockUtils.sol#22) is not in mixedCase
",N/A,N/A
redundant-statements,Informational,"Redundant expression ""this (node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol#26)"" inContext (node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol#15-29)
",node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol,15-29
too-many-digits,Informational,"Clone2Factory.createClone2(address,bytes32) (contracts/utils/Clone2Factory.sol#20-71) uses literals with too many digits:
	- mstore(uint256,uint256)(pointer_createClone2_asm_0 + 0x40,0xff00000000000000000000000000000000000000000000000000000000000000) (contracts/utils/Clone2Factory.sol#49)
","address,bytes32) (contracts/utils/Clone2Factory.sol",20-71
too-many-digits,Informational,"Clone2Factory.createClone2(address,bytes32) (contracts/utils/Clone2Factory.sol#20-71) uses literals with too many digits:
	- mstore(uint256,uint256)(pointer_createClone2_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) (contracts/utils/Clone2Factory.sol#35)
","address,bytes32) (contracts/utils/Clone2Factory.sol",20-71
too-many-digits,Informational,"Clone2Factory.createClone2(address,bytes32) (contracts/utils/Clone2Factory.sol#20-71) uses literals with too many digits:
	- mstore(uint256,uint256)(pointer_createClone2_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (contracts/utils/Clone2Factory.sol#33)
","address,bytes32) (contracts/utils/Clone2Factory.sol",20-71
unimplemented-functions,Informational,"GovernorVotesQuorumFractionUpgradeable (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#14-58) does not implement functions:
	- IGovernorUpgradeable.COUNTING_MODE() (node_modules/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol#92)
	- GovernorUpgradeable._countVote(uint256,address,uint8,uint256) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#163-168)
	- GovernorUpgradeable._quorumReached(uint256) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#151)
	- GovernorUpgradeable._voteSucceeded(uint256) (node_modules/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol#156)
	- IGovernorUpgradeable.hasVoted(uint256,address) (node_modules/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol#161)
	- IGovernorUpgradeable.votingDelay() (node_modules/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol#128)
	- IGovernorUpgradeable.votingPeriod() (node_modules/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol#137)
",node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol,14-58
unused-state,Informational,"Initializable.______gap (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#61) is never used in Initializable (node_modules/@openzeppelin/upgrades/contracts/Initializable.sol#16-62)
",node_modules/@openzeppelin/upgrades/contracts/Initializable.sol,16-62
unused-state,Informational,"GovernorVotesQuorumFractionUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#57) is never used in GovernorVotesQuorumFractionUpgradeable (node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol#14-58)
",node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol,14-58
unused-state,Informational,"ERC20VotesUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol#262) is never used in ERC20VotesUpgradeable (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol#28-263)
",node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol,28-263
