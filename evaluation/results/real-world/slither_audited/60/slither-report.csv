Check,Severity,Description,Filename,Line
arbitrary-send-erc20,High,"Token18Lib.pull(Token18,address,UFixed18) (contracts/utils/types/Token18.sol#68-75) uses arbitrary from in transferFrom: IERC20(Token18.unwrap(self)).safeTransferFrom(benefactor,address(this),toTokenAmount(self,amount)) (contracts/utils/types/Token18.sol#74)
","Token18,address,UFixed18) (contracts/utils/types/Token18.sol",68-75
arbitrary-send-erc20,High,"Token18Lib.pullTo(Token18,address,address,UFixed18) (contracts/utils/types/Token18.sol#85-93) uses arbitrary from in transferFrom: IERC20(Token18.unwrap(self)).safeTransferFrom(benefactor,recipient,toTokenAmount(self,amount)) (contracts/utils/types/Token18.sol#92)
","Token18,address,address,UFixed18) (contracts/utils/types/Token18.sol",85-93
shadowing-state,High,"MockUReentrancyGuard.STATUS_SLOT (contracts/utils/mocks/MockUReentrancyGuard.sol#7) shadows:
	- UReentrancyGuard.STATUS_SLOT (contracts/utils/unstructured/UReentrancyGuard.sol#44)
",N/A,N/A
divide-before-multiply,Medium,"VersionedAccumulatorLib.accumulateFunding(VersionedAccumulator,VersionedPosition,IFactory,IProductProvider,uint256) (contracts/product/types/accumulator/VersionedAccumulator.sol#89-116) performs a multiplication on the result of a division:
	- accumulatedFunding.taker = fundingIncludingFee.div(Fixed18Lib.from(p.taker)).mul(Fixed18Lib.NEG_ONE) (contracts/product/types/accumulator/VersionedAccumulator.sol#115)
","VersionedAccumulator,VersionedPosition,IFactory,IProductProvider,uint256) (contracts/product/types/accumulator/VersionedAccumulator.sol",89-116
divide-before-multiply,Medium,"VersionedAccumulatorLib.accumulatePosition(VersionedAccumulator,VersionedPosition,IProductProvider,uint256) (contracts/product/types/accumulator/VersionedAccumulator.sol#126-142) performs a multiplication on the result of a division:
	- accumulatedPosition.maker = socializedTakerDelta.div(Fixed18Lib.from(p.maker)).mul(Fixed18Lib.NEG_ONE) (contracts/product/types/accumulator/VersionedAccumulator.sol#140)
","VersionedAccumulator,VersionedPosition,IProductProvider,uint256) (contracts/product/types/accumulator/VersionedAccumulator.sol",126-142
reentrancy-no-eth,Medium,"Reentrancy in Incentivizer.claimFee(Token18[]) (contracts/incentivizer/Incentivizer.sol#232-242):
	External calls:
	- tokens[i].push(factory().treasury(),amount) (contracts/incentivizer/Incentivizer.sol#238)
	State variables written after the call(s):
	- fees[token] = UFixed18Lib.ZERO (contracts/incentivizer/Incentivizer.sol#237)
	Incentivizer.fees (contracts/incentivizer/Incentivizer.sol#39) can be used in cross function reentrancies:
	- Incentivizer.claimFee(Token18[]) (contracts/incentivizer/Incentivizer.sol#232-242)
	- Incentivizer.fees (contracts/incentivizer/Incentivizer.sol#39)
",Token18[]) (contracts/incentivizer/Incentivizer.sol,232-242
reentrancy-no-eth,Medium,"Reentrancy in Product.closeAll(address) (contracts/product/Product.sol#240-249):
	External calls:
	- settleForAccount(account) (contracts/product/Product.sol#240)
		- provider.sync() (contracts/product/Product.sol#73)
		- factory().incentivizer().sync() (contracts/product/Product.sol#74)
		- incentivizer.syncAccount(account) (contracts/product/Product.sol#133)
		- factory().collateral().settleProduct(accumulatedFee) (contracts/product/Product.sol#97)
		- collateral.settleAccount(account,accumulated) (contracts/product/Product.sol#149)
	State variables written after the call(s):
	- _positions[account].liquidation = true (contracts/product/Product.sol#248)
	Product._positions (contracts/product/Product.sol#31) can be used in cross function reentrancies:
	- Product.closeAll(address) (contracts/product/Product.sol#240-249)
	- Product.closeMakeInternal(address,UFixed18) (contracts/product/Product.sol#228-233)
	- Product.closeTakeInternal(address,UFixed18) (contracts/product/Product.sol#187-192)
	- Product.isClosed(address) (contracts/product/Product.sol#275-277)
	- Product.isLiquidating(address) (contracts/product/Product.sol#284-286)
	- Product.maintenance(address) (contracts/product/Product.sol#256-258)
	- Product.maintenanceNext(address) (contracts/product/Product.sol#266-268)
	- Product.position(address) (contracts/product/Product.sol#293-295)
	- Product.pre(address) (contracts/product/Product.sol#302-304)
	- Product.settleAccountInternal(address) (contracts/product/Product.sol#123-152)
",address) (contracts/product/Product.sol,240-249
uninitialized-local,Medium,"Product.settleAccountInternal(address).accumulated (contracts/product/Product.sol#127) is a local variable never initialized
",N/A,N/A
uninitialized-local,Medium,"Product.settleInternal().accumulatedFee (contracts/product/Product.sol#78) is a local variable never initialized
",N/A,N/A
unused-return,Medium,"Product.settleAccountInternal(address) (contracts/product/Product.sol#123-152) ignores return value by _positions[account].settle(provider,oracleVersionCurrent) (contracts/product/Product.sol#145)
",address) (contracts/product/Product.sol,123-152
unused-return,Medium,"Product.settleInternal() (contracts/product/Product.sol#72-100) ignores return value by _position.settle(provider,oracleVersionCurrent) (contracts/product/Product.sol#93)
",) (contracts/product/Product.sol,72-100
unused-return,Medium,"Incentivizer.close(uint256) (contracts/incentivizer/Incentivizer.sol#112-132) ignores return value by _registry[programInfo.product].remove(programId) (contracts/incentivizer/Incentivizer.sol#129)
",uint256) (contracts/incentivizer/Incentivizer.sol,112-132
unused-return,Medium,"Incentivizer.create(ProgramInfo) (contracts/incentivizer/Incentivizer.sol#59-93) ignores return value by _registry[info.product].add(programId) (contracts/incentivizer/Incentivizer.sol#75)
",ProgramInfo) (contracts/incentivizer/Incentivizer.sol,59-93
unused-return,Medium,"ChainlinkOracle.sync() (contracts/oracle/ChainlinkOracle.sol#50-60) ignores return value by (None,feedPrice,None,timestamp,None) = feed.latestRoundData() (contracts/oracle/ChainlinkOracle.sol#51)
",) (contracts/oracle/ChainlinkOracle.sol,50-60
shadowing-local,Low,"LeveragedEther.constructor(IOracle).oracle (contracts/examples/LeveragedEther.sol#10) shadows:
	- ProductProviderBase.oracle (contracts/product/ProductProviderBase.sol#13) (state variable)
",N/A,N/A
shadowing-local,Low,"ShortEther.constructor(IOracle).oracle (contracts/examples/ShortEther.sol#10) shadows:
	- ProductProviderBase.oracle (contracts/product/ProductProviderBase.sol#13) (state variable)
",N/A,N/A
shadowing-local,Low,"Squeeth.constructor(IOracle).oracle (contracts/examples/Squeeth.sol#10) shadows:
	- ProductProviderBase.oracle (contracts/product/ProductProviderBase.sol#13) (state variable)
",N/A,N/A
missing-zero-check,Low,"Factory.updatePauser(address).newPauser (contracts/factory/Factory.sol#185) lacks a zero-check on :
		- pauser = newPauser (contracts/factory/Factory.sol#186)
",N/A,N/A
calls-loop,Low,"Address.sendValue(address,uint256) (node_modules/@openzeppelin/contracts/utils/Address.sol#54-59) has external calls inside a loop: (success,None) = recipient.call{value: amount}() (node_modules/@openzeppelin/contracts/utils/Address.sol#57)
","address,uint256) (node_modules/@openzeppelin/contracts/utils/Address.sol",54-59
calls-loop,Low,"Token18Lib.decimals(Token18) (contracts/utils/types/Token18.sol#118-120) has external calls inside a loop: IERC20Metadata(Token18.unwrap(self)).decimals() (contracts/utils/types/Token18.sol#119)
",Token18) (contracts/utils/types/Token18.sol,118-120
calls-loop,Low,"ProgramLib.unsettled(Program,ProgramInfo,address) (contracts/incentivizer/types/Program.sol#132-153) has external calls inside a loop: latestTimestamp = product.provider().timestampAtVersion(latestVersion) (contracts/incentivizer/types/Program.sol#142)
","Program,ProgramInfo,address) (contracts/incentivizer/types/Program.sol",132-153
calls-loop,Low,"ProgramLib.unsettled(Program,ProgramInfo,address) (contracts/incentivizer/types/Program.sol#132-153) has external calls inside a loop: userSyncedTo = product.latestVersion(account) (contracts/incentivizer/types/Program.sol#138)
","Program,ProgramInfo,address) (contracts/incentivizer/types/Program.sol",132-153
calls-loop,Low,"Incentivizer.claimFee(Token18[]) (contracts/incentivizer/Incentivizer.sol#232-242) has external calls inside a loop: tokens[i].push(factory().treasury(),amount) (contracts/incentivizer/Incentivizer.sol#238)
",Token18[]) (contracts/incentivizer/Incentivizer.sol,232-242
calls-loop,Low,"ProgramLib.unsettled(Program,ProgramInfo,address) (contracts/incentivizer/types/Program.sol#132-153) has external calls inside a loop: userPosition = product.position(account) (contracts/incentivizer/types/Program.sol#137)
","Program,ProgramInfo,address) (contracts/incentivizer/types/Program.sol",132-153
calls-loop,Low,"Address.functionCallWithValue(address,bytes,uint256,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#122-133) has external calls inside a loop: (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#131)
","address,bytes,uint256,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",122-133
calls-loop,Low,"Incentivizer.completeInternal(uint256) (contracts/incentivizer/Incentivizer.sol#159-164) has external calls inside a loop: version = _programInfos[programId].product.latestVersion() (contracts/incentivizer/Incentivizer.sol#160)
",uint256) (contracts/incentivizer/Incentivizer.sol,159-164
calls-loop,Low,"ProgramLib.unsettled(Program,ProgramInfo,address) (contracts/incentivizer/types/Program.sol#132-153) has external calls inside a loop: userShareDelta = userPosition.mul(product.shareAtVersion(latestVersion).sub(product.shareAtVersion(userLatestVersion))) (contracts/incentivizer/types/Program.sol#150-151)
","Program,ProgramInfo,address) (contracts/incentivizer/types/Program.sol",132-153
reentrancy-benign,Low,"Reentrancy in Factory.createProduct(uint256,IProductProvider) (contracts/factory/Factory.sol#115-125):
	External calls:
	- newProduct.initialize(provider) (contracts/factory/Factory.sol#120)
	State variables written after the call(s):
	- controllerFor[newProduct] = controllerId (contracts/factory/Factory.sol#121)
","uint256,IProductProvider) (contracts/factory/Factory.sol",115-125
reentrancy-events,Low,"Reentrancy in Product.settleInternal() (contracts/product/Product.sol#72-100):
	External calls:
	- provider.sync() (contracts/product/Product.sol#73)
	- factory().incentivizer().sync() (contracts/product/Product.sol#74)
	- factory().collateral().settleProduct(accumulatedFee) (contracts/product/Product.sol#97)
	Event emitted after the call(s):
	- Settle(oracleVersionPreSettle,oracleVersionCurrent) (contracts/product/Product.sol#99)
",) (contracts/product/Product.sol,72-100
reentrancy-events,Low,"Reentrancy in Collateral.resolveShortfall(IProduct,UFixed18) (contracts/collateral/Collateral.sol#204-209):
	External calls:
	- token.pull(msg.sender,amount) (contracts/collateral/Collateral.sol#206)
	Event emitted after the call(s):
	- ShortfallResolution(product,amount) (contracts/collateral/Collateral.sol#208)
","IProduct,UFixed18) (contracts/collateral/Collateral.sol",204-209
reentrancy-events,Low,"Reentrancy in Collateral.claimFee() (contracts/collateral/Collateral.sol#214-221):
	External calls:
	- token.push(msg.sender,amount) (contracts/collateral/Collateral.sol#218)
	Event emitted after the call(s):
	- FeeClaim(msg.sender,amount) (contracts/collateral/Collateral.sol#220)
",) (contracts/collateral/Collateral.sol,214-221
reentrancy-events,Low,"Reentrancy in Collateral.depositTo(address,IProduct,UFixed18) (contracts/collateral/Collateral.sol#50-58):
	External calls:
	- token.pull(msg.sender,amount) (contracts/collateral/Collateral.sol#55)
	Event emitted after the call(s):
	- Deposit(account,product,amount) (contracts/collateral/Collateral.sol#57)
","address,IProduct,UFixed18) (contracts/collateral/Collateral.sol",50-58
reentrancy-events,Low,"Reentrancy in Product.closeAll(address) (contracts/product/Product.sol#240-249):
	External calls:
	- settleForAccount(account) (contracts/product/Product.sol#240)
		- provider.sync() (contracts/product/Product.sol#73)
		- factory().incentivizer().sync() (contracts/product/Product.sol#74)
		- incentivizer.syncAccount(account) (contracts/product/Product.sol#133)
		- factory().collateral().settleProduct(accumulatedFee) (contracts/product/Product.sol#97)
		- collateral.settleAccount(account,accumulated) (contracts/product/Product.sol#149)
	Event emitted after the call(s):
	- MakeClosed(account,amount) (contracts/product/Product.sol#232)
		- closeMakeInternal(account,p.maker) (contracts/product/Product.sol#244)
	- TakeClosed(account,amount) (contracts/product/Product.sol#191)
		- closeTakeInternal(account,p.taker) (contracts/product/Product.sol#245)
",address) (contracts/product/Product.sol,240-249
reentrancy-events,Low,"Reentrancy in Factory.createProduct(uint256,IProductProvider) (contracts/factory/Factory.sol#115-125):
	External calls:
	- newProduct.initialize(provider) (contracts/factory/Factory.sol#120)
	Event emitted after the call(s):
	- ProductCreated(newProduct,provider) (contracts/factory/Factory.sol#122)
","uint256,IProductProvider) (contracts/factory/Factory.sol",115-125
reentrancy-events,Low,"Reentrancy in Product.settleAccountInternal(address) (contracts/product/Product.sol#123-152):
	External calls:
	- incentivizer.syncAccount(account) (contracts/product/Product.sol#133)
	- collateral.settleAccount(account,accumulated) (contracts/product/Product.sol#149)
	Event emitted after the call(s):
	- AccountSettle(account,oracleVersionPreSettle,oracleVersionCurrent) (contracts/product/Product.sol#151)
",address) (contracts/product/Product.sol,123-152
reentrancy-events,Low,"Reentrancy in Collateral.withdrawTo(address,IProduct,UFixed18) (contracts/collateral/Collateral.sol#67-76):
	External calls:
	- token.push(account,amount) (contracts/collateral/Collateral.sol#73)
	Event emitted after the call(s):
	- Withdrawal(msg.sender,product,amount) (contracts/collateral/Collateral.sol#75)
","address,IProduct,UFixed18) (contracts/collateral/Collateral.sol",67-76
reentrancy-events,Low,"Reentrancy in Incentivizer.claimFee(Token18[]) (contracts/incentivizer/Incentivizer.sol#232-242):
	External calls:
	- tokens[i].push(factory().treasury(),amount) (contracts/incentivizer/Incentivizer.sol#238)
	Event emitted after the call(s):
	- FeeClaim(token,amount) (contracts/incentivizer/Incentivizer.sol#240)
",Token18[]) (contracts/incentivizer/Incentivizer.sol,232-242
reentrancy-events,Low,"Reentrancy in Incentivizer.close(uint256) (contracts/incentivizer/Incentivizer.sol#112-132):
	External calls:
	- programInfo.token.push(treasury(programId),amountToReturn) (contracts/incentivizer/Incentivizer.sol#128)
	Event emitted after the call(s):
	- ProgramClosed(programId,amountToReturn) (contracts/incentivizer/Incentivizer.sol#131)
",uint256) (contracts/incentivizer/Incentivizer.sol,112-132
reentrancy-events,Low,"Reentrancy in Product.settleForAccount(address) (contracts/product/Product.sol#410-415):
	External calls:
	- settleInternal() (contracts/product/Product.sol#411)
		- provider.sync() (contracts/product/Product.sol#73)
		- factory().incentivizer().sync() (contracts/product/Product.sol#74)
		- factory().collateral().settleProduct(accumulatedFee) (contracts/product/Product.sol#97)
	- settleAccountInternal(account) (contracts/product/Product.sol#412)
		- incentivizer.syncAccount(account) (contracts/product/Product.sol#133)
		- collateral.settleAccount(account,accumulated) (contracts/product/Product.sol#149)
	Event emitted after the call(s):
	- AccountSettle(account,oracleVersionPreSettle,oracleVersionCurrent) (contracts/product/Product.sol#151)
		- settleAccountInternal(account) (contracts/product/Product.sol#412)
",address) (contracts/product/Product.sol,410-415
timestamp,Low,"ProgramInfoLib.isStarted(ProgramInfo,uint256) (contracts/incentivizer/types/ProgramInfo.sol#84-86) uses timestamp for comparisons
	Dangerous comparisons:
	- timestamp >= self.start (contracts/incentivizer/types/ProgramInfo.sol#85)
","ProgramInfo,uint256) (contracts/incentivizer/types/ProgramInfo.sol",84-86
assembly,Informational,"UReentrancyGuard._setStatus(uint256) (contracts/utils/unstructured/UReentrancyGuard.sol#63-68) uses assembly
	- INLINE ASM (contracts/utils/unstructured/UReentrancyGuard.sol#65-67)
",uint256) (contracts/utils/unstructured/UReentrancyGuard.sol,63-68
assembly,Informational,"Clones.predictDeterministicAddress(address,bytes32,address) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#56-71) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/proxy/Clones.sol#61-70)
","address,bytes32,address) (node_modules/@openzeppelin/contracts/proxy/Clones.sol",56-71
assembly,Informational,"Clones.clone(address) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#24-33) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/proxy/Clones.sol#25-31)
",address) (node_modules/@openzeppelin/contracts/proxy/Clones.sol,24-33
assembly,Informational,"UOwnable._setOwner(address) (contracts/utils/unstructured/UOwnable.sol#76-85) uses assembly
	- INLINE ASM (contracts/utils/unstructured/UOwnable.sol#79-82)
",address) (contracts/utils/unstructured/UOwnable.sol,76-85
assembly,Informational,"UOwnable.owner() (contracts/utils/unstructured/UOwnable.sol#41-46) uses assembly
	- INLINE ASM (contracts/utils/unstructured/UOwnable.sol#43-45)
",) (contracts/utils/unstructured/UOwnable.sol,41-46
assembly,Informational,"UFactoryProvider._setFactory(IFactory) (contracts/factory/UFactoryProvider.sol#50-55) uses assembly
	- INLINE ASM (contracts/factory/UFactoryProvider.sol#52-54)
",IFactory) (contracts/factory/UFactoryProvider.sol,50-55
assembly,Informational,"Clones.cloneDeterministic(address,bytes32) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#42-51) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/proxy/Clones.sol#43-49)
","address,bytes32) (node_modules/@openzeppelin/contracts/proxy/Clones.sol",42-51
assembly,Informational,"EnumerableSet.values(EnumerableSet.UintSet) (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#346-355) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#350-352)
",EnumerableSet.UintSet) (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol,346-355
assembly,Informational,"UFactoryProvider.factory() (contracts/factory/UFactoryProvider.sol#39-44) uses assembly
	- INLINE ASM (contracts/factory/UFactoryProvider.sol#41-43)
",) (contracts/factory/UFactoryProvider.sol,39-44
assembly,Informational,"Address.isContract(address) (node_modules/@openzeppelin/contracts/utils/Address.sol#26-36) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Address.sol#32-34)
",address) (node_modules/@openzeppelin/contracts/utils/Address.sol,26-36
assembly,Informational,"Address.verifyCallResult(bool,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#195-215) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Address.sol#207-210)
","bool,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",195-215
assembly,Informational,"EnumerableSet.values(EnumerableSet.AddressSet) (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#273-282) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#277-279)
",EnumerableSet.AddressSet) (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol,273-282
assembly,Informational,"UReentrancyGuard._status() (contracts/utils/unstructured/UReentrancyGuard.sol#56-61) uses assembly
	- INLINE ASM (contracts/utils/unstructured/UReentrancyGuard.sol#58-60)
",) (contracts/utils/unstructured/UReentrancyGuard.sol,56-61
assembly,Informational,"MockUReentrancyGuard.__status() (contracts/utils/mocks/MockUReentrancyGuard.sol#15-20) uses assembly
	- INLINE ASM (contracts/utils/mocks/MockUReentrancyGuard.sol#17-19)
",) (contracts/utils/mocks/MockUReentrancyGuard.sol,15-20
pragma,Informational,"2 different versions of Solidity are used:
	- Version constraint ^0.8.0 is used by:
		-^0.8.0 (node_modules/@openzeppelin/contracts/proxy/Clones.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/Address.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/math/Math.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol#3)
		-^0.8.0 (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#3)
		-^0.8.0 (contracts/utils/mocks/MockFixed18.sol#2)
		-^0.8.0 (contracts/utils/mocks/MockToken18.sol#2)
		-^0.8.0 (contracts/utils/mocks/MockUFixed18.sol#2)
		-^0.8.0 (contracts/utils/mocks/MockUOwnable.sol#2)
		-^0.8.0 (contracts/utils/mocks/MockUReentrancyGuard.sol#2)
		-^0.8.0 (contracts/utils/types/Fixed18.sol#2)
		-^0.8.0 (contracts/utils/types/Token18.sol#2)
		-^0.8.0 (contracts/utils/types/UFixed18.sol#2)
		-^0.8.0 (contracts/utils/unstructured/UOwnable.sol#2)
		-^0.8.0 (contracts/utils/unstructured/UReentrancyGuard.sol#2)
	- Version constraint 0.8.10 is used by:
		-0.8.10 (contracts/collateral/Collateral.sol#2)
		-0.8.10 (contracts/collateral/types/OptimisticLedger.sol#2)
		-0.8.10 (contracts/examples/LeveragedEther.sol#2)
		-0.8.10 (contracts/examples/ShortEther.sol#2)
		-0.8.10 (contracts/examples/Squeeth.sol#2)
		-0.8.10 (contracts/factory/Factory.sol#2)
		-0.8.10 (contracts/factory/UFactoryProvider.sol#2)
		-0.8.10 (contracts/incentivizer/Incentivizer.sol#2)
		-0.8.10 (contracts/incentivizer/types/Program.sol#2)
		-0.8.10 (contracts/incentivizer/types/ProgramInfo.sol#2)
		-0.8.10 (contracts/interfaces/ICollateral.sol#2)
		-0.8.10 (contracts/interfaces/IFactory.sol#2)
		-0.8.10 (contracts/interfaces/IIncentivizer.sol#2)
		-0.8.10 (contracts/interfaces/IOracle.sol#2)
		-0.8.10 (contracts/interfaces/IProduct.sol#2)
		-0.8.10 (contracts/interfaces/IProductProvider.sol#2)
		-0.8.10 (contracts/oracle/ChainlinkOracle.sol#2)
		-0.8.10 (contracts/product/Product.sol#2)
		-0.8.10 (contracts/product/ProductProviderBase.sol#2)
		-0.8.10 (contracts/product/types/ProductProvider.sol#2)
		-0.8.10 (contracts/product/types/accumulator/AccountAccumulator.sol#2)
		-0.8.10 (contracts/product/types/accumulator/Accumulator.sol#2)
		-0.8.10 (contracts/product/types/accumulator/VersionedAccumulator.sol#2)
		-0.8.10 (contracts/product/types/position/AccountPosition.sol#2)
		-0.8.10 (contracts/product/types/position/Position.sol#2)
		-0.8.10 (contracts/product/types/position/PrePosition.sol#2)
		-0.8.10 (contracts/product/types/position/VersionedPosition.sol#2)
",N/A,N/A
solc-version,Informational,"Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.0 (node_modules/@openzeppelin/contracts/proxy/Clones.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/Address.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/math/Math.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#3)
	- ^0.8.0 (contracts/utils/mocks/MockFixed18.sol#2)
	- ^0.8.0 (contracts/utils/mocks/MockToken18.sol#2)
	- ^0.8.0 (contracts/utils/mocks/MockUFixed18.sol#2)
	- ^0.8.0 (contracts/utils/mocks/MockUOwnable.sol#2)
	- ^0.8.0 (contracts/utils/mocks/MockUReentrancyGuard.sol#2)
	- ^0.8.0 (contracts/utils/types/Fixed18.sol#2)
	- ^0.8.0 (contracts/utils/types/Token18.sol#2)
	- ^0.8.0 (contracts/utils/types/UFixed18.sol#2)
	- ^0.8.0 (contracts/utils/unstructured/UOwnable.sol#2)
	- ^0.8.0 (contracts/utils/unstructured/UReentrancyGuard.sol#2)
",N/A,N/A
solc-version,Informational,"Version constraint 0.8.10 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation.
It is used by:
	- 0.8.10 (contracts/collateral/Collateral.sol#2)
	- 0.8.10 (contracts/collateral/types/OptimisticLedger.sol#2)
	- 0.8.10 (contracts/examples/LeveragedEther.sol#2)
	- 0.8.10 (contracts/examples/ShortEther.sol#2)
	- 0.8.10 (contracts/examples/Squeeth.sol#2)
	- 0.8.10 (contracts/factory/Factory.sol#2)
	- 0.8.10 (contracts/factory/UFactoryProvider.sol#2)
	- 0.8.10 (contracts/incentivizer/Incentivizer.sol#2)
	- 0.8.10 (contracts/incentivizer/types/Program.sol#2)
	- 0.8.10 (contracts/incentivizer/types/ProgramInfo.sol#2)
	- 0.8.10 (contracts/interfaces/ICollateral.sol#2)
	- 0.8.10 (contracts/interfaces/IFactory.sol#2)
	- 0.8.10 (contracts/interfaces/IIncentivizer.sol#2)
	- 0.8.10 (contracts/interfaces/IOracle.sol#2)
	- 0.8.10 (contracts/interfaces/IProduct.sol#2)
	- 0.8.10 (contracts/interfaces/IProductProvider.sol#2)
	- 0.8.10 (contracts/oracle/ChainlinkOracle.sol#2)
	- 0.8.10 (contracts/product/Product.sol#2)
	- 0.8.10 (contracts/product/ProductProviderBase.sol#2)
	- 0.8.10 (contracts/product/types/ProductProvider.sol#2)
	- 0.8.10 (contracts/product/types/accumulator/AccountAccumulator.sol#2)
	- 0.8.10 (contracts/product/types/accumulator/Accumulator.sol#2)
	- 0.8.10 (contracts/product/types/accumulator/VersionedAccumulator.sol#2)
	- 0.8.10 (contracts/product/types/position/AccountPosition.sol#2)
	- 0.8.10 (contracts/product/types/position/Position.sol#2)
	- 0.8.10 (contracts/product/types/position/PrePosition.sol#2)
	- 0.8.10 (contracts/product/types/position/VersionedPosition.sol#2)
",N/A,N/A
low-level-calls,Informational,"Low level call in Address.sendValue(address,uint256) (node_modules/@openzeppelin/contracts/utils/Address.sol#54-59):
	- (success,None) = recipient.call{value: amount}() (node_modules/@openzeppelin/contracts/utils/Address.sol#57)
","address,uint256) (node_modules/@openzeppelin/contracts/utils/Address.sol",54-59
low-level-calls,Informational,"Low level call in Address.functionStaticCall(address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#151-160):
	- (success,returndata) = target.staticcall(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#158)
","address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",151-160
low-level-calls,Informational,"Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#122-133):
	- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#131)
","address,bytes,uint256,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",122-133
low-level-calls,Informational,"Low level call in Address.functionDelegateCall(address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#178-187):
	- (success,returndata) = target.delegatecall(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#185)
","address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",178-187
naming-convention,Informational,"Function UReentrancyGuard.UReentrancyGuard__initialize() (contracts/utils/unstructured/UReentrancyGuard.sol#49-51) is not in mixedCase
",) (contracts/utils/unstructured/UReentrancyGuard.sol,49-51
naming-convention,Informational,"Function MockUReentrancyGuard.__initialize() (contracts/utils/mocks/MockUReentrancyGuard.sol#11-13) is not in mixedCase
",) (contracts/utils/mocks/MockUReentrancyGuard.sol,11-13
naming-convention,Informational,"Function UFactoryProvider.UFactoryProvider__initialize(IFactory) (contracts/factory/UFactoryProvider.sol#29-33) is not in mixedCase
",IFactory) (contracts/factory/UFactoryProvider.sol,29-33
naming-convention,Informational,"Function MockUOwnable.__initialize() (contracts/utils/mocks/MockUOwnable.sol#7-9) is not in mixedCase
",) (contracts/utils/mocks/MockUOwnable.sol,7-9
naming-convention,Informational,"Function UOwnable.UOwnable__initialize() (contracts/utils/unstructured/UOwnable.sol#34-36) is not in mixedCase
",) (contracts/utils/unstructured/UOwnable.sol,34-36
naming-convention,Informational,"Function MockUReentrancyGuard.__status() (contracts/utils/mocks/MockUReentrancyGuard.sol#15-20) is not in mixedCase
",) (contracts/utils/mocks/MockUReentrancyGuard.sol,15-20
too-many-digits,Informational,"Clones.predictDeterministicAddress(address,bytes32,address) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#56-71) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_predictDeterministicAddress_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#65)
","address,bytes32,address) (node_modules/@openzeppelin/contracts/proxy/Clones.sol",56-71
too-many-digits,Informational,"Clones.cloneDeterministic(address,bytes32) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#42-51) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_cloneDeterministic_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#45)
","address,bytes32) (node_modules/@openzeppelin/contracts/proxy/Clones.sol",42-51
too-many-digits,Informational,"Clones.cloneDeterministic(address,bytes32) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#42-51) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_cloneDeterministic_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#47)
","address,bytes32) (node_modules/@openzeppelin/contracts/proxy/Clones.sol",42-51
too-many-digits,Informational,"Clones.clone(address) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#24-33) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_clone_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#27)
",address) (node_modules/@openzeppelin/contracts/proxy/Clones.sol,24-33
too-many-digits,Informational,"Clones.clone(address) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#24-33) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_clone_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#29)
",address) (node_modules/@openzeppelin/contracts/proxy/Clones.sol,24-33
too-many-digits,Informational,"Clones.predictDeterministicAddress(address,bytes32,address) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#56-71) uses literals with too many digits:
	- mstore(uint256,uint256)(ptr_predictDeterministicAddress_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (node_modules/@openzeppelin/contracts/proxy/Clones.sol#63)
","address,bytes32,address) (node_modules/@openzeppelin/contracts/proxy/Clones.sol",56-71
unimplemented-functions,Informational,"Factory (contracts/factory/Factory.sol#14-287) does not implement functions:
	- IFactory.controllerFor(IProduct) (contracts/interfaces/IFactory.sol#46)
",contracts/factory/Factory.sol,14-287
unimplemented-functions,Informational,"Incentivizer (contracts/incentivizer/Incentivizer.sol#14-387) does not implement functions:
	- IIncentivizer.fees(Token18) (contracts/interfaces/IIncentivizer.sol#29)
",contracts/incentivizer/Incentivizer.sol,14-387
immutable-states,Optimization,"ChainlinkOracle.feed (contracts/oracle/ChainlinkOracle.sol#20) should be immutable 
",N/A,N/A
immutable-states,Optimization,"ProductProviderBase.oracle (contracts/product/ProductProviderBase.sol#13) should be immutable 
",N/A,N/A
immutable-states,Optimization,"ChainlinkOracle._decimalOffset (contracts/oracle/ChainlinkOracle.sol#29) should be immutable 
",N/A,N/A
