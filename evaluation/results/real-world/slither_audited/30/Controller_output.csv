Severity,Description,Line
Medium,"Reentrancy in Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472):
	External calls:
	- IStrategy(_strategies[i]).withdraw(_amounts[i]) (contracts/v3/controllers/Controller.sol#459)
	- IERC20(_want).safeTransfer(_converter,_amounts[i]) (contracts/v3/controllers/Controller.sol#464)
	- IConverter(_converter).convert(_want,_token,_amounts[i],1) (contracts/v3/controllers/Controller.sol#466)
	State variables written after the call(s):
	- updateBalance(msg.sender,_strategies[i]) (contracts/v3/controllers/Controller.sol#460)
		- _vaultDetails[_vault].balances[_strategy] = IStrategy(_strategy).balanceOf() (contracts/v3/controllers/Controller.sol#628)
	Controller._vaultDetails (contracts/v3/controllers/Controller.sol#39) can be used in cross function reentrancies:
	- Controller.addStrategy(address,address,uint256,uint256) (contracts/v3/controllers/Controller.sol#91-123)
	- Controller.balanceOf() (contracts/v3/controllers/Controller.sol#483-490)
	- Controller.converter(address) (contracts/v3/controllers/Controller.sol#496-505)
	- Controller.earn(address,address,uint256) (contracts/v3/controllers/Controller.sol#405-431)
	- Controller.getBestStrategyWithdraw(address,uint256) (contracts/v3/controllers/Controller.sol#579-615)
	- Controller.getCap(address,address) (contracts/v3/controllers/Controller.sol#512-521)
	- Controller.harvestStrategy(address,uint256,uint256) (contracts/v3/controllers/Controller.sol#375-393)
	- Controller.investEnabled() (contracts/v3/controllers/Controller.sol#527-537)
	- Controller.removeStrategy(address,address,uint256) (contracts/v3/controllers/Controller.sol#165-201)
	- Controller.reorderStrategies(address,address,address) (contracts/v3/controllers/Controller.sol#209-232)
	- Controller.setCap(address,address,uint256,address) (contracts/v3/controllers/Controller.sol#242-273)
	- Controller.setConverter(address,address) (contracts/v3/controllers/Controller.sol#280-290)
	- Controller.strategies() (contracts/v3/controllers/Controller.sol#557-564)
	- Controller.strategies(address) (contracts/v3/controllers/Controller.sol#543-551)
	- Controller.updateBalance(address,address) (contracts/v3/controllers/Controller.sol#622-629)
	- Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472)
	- Controller.withdrawAll(address,address) (contracts/v3/controllers/Controller.sol#337-365)
	- _vaultDetails[msg.sender].balance = _vaultDetails[msg.sender].balance.sub(_amount) (contracts/v3/controllers/Controller.sol#470)
	Controller._vaultDetails (contracts/v3/controllers/Controller.sol#39) can be used in cross function reentrancies:
	- Controller.addStrategy(address,address,uint256,uint256) (contracts/v3/controllers/Controller.sol#91-123)
	- Controller.balanceOf() (contracts/v3/controllers/Controller.sol#483-490)
	- Controller.converter(address) (contracts/v3/controllers/Controller.sol#496-505)
	- Controller.earn(address,address,uint256) (contracts/v3/controllers/Controller.sol#405-431)
	- Controller.getBestStrategyWithdraw(address,uint256) (contracts/v3/controllers/Controller.sol#579-615)
	- Controller.getCap(address,address) (contracts/v3/controllers/Controller.sol#512-521)
	- Controller.harvestStrategy(address,uint256,uint256) (contracts/v3/controllers/Controller.sol#375-393)
	- Controller.investEnabled() (contracts/v3/controllers/Controller.sol#527-537)
	- Controller.removeStrategy(address,address,uint256) (contracts/v3/controllers/Controller.sol#165-201)
	- Controller.reorderStrategies(address,address,address) (contracts/v3/controllers/Controller.sol#209-232)
	- Controller.setCap(address,address,uint256,address) (contracts/v3/controllers/Controller.sol#242-273)
	- Controller.setConverter(address,address) (contracts/v3/controllers/Controller.sol#280-290)
	- Controller.strategies() (contracts/v3/controllers/Controller.sol#557-564)
	- Controller.strategies(address) (contracts/v3/controllers/Controller.sol#543-551)
	- Controller.updateBalance(address,address) (contracts/v3/controllers/Controller.sol#622-629)
	- Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472)
	- Controller.withdrawAll(address,address) (contracts/v3/controllers/Controller.sol#337-365)
",441-472
Medium,"Reentrancy in Controller.withdrawAll(address,address) (contracts/v3/controllers/Controller.sol#337-365):
	External calls:
	- IStrategy(_strategy).withdrawAll() (contracts/v3/controllers/Controller.sol#347)
	- IERC20(_want).safeTransfer(address(_converter),_amount) (contracts/v3/controllers/Controller.sol#353)
	- _amount = _converter.convert(_want,_convert,_amount,1) (contracts/v3/controllers/Controller.sol#354)
	- IERC20(_convert).safeTransfer(_vault,_amount) (contracts/v3/controllers/Controller.sol#355)
	- IERC20(_want).safeTransfer(_vault,_amount) (contracts/v3/controllers/Controller.sol#357)
	State variables written after the call(s):
	- _vaultDetails[_vault].balance = _balance.sub(_amount) (contracts/v3/controllers/Controller.sol#361)
	Controller._vaultDetails (contracts/v3/controllers/Controller.sol#39) can be used in cross function reentrancies:
	- Controller.addStrategy(address,address,uint256,uint256) (contracts/v3/controllers/Controller.sol#91-123)
	- Controller.balanceOf() (contracts/v3/controllers/Controller.sol#483-490)
	- Controller.converter(address) (contracts/v3/controllers/Controller.sol#496-505)
	- Controller.earn(address,address,uint256) (contracts/v3/controllers/Controller.sol#405-431)
	- Controller.getBestStrategyWithdraw(address,uint256) (contracts/v3/controllers/Controller.sol#579-615)
	- Controller.getCap(address,address) (contracts/v3/controllers/Controller.sol#512-521)
	- Controller.harvestStrategy(address,uint256,uint256) (contracts/v3/controllers/Controller.sol#375-393)
	- Controller.investEnabled() (contracts/v3/controllers/Controller.sol#527-537)
	- Controller.removeStrategy(address,address,uint256) (contracts/v3/controllers/Controller.sol#165-201)
	- Controller.reorderStrategies(address,address,address) (contracts/v3/controllers/Controller.sol#209-232)
	- Controller.setCap(address,address,uint256,address) (contracts/v3/controllers/Controller.sol#242-273)
	- Controller.setConverter(address,address) (contracts/v3/controllers/Controller.sol#280-290)
	- Controller.strategies() (contracts/v3/controllers/Controller.sol#557-564)
	- Controller.strategies(address) (contracts/v3/controllers/Controller.sol#543-551)
	- Controller.updateBalance(address,address) (contracts/v3/controllers/Controller.sol#622-629)
	- Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472)
	- Controller.withdrawAll(address,address) (contracts/v3/controllers/Controller.sol#337-365)
	- _vaultDetails[_vault].balance = 0 (contracts/v3/controllers/Controller.sol#363)
	Controller._vaultDetails (contracts/v3/controllers/Controller.sol#39) can be used in cross function reentrancies:
	- Controller.addStrategy(address,address,uint256,uint256) (contracts/v3/controllers/Controller.sol#91-123)
	- Controller.balanceOf() (contracts/v3/controllers/Controller.sol#483-490)
	- Controller.converter(address) (contracts/v3/controllers/Controller.sol#496-505)
	- Controller.earn(address,address,uint256) (contracts/v3/controllers/Controller.sol#405-431)
	- Controller.getBestStrategyWithdraw(address,uint256) (contracts/v3/controllers/Controller.sol#579-615)
	- Controller.getCap(address,address) (contracts/v3/controllers/Controller.sol#512-521)
	- Controller.harvestStrategy(address,uint256,uint256) (contracts/v3/controllers/Controller.sol#375-393)
	- Controller.investEnabled() (contracts/v3/controllers/Controller.sol#527-537)
	- Controller.removeStrategy(address,address,uint256) (contracts/v3/controllers/Controller.sol#165-201)
	- Controller.reorderStrategies(address,address,address) (contracts/v3/controllers/Controller.sol#209-232)
	- Controller.setCap(address,address,uint256,address) (contracts/v3/controllers/Controller.sol#242-273)
	- Controller.setConverter(address,address) (contracts/v3/controllers/Controller.sol#280-290)
	- Controller.strategies() (contracts/v3/controllers/Controller.sol#557-564)
	- Controller.strategies(address) (contracts/v3/controllers/Controller.sol#543-551)
	- Controller.updateBalance(address,address) (contracts/v3/controllers/Controller.sol#622-629)
	- Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472)
	- Controller.withdrawAll(address,address) (contracts/v3/controllers/Controller.sol#337-365)
",337-365
Medium,"Reentrancy in Controller.earn(address,address,uint256) (contracts/v3/controllers/Controller.sol#405-431):
	External calls:
	- IERC20(_token).safeTransfer(address(_converter),_amount) (contracts/v3/controllers/Controller.sol#420)
	- _amount = _converter.convert(_token,_want,_amount,1) (contracts/v3/controllers/Controller.sol#422)
	- IERC20(_want).safeTransfer(_strategy,_amount) (contracts/v3/controllers/Controller.sol#423)
	- IERC20(_token).safeTransfer(_strategy,_amount) (contracts/v3/controllers/Controller.sol#425)
	State variables written after the call(s):
	- _vaultDetails[msg.sender].balance = _vaultDetails[msg.sender].balance.add(_amount) (contracts/v3/controllers/Controller.sol#427)
	Controller._vaultDetails (contracts/v3/controllers/Controller.sol#39) can be used in cross function reentrancies:
	- Controller.addStrategy(address,address,uint256,uint256) (contracts/v3/controllers/Controller.sol#91-123)
	- Controller.balanceOf() (contracts/v3/controllers/Controller.sol#483-490)
	- Controller.converter(address) (contracts/v3/controllers/Controller.sol#496-505)
	- Controller.earn(address,address,uint256) (contracts/v3/controllers/Controller.sol#405-431)
	- Controller.getBestStrategyWithdraw(address,uint256) (contracts/v3/controllers/Controller.sol#579-615)
	- Controller.getCap(address,address) (contracts/v3/controllers/Controller.sol#512-521)
	- Controller.harvestStrategy(address,uint256,uint256) (contracts/v3/controllers/Controller.sol#375-393)
	- Controller.investEnabled() (contracts/v3/controllers/Controller.sol#527-537)
	- Controller.removeStrategy(address,address,uint256) (contracts/v3/controllers/Controller.sol#165-201)
	- Controller.reorderStrategies(address,address,address) (contracts/v3/controllers/Controller.sol#209-232)
	- Controller.setCap(address,address,uint256,address) (contracts/v3/controllers/Controller.sol#242-273)
	- Controller.setConverter(address,address) (contracts/v3/controllers/Controller.sol#280-290)
	- Controller.strategies() (contracts/v3/controllers/Controller.sol#557-564)
	- Controller.strategies(address) (contracts/v3/controllers/Controller.sol#543-551)
	- Controller.updateBalance(address,address) (contracts/v3/controllers/Controller.sol#622-629)
	- Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472)
	- Controller.withdrawAll(address,address) (contracts/v3/controllers/Controller.sol#337-365)
",405-431
Medium,"Reentrancy in LegacyController.setVault(address) (contracts/v3/controllers/LegacyController.sol#53-65):
	External calls:
	- cachedVault.withdrawAll(address(token)) (contracts/v3/controllers/LegacyController.sol#61)
	- token.safeTransfer(metavault,token.balanceOf(address(this))) (contracts/v3/controllers/LegacyController.sol#62)
	State variables written after the call(s):
	- vault = IVault(_vault) (contracts/v3/controllers/LegacyController.sol#64)
	LegacyController.vault (contracts/v3/controllers/LegacyController.sol#27) can be used in cross function reentrancies:
	- LegacyController.balanceOf(address) (contracts/v3/controllers/LegacyController.sol#114-124)
	- LegacyController.legacyDeposit(address,uint256) (contracts/v3/controllers/LegacyController.sol#199-216)
	- LegacyController.onlyEnabledVault() (contracts/v3/controllers/LegacyController.sol#229-232)
	- LegacyController.setVault(address) (contracts/v3/controllers/LegacyController.sol#53-65)
	- LegacyController.vault (contracts/v3/controllers/LegacyController.sol#27)
	- LegacyController.withdraw(address,uint256) (contracts/v3/controllers/LegacyController.sol#147-177)
",53-65
Medium,"Reentrancy in Controller.setCap(address,address,uint256,address) (contracts/v3/controllers/Controller.sol#242-273):
	External calls:
	- IStrategy(_strategy).withdraw(_diff) (contracts/v3/controllers/Controller.sol#258)
	State variables written after the call(s):
	- updateBalance(_vault,_strategy) (contracts/v3/controllers/Controller.sol#259)
		- _vaultDetails[_vault].balances[_strategy] = IStrategy(_strategy).balanceOf() (contracts/v3/controllers/Controller.sol#628)
	Controller._vaultDetails (contracts/v3/controllers/Controller.sol#39) can be used in cross function reentrancies:
	- Controller.addStrategy(address,address,uint256,uint256) (contracts/v3/controllers/Controller.sol#91-123)
	- Controller.balanceOf() (contracts/v3/controllers/Controller.sol#483-490)
	- Controller.converter(address) (contracts/v3/controllers/Controller.sol#496-505)
	- Controller.earn(address,address,uint256) (contracts/v3/controllers/Controller.sol#405-431)
	- Controller.getBestStrategyWithdraw(address,uint256) (contracts/v3/controllers/Controller.sol#579-615)
	- Controller.getCap(address,address) (contracts/v3/controllers/Controller.sol#512-521)
	- Controller.harvestStrategy(address,uint256,uint256) (contracts/v3/controllers/Controller.sol#375-393)
	- Controller.investEnabled() (contracts/v3/controllers/Controller.sol#527-537)
	- Controller.removeStrategy(address,address,uint256) (contracts/v3/controllers/Controller.sol#165-201)
	- Controller.reorderStrategies(address,address,address) (contracts/v3/controllers/Controller.sol#209-232)
	- Controller.setCap(address,address,uint256,address) (contracts/v3/controllers/Controller.sol#242-273)
	- Controller.setConverter(address,address) (contracts/v3/controllers/Controller.sol#280-290)
	- Controller.strategies() (contracts/v3/controllers/Controller.sol#557-564)
	- Controller.strategies(address) (contracts/v3/controllers/Controller.sol#543-551)
	- Controller.updateBalance(address,address) (contracts/v3/controllers/Controller.sol#622-629)
	- Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472)
	- Controller.withdrawAll(address,address) (contracts/v3/controllers/Controller.sol#337-365)
	- _vaultDetails[_vault].balance = _vaultDetails[_vault].balance.sub(_diff) (contracts/v3/controllers/Controller.sol#261)
	Controller._vaultDetails (contracts/v3/controllers/Controller.sol#39) can be used in cross function reentrancies:
	- Controller.addStrategy(address,address,uint256,uint256) (contracts/v3/controllers/Controller.sol#91-123)
	- Controller.balanceOf() (contracts/v3/controllers/Controller.sol#483-490)
	- Controller.converter(address) (contracts/v3/controllers/Controller.sol#496-505)
	- Controller.earn(address,address,uint256) (contracts/v3/controllers/Controller.sol#405-431)
	- Controller.getBestStrategyWithdraw(address,uint256) (contracts/v3/controllers/Controller.sol#579-615)
	- Controller.getCap(address,address) (contracts/v3/controllers/Controller.sol#512-521)
	- Controller.harvestStrategy(address,uint256,uint256) (contracts/v3/controllers/Controller.sol#375-393)
	- Controller.investEnabled() (contracts/v3/controllers/Controller.sol#527-537)
	- Controller.removeStrategy(address,address,uint256) (contracts/v3/controllers/Controller.sol#165-201)
	- Controller.reorderStrategies(address,address,address) (contracts/v3/controllers/Controller.sol#209-232)
	- Controller.setCap(address,address,uint256,address) (contracts/v3/controllers/Controller.sol#242-273)
	- Controller.setConverter(address,address) (contracts/v3/controllers/Controller.sol#280-290)
	- Controller.strategies() (contracts/v3/controllers/Controller.sol#557-564)
	- Controller.strategies(address) (contracts/v3/controllers/Controller.sol#543-551)
	- Controller.updateBalance(address,address) (contracts/v3/controllers/Controller.sol#622-629)
	- Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472)
	- Controller.withdrawAll(address,address) (contracts/v3/controllers/Controller.sol#337-365)
",242-273
Medium,"Reentrancy in Controller.earn(address,address,uint256) (contracts/v3/controllers/Controller.sol#405-431):
	External calls:
	- IERC20(_token).safeTransfer(address(_converter),_amount) (contracts/v3/controllers/Controller.sol#420)
	- _amount = _converter.convert(_token,_want,_amount,1) (contracts/v3/controllers/Controller.sol#422)
	- IERC20(_want).safeTransfer(_strategy,_amount) (contracts/v3/controllers/Controller.sol#423)
	- IERC20(_token).safeTransfer(_strategy,_amount) (contracts/v3/controllers/Controller.sol#425)
	- IStrategy(_strategy).deposit() (contracts/v3/controllers/Controller.sol#429)
	State variables written after the call(s):
	- updateBalance(msg.sender,_strategy) (contracts/v3/controllers/Controller.sol#430)
		- _vaultDetails[_vault].balances[_strategy] = IStrategy(_strategy).balanceOf() (contracts/v3/controllers/Controller.sol#628)
	Controller._vaultDetails (contracts/v3/controllers/Controller.sol#39) can be used in cross function reentrancies:
	- Controller.addStrategy(address,address,uint256,uint256) (contracts/v3/controllers/Controller.sol#91-123)
	- Controller.balanceOf() (contracts/v3/controllers/Controller.sol#483-490)
	- Controller.converter(address) (contracts/v3/controllers/Controller.sol#496-505)
	- Controller.earn(address,address,uint256) (contracts/v3/controllers/Controller.sol#405-431)
	- Controller.getBestStrategyWithdraw(address,uint256) (contracts/v3/controllers/Controller.sol#579-615)
	- Controller.getCap(address,address) (contracts/v3/controllers/Controller.sol#512-521)
	- Controller.harvestStrategy(address,uint256,uint256) (contracts/v3/controllers/Controller.sol#375-393)
	- Controller.investEnabled() (contracts/v3/controllers/Controller.sol#527-537)
	- Controller.removeStrategy(address,address,uint256) (contracts/v3/controllers/Controller.sol#165-201)
	- Controller.reorderStrategies(address,address,address) (contracts/v3/controllers/Controller.sol#209-232)
	- Controller.setCap(address,address,uint256,address) (contracts/v3/controllers/Controller.sol#242-273)
	- Controller.setConverter(address,address) (contracts/v3/controllers/Controller.sol#280-290)
	- Controller.strategies() (contracts/v3/controllers/Controller.sol#557-564)
	- Controller.strategies(address) (contracts/v3/controllers/Controller.sol#543-551)
	- Controller.updateBalance(address,address) (contracts/v3/controllers/Controller.sol#622-629)
	- Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472)
	- Controller.withdrawAll(address,address) (contracts/v3/controllers/Controller.sol#337-365)
",405-431
Medium,"Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472) ignores return value by IConverter(_converter).convert(_want,_token,_amounts[i],1) (contracts/v3/controllers/Controller.sol#466)
",441-472
Medium,"LegacyController.withdraw(address,uint256) (contracts/v3/controllers/LegacyController.sol#147-177) ignores return value by converter.convert(_tokens[0],address(token),_balance,1) (contracts/v3/controllers/LegacyController.sol#173)
",147-177
Medium,"LegacyController.legacyDeposit(address,uint256) (contracts/v3/controllers/LegacyController.sol#199-216) ignores return value by converter.convert(address(token),_toToken,_amount,_expected) (contracts/v3/controllers/LegacyController.sol#211)
",199-216
Medium,"LegacyController.legacyDeposit(address,uint256) (contracts/v3/controllers/LegacyController.sol#199-216) ignores return value by vault.deposit(_toToken,IERC20(_toToken).balanceOf(address(this))) (contracts/v3/controllers/LegacyController.sol#215)
",199-216
Low,"Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472) has external calls inside a loop: IStrategy(_strategies[i]).withdraw(_amounts[i]) (contracts/v3/controllers/Controller.sol#459)
",441-472
Low,"Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472) has external calls inside a loop: _want = IStrategy(_strategies[i]).want() (contracts/v3/controllers/Controller.sol#461)
",441-472
Low,"Controller.withdraw(address,uint256) (contracts/v3/controllers/Controller.sol#441-472) has external calls inside a loop: IConverter(_converter).convert(_want,_token,_amounts[i],1) (contracts/v3/controllers/Controller.sol#466)
",441-472
Low,"Controller.updateBalance(address,address) (contracts/v3/controllers/Controller.sol#622-629) has external calls inside a loop: _vaultDetails[_vault].balances[_strategy] = IStrategy(_strategy).balanceOf() (contracts/v3/controllers/Controller.sol#628)
",622-629
Low,"Reentrancy in Controller.withdrawAll(address,address) (contracts/v3/controllers/Controller.sol#337-365):
	External calls:
	- IStrategy(_strategy).withdrawAll() (contracts/v3/controllers/Controller.sol#347)
	State variables written after the call(s):
	- updateBalance(_vault,_strategy) (contracts/v3/controllers/Controller.sol#350)
		- _vaultDetails[_vault].balances[_strategy] = IStrategy(_strategy).balanceOf() (contracts/v3/controllers/Controller.sol#628)
",337-365
Low,"Reentrancy in Controller.harvestStrategy(address,uint256,uint256) (contracts/v3/controllers/Controller.sol#375-393):
	External calls:
	- IStrategy(_strategy).harvest(_estimatedWETH,_estimatedYAXIS) (contracts/v3/controllers/Controller.sol#387)
	State variables written after the call(s):
	- _vaultDetails[_vault].balance = _vaultDetails[_vault].balance.add(_after.sub(_before)) (contracts/v3/controllers/Controller.sol#390)
	- _vaultDetails[_vault].balances[_strategy] = _after (contracts/v3/controllers/Controller.sol#391)
",375-393
Low,"Reentrancy in LegacyController.withdraw(address,uint256) (contracts/v3/controllers/LegacyController.sol#147-177):
	External calls:
	- token.safeTransfer(metavault,_amount) (contracts/v3/controllers/LegacyController.sol#158)
	Event emitted after the call(s):
	- Withdraw(_amount) (contracts/v3/controllers/LegacyController.sol#159)
",147-177
Low,"Reentrancy in Controller.addStrategy(address,address,uint256,uint256) (contracts/v3/controllers/Controller.sol#91-123):
	External calls:
	- IHarvester(manager.harvester()).addStrategy(_vault,_strategy,_timeout) (contracts/v3/controllers/Controller.sol#120)
	Event emitted after the call(s):
	- StrategyAdded(_vault,_strategy,_cap) (contracts/v3/controllers/Controller.sol#122)
",91-123
Low,"Reentrancy in Controller.removeStrategy(address,address,uint256) (contracts/v3/controllers/Controller.sol#165-201):
	External calls:
	- IStrategy(_strategy).withdrawAll() (contracts/v3/controllers/Controller.sol#197)
	- IHarvester(manager.harvester()).removeStrategy(_vault,_strategy,_timeout) (contracts/v3/controllers/Controller.sol#199)
	Event emitted after the call(s):
	- StrategyRemoved(_vault,_strategy) (contracts/v3/controllers/Controller.sol#200)
",165-201
Low,"Reentrancy in Controller.harvestStrategy(address,uint256,uint256) (contracts/v3/controllers/Controller.sol#375-393):
	External calls:
	- IStrategy(_strategy).harvest(_estimatedWETH,_estimatedYAXIS) (contracts/v3/controllers/Controller.sol#387)
	Event emitted after the call(s):
	- Harvest(_strategy) (contracts/v3/controllers/Controller.sol#392)
",375-393
Low,"Reentrancy in LegacyController.withdraw(address,uint256) (contracts/v3/controllers/LegacyController.sol#147-177):
	External calls:
	- cachedVault.withdraw(_shares,_tokens[0]) (contracts/v3/controllers/LegacyController.sol#169)
	- IERC20(_tokens[0]).safeTransfer(address(converter),_balance) (contracts/v3/controllers/LegacyController.sol#171)
	- converter.convert(_tokens[0],address(token),_balance,1) (contracts/v3/controllers/LegacyController.sol#173)
	Event emitted after the call(s):
	- Withdraw(token.balanceOf(address(this))) (contracts/v3/controllers/LegacyController.sol#174)
",147-177
