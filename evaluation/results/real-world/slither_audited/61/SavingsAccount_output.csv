Severity,Description,Line
High,"SavingsAccount._depositToYield(uint256,address,address) (contracts/SavingsAccount/SavingsAccount.sol#130-143) sends eth to arbitrary user
	Dangerous calls:
	- _sharesReceived = IYield(_strategy).lockTokens{value: _ethValue}(msg.sender,_token,_amount) (contracts/SavingsAccount/SavingsAccount.sol#142)
",130-143
High,"SavingsAccount._transfer(uint256,address,address) (contracts/SavingsAccount/SavingsAccount.sol#269-280) sends eth to arbitrary user
	Dangerous calls:
	- (_success,None) = _to.call{value: _amount}() (contracts/SavingsAccount/SavingsAccount.sol#275)
",269-280
High,"Reentrancy in SavingsAccount.switchStrategy(uint256,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#152-183):
	External calls:
	- _amount = IYield(_currentStrategy).getSharesForTokens(_amount,_token) (contracts/SavingsAccount/SavingsAccount.sol#162)
	- _tokensReceived = IYield(_currentStrategy).unlockTokens(_token,_amount) (contracts/SavingsAccount/SavingsAccount.sol#169)
	- IERC20(_token).safeApprove(_newStrategy,_tokensReceived) (contracts/SavingsAccount/SavingsAccount.sol#173)
	- _sharesReceived = IYield(_newStrategy).lockTokens{value: _ethValue}(address(this),_token,_tokensReceived) (contracts/SavingsAccount/SavingsAccount.sol#179)
	External calls sending eth:
	- _sharesReceived = IYield(_newStrategy).lockTokens{value: _ethValue}(address(this),_token,_tokensReceived) (contracts/SavingsAccount/SavingsAccount.sol#179)
	State variables written after the call(s):
	- balanceInShares[msg.sender][_token][_newStrategy] = balanceInShares[msg.sender][_token][_newStrategy].add(_sharesReceived) (contracts/SavingsAccount/SavingsAccount.sol#181)
	SavingsAccount.balanceInShares (contracts/SavingsAccount/SavingsAccount.sol#35) can be used in cross function reentrancies:
	- SavingsAccount.balanceInShares (contracts/SavingsAccount/SavingsAccount.sol#35)
	- SavingsAccount.getTotalTokens(address,address) (contracts/SavingsAccount/SavingsAccount.sol#464-479)
	- SavingsAccount.transfer(uint256,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#393-416)
	- SavingsAccount.transferFrom(uint256,address,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#426-456)
",152-183
Medium,"Reentrancy in SavingsAccount.withdrawAll(address,address) (contracts/SavingsAccount/SavingsAccount.sol#305-317):
	External calls:
	- _amount = IYield(_strategy).unlockTokens(_token,_sharesBalance) (contracts/SavingsAccount/SavingsAccount.sol#310)
	State variables written after the call(s):
	- delete balanceInShares[msg.sender][_token][_strategy] (contracts/SavingsAccount/SavingsAccount.sol#312)
	SavingsAccount.balanceInShares (contracts/SavingsAccount/SavingsAccount.sol#35) can be used in cross function reentrancies:
	- SavingsAccount.balanceInShares (contracts/SavingsAccount/SavingsAccount.sol#35)
	- SavingsAccount.getTotalTokens(address,address) (contracts/SavingsAccount/SavingsAccount.sol#464-479)
	- SavingsAccount.transfer(uint256,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#393-416)
	- SavingsAccount.transferFrom(uint256,address,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#426-456)
",305-317
Medium,"Reentrancy in SavingsAccount.withdrawAll(address) (contracts/SavingsAccount/SavingsAccount.sol#286-303):
	External calls:
	- _amount = IYield(_strategyList[i]).unlockTokens(_token,balanceInShares[msg.sender][_token][_strategyList[i]]) (contracts/SavingsAccount/SavingsAccount.sol#292)
	State variables written after the call(s):
	- delete balanceInShares[msg.sender][_token][_strategyList[i]] (contracts/SavingsAccount/SavingsAccount.sol#294)
	SavingsAccount.balanceInShares (contracts/SavingsAccount/SavingsAccount.sol#35) can be used in cross function reentrancies:
	- SavingsAccount.balanceInShares (contracts/SavingsAccount/SavingsAccount.sol#35)
	- SavingsAccount.getTotalTokens(address,address) (contracts/SavingsAccount/SavingsAccount.sol#464-479)
	- SavingsAccount.transfer(uint256,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#393-416)
	- SavingsAccount.transferFrom(uint256,address,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#426-456)
",286-303
Low,"SavingsAccount.withdrawAll(address) (contracts/SavingsAccount/SavingsAccount.sol#286-303) has external calls inside a loop: _amount = IYield(_strategyList[i]).unlockTokens(_token,balanceInShares[msg.sender][_token][_strategyList[i]]) (contracts/SavingsAccount/SavingsAccount.sol#292)
",286-303
Low,"SavingsAccount.getTotalTokens(address,address) (contracts/SavingsAccount/SavingsAccount.sol#464-479) has external calls inside a loop: _tokenInStrategy = IYield(_strategyList[i]).getTokensForShares(_liquidityShares,_token) (contracts/SavingsAccount/SavingsAccount.sol#473)
",464-479
Low,"Reentrancy in SavingsAccount.deposit(uint256,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#108-119):
	External calls:
	- _sharesReceived = _deposit(_amount,_token,_strategy) (contracts/SavingsAccount/SavingsAccount.sol#115)
		- _sharesReceived = IYield(_strategy).lockTokens{value: _ethValue}(msg.sender,_token,_amount) (contracts/SavingsAccount/SavingsAccount.sol#142)
	State variables written after the call(s):
	- balanceInShares[_to][_token][_strategy] = balanceInShares[_to][_token][_strategy].add(_sharesReceived) (contracts/SavingsAccount/SavingsAccount.sol#116)
",108-119
Low,"Reentrancy in SavingsAccount.switchStrategy(uint256,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#152-183):
	External calls:
	- _amount = IYield(_currentStrategy).getSharesForTokens(_amount,_token) (contracts/SavingsAccount/SavingsAccount.sol#162)
	State variables written after the call(s):
	- balanceInShares[msg.sender][_token][_currentStrategy] = balanceInShares[msg.sender][_token][_currentStrategy].sub(_amount,SavingsAccount::switchStrategy Insufficient balance) (contracts/SavingsAccount/SavingsAccount.sol#164-167)
",152-183
Low,"Reentrancy in SavingsAccount.withdrawFrom(uint256,address,address,address,address,bool) (contracts/SavingsAccount/SavingsAccount.sol#225-249):
	External calls:
	- _amount = IYield(_strategy).getSharesForTokens(_amount,_token) (contracts/SavingsAccount/SavingsAccount.sol#240)
	State variables written after the call(s):
	- balanceInShares[_from][_token][_strategy] = balanceInShares[_from][_token][_strategy].sub(_amount,SavingsAccount::withdrawFrom insufficient balance) (contracts/SavingsAccount/SavingsAccount.sol#242-245)
",225-249
Low,"Reentrancy in SavingsAccount.transferFrom(uint256,address,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#426-456):
	External calls:
	- _amount = IYield(_strategy).getSharesForTokens(_amount,_token) (contracts/SavingsAccount/SavingsAccount.sol#441)
	State variables written after the call(s):
	- balanceInShares[_from][_token][_strategy] = balanceInShares[_from][_token][_strategy].sub(_amount,SavingsAccount::transferFrom insufficient allowance) (contracts/SavingsAccount/SavingsAccount.sol#445-448)
	- balanceInShares[_to][_token][_strategy] = (balanceInShares[_to][_token][_strategy]).add(_amount) (contracts/SavingsAccount/SavingsAccount.sol#451)
",426-456
Low,"Reentrancy in SavingsAccount.transfer(uint256,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#393-416):
	External calls:
	- _amount = IYield(_strategy).getSharesForTokens(_amount,_token) (contracts/SavingsAccount/SavingsAccount.sol#402)
	State variables written after the call(s):
	- balanceInShares[msg.sender][_token][_strategy] = balanceInShares[msg.sender][_token][_strategy].sub(_amount,SavingsAccount::transfer insufficient funds) (contracts/SavingsAccount/SavingsAccount.sol#405-408)
	- balanceInShares[_to][_token][_strategy] = balanceInShares[_to][_token][_strategy].add(_amount) (contracts/SavingsAccount/SavingsAccount.sol#411)
",393-416
Low,"Reentrancy in SavingsAccount.withdraw(uint256,address,address,address,bool) (contracts/SavingsAccount/SavingsAccount.sol#193-213):
	External calls:
	- _amount = IYield(_strategy).getSharesForTokens(_amount,_token) (contracts/SavingsAccount/SavingsAccount.sol#202)
	State variables written after the call(s):
	- balanceInShares[msg.sender][_token][_strategy] = balanceInShares[msg.sender][_token][_strategy].sub(_amount,SavingsAccount::withdraw Insufficient amount) (contracts/SavingsAccount/SavingsAccount.sol#204-207)
",193-213
Low,"Reentrancy in SavingsAccount.transferFrom(uint256,address,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#426-456):
	External calls:
	- _amount = IYield(_strategy).getSharesForTokens(_amount,_token) (contracts/SavingsAccount/SavingsAccount.sol#441)
	Event emitted after the call(s):
	- Transfer(_token,_strategy,_from,_to,_amount) (contracts/SavingsAccount/SavingsAccount.sol#453)
",426-456
Low,"Reentrancy in SavingsAccount.transfer(uint256,address,address,address) (contracts/SavingsAccount/SavingsAccount.sol#393-416):
	External calls:
	- _amount = IYield(_strategy).getSharesForTokens(_amount,_token) (contracts/SavingsAccount/SavingsAccount.sol#402)
	Event emitted after the call(s):
	- Transfer(_token,_strategy,msg.sender,_to,_amount) (contracts/SavingsAccount/SavingsAccount.sol#413)
",393-416
Informational,"Low level call in SavingsAccount._transfer(uint256,address,address) (contracts/SavingsAccount/SavingsAccount.sol#269-280):
	- (_success,None) = _to.call{value: _amount}() (contracts/SavingsAccount/SavingsAccount.sol#275)
",269-280
