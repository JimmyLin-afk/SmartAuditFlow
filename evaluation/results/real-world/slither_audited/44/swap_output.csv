Severity,Description,Line
High,"Swap.swapByQuote(address,uint256,address,uint256,address,address,bytes,uint256) (contracts/swap/Swap.sol#106-186) sends eth to arbitrary user
	Dangerous calls:
	- address(msg.sender).transfer(boughtETHAmount) (contracts/swap/Swap.sol#158)
	- address(msg.sender).transfer(toTransfer_scope_0) (contracts/swap/Swap.sol#173)
",106-186
High,"Swap.sweepFees(address[]) (contracts/swap/Swap.sol#243-259) sends eth to arbitrary user
	Dangerous calls:
	- feeRecipient.transfer(address(this).balance) (contracts/swap/Swap.sol#257)
",243-259
Low,"Swap.sweepFees(address[]) (contracts/swap/Swap.sol#243-259) has external calls inside a loop: balance = IERC20(tokens[i]).balanceOf(address(this)) (contracts/swap/Swap.sol#251)
",243-259
Low,"Reentrancy in Swap.setSwapFee(uint256) (contracts/swap/Swap.sol#63-67):
	External calls:
	- onlyTimelock() (contracts/swap/Swap.sol#63)
		- require(bool,string)(msg.sender == governor().timelock(),Only governor may call this function.) (contracts/governance/EmergencyGovernable.sol#33-36)
	State variables written after the call(s):
	- swapFee = swapFee_ (contracts/swap/Swap.sol#65)
",63-67
Low,"Reentrancy in Swap.setFeeRecipient(address) (contracts/swap/Swap.sol#73-76):
	External calls:
	- onlyTimelock() (contracts/swap/Swap.sol#73)
		- require(bool,string)(msg.sender == governor().timelock(),Only governor may call this function.) (contracts/governance/EmergencyGovernable.sol#33-36)
	State variables written after the call(s):
	- feeRecipient = feeRecipient_ (contracts/swap/Swap.sol#74)
",73-76
Low,"Reentrancy in Swap.setSwapFee(uint256) (contracts/swap/Swap.sol#63-67):
	External calls:
	- onlyTimelock() (contracts/swap/Swap.sol#63)
		- require(bool,string)(msg.sender == governor().timelock(),Only governor may call this function.) (contracts/governance/EmergencyGovernable.sol#33-36)
	Event emitted after the call(s):
	- NewSwapFee(swapFee) (contracts/swap/Swap.sol#66)
",63-67
Low,"Reentrancy in Swap.setFeeRecipient(address) (contracts/swap/Swap.sol#73-76):
	External calls:
	- onlyTimelock() (contracts/swap/Swap.sol#73)
		- require(bool,string)(msg.sender == governor().timelock(),Only governor may call this function.) (contracts/governance/EmergencyGovernable.sol#33-36)
	Event emitted after the call(s):
	- NewFeeRecipient(feeRecipient) (contracts/swap/Swap.sol#75)
",73-76
Low,"Swap.swapByQuote(address,uint256,address,uint256,address,address,bytes,uint256) (contracts/swap/Swap.sol#106-186) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,Swap::swapByQuote: Deadline exceeded) (contracts/swap/Swap.sol#116-119)
",106-186
Informational,"Low level call in Swap.fillZrxQuote(IERC20,address,bytes,uint256) (contracts/swap/Swap.sol#200-225):
	- (success,None) = zrxTo.call{value: ethAmount}(zrxData) (contracts/swap/Swap.sol#212)
",200-225
Informational,"Reentrancy in Swap.swapByQuote(address,uint256,address,uint256,address,address,bytes,uint256) (contracts/swap/Swap.sol#106-186):
	External calls:
	- address(msg.sender).transfer(toTransfer_scope_0) (contracts/swap/Swap.sol#173)
	External calls sending eth:
	- (boughtERC20Amount,boughtETHAmount) = fillZrxQuote(IERC20(zrxBuyTokenAddress),zrxTo,zrxData,msg.value) (contracts/swap/Swap.sol#135-140)
		- (success,None) = zrxTo.call{value: ethAmount}(zrxData) (contracts/swap/Swap.sol#212)
	- address(msg.sender).transfer(toTransfer_scope_0) (contracts/swap/Swap.sol#173)
	Event emitted after the call(s):
	- SwappedTokens(zrxSellTokenAddress,zrxBuyTokenAddress,amountToSell,boughtETHAmount,boughtETHAmount.sub(toTransfer_scope_0)) (contracts/swap/Swap.sol#174-180)
",106-186
Informational,"Reentrancy in Swap.swapByQuote(address,uint256,address,uint256,address,address,bytes,uint256) (contracts/swap/Swap.sol#106-186):
	External calls:
	- address(msg.sender).transfer(boughtETHAmount) (contracts/swap/Swap.sol#158)
	External calls sending eth:
	- (boughtERC20Amount,boughtETHAmount) = fillZrxQuote(IERC20(zrxBuyTokenAddress),zrxTo,zrxData,msg.value) (contracts/swap/Swap.sol#135-140)
		- (success,None) = zrxTo.call{value: ethAmount}(zrxData) (contracts/swap/Swap.sol#212)
	- address(msg.sender).transfer(boughtETHAmount) (contracts/swap/Swap.sol#158)
	Event emitted after the call(s):
	- SwappedTokens(zrxSellTokenAddress,zrxBuyTokenAddress,amountToSell,boughtERC20Amount,boughtERC20Amount.sub(toTransfer)) (contracts/swap/Swap.sol#160-166)
",106-186
Informational,"Reentrancy in Swap.sweepFees(address[]) (contracts/swap/Swap.sol#243-259):
	External calls:
	- feeRecipient.transfer(address(this).balance) (contracts/swap/Swap.sol#257)
	Event emitted after the call(s):
	- FeesSwept(address(0),address(this).balance,feeRecipient) (contracts/swap/Swap.sol#258)
",243-259
