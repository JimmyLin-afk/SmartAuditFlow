Check,Severity,Description,Filename,Line
arbitrary-send-eth,High,"Swap.swapByQuote(address,uint256,address,uint256,address,address,bytes,uint256) (contracts/swap/Swap.sol#106-186) sends eth to arbitrary user
	Dangerous calls:
	- address(msg.sender).transfer(boughtETHAmount) (contracts/swap/Swap.sol#158)
	- address(msg.sender).transfer(toTransfer_scope_0) (contracts/swap/Swap.sol#173)
","address,uint256,address,uint256,address,address,bytes,uint256) (contracts/swap/Swap.sol",106-186
arbitrary-send-eth,High,"Swap.sweepFees(address[]) (contracts/swap/Swap.sol#243-259) sends eth to arbitrary user
	Dangerous calls:
	- feeRecipient.transfer(address(this).balance) (contracts/swap/Swap.sol#257)
",address[]) (contracts/swap/Swap.sol,243-259
unchecked-transfer,High,"MockZrxExchangeProxy.sellToUniswap(address[],uint256,uint256,bool) (contracts/test/MockZrxExchangeProxy.sol#13-19) ignores return value by tokenToSell.transferFrom(msg.sender,address(this),1000000000000000000000) (contracts/test/MockZrxExchangeProxy.sol#17)
","address[],uint256,uint256,bool) (contracts/test/MockZrxExchangeProxy.sol",13-19
unchecked-transfer,High,"MockZrxExchangeProxy.sellToUniswap(address[],uint256,uint256,bool) (contracts/test/MockZrxExchangeProxy.sol#13-19) ignores return value by tokenToBuy.transfer(msg.sender,1000000000000000000000) (contracts/test/MockZrxExchangeProxy.sol#18)
","address[],uint256,uint256,bool) (contracts/test/MockZrxExchangeProxy.sol",13-19
unchecked-transfer,High,"MockZrxExchangeProxy.sellToUniswap5(address[],uint256,uint256,bool) (contracts/test/MockZrxExchangeProxy.sol#61-69) ignores return value by IERC20(_1[0]).transferFrom(msg.sender,address(this),allowance) (contracts/test/MockZrxExchangeProxy.sol#65)
","address[],uint256,uint256,bool) (contracts/test/MockZrxExchangeProxy.sol",61-69
unchecked-transfer,High,"MockZrxExchangeProxy.sellToUniswap1(address[],uint256,uint256,bool) (contracts/test/MockZrxExchangeProxy.sol#25-31) ignores return value by tokenToSell.transferFrom(msg.sender,address(this),1000000000000000000000) (contracts/test/MockZrxExchangeProxy.sol#29)
","address[],uint256,uint256,bool) (contracts/test/MockZrxExchangeProxy.sol",25-31
unchecked-transfer,High,"MockZrxExchangeProxy.sellToUniswap2(address[],uint256,uint256,bool) (contracts/test/MockZrxExchangeProxy.sol#37-41) ignores return value by IERC20(_1[1]).transfer(msg.sender,1000000000000000000000) (contracts/test/MockZrxExchangeProxy.sol#40)
","address[],uint256,uint256,bool) (contracts/test/MockZrxExchangeProxy.sol",37-41
uninitialized-local,Medium,"Swap.fillZrxQuote(IERC20,address,bytes,uint256).erc20Delta (contracts/swap/Swap.sol#216) is a local variable never initialized
",N/A,N/A
missing-zero-check,Low,"Swap.setFeeRecipient(address).feeRecipient_ (contracts/swap/Swap.sol#73) lacks a zero-check on :
		- feeRecipient = feeRecipient_ (contracts/swap/Swap.sol#74)
",N/A,N/A
missing-zero-check,Low,"Swap.constructor(address,address,uint256).feeRecipient_ (contracts/swap/Swap.sol#51) lacks a zero-check on :
		- feeRecipient = feeRecipient_ (contracts/swap/Swap.sol#54)
",N/A,N/A
calls-loop,Low,"Swap.sweepFees(address[]) (contracts/swap/Swap.sol#243-259) has external calls inside a loop: balance = IERC20(tokens[i]).balanceOf(address(this)) (contracts/swap/Swap.sol#251)
",address[]) (contracts/swap/Swap.sol,243-259
reentrancy-benign,Low,"Reentrancy in EmergencyPausable.pause() (contracts/governance/EmergencyPausable.sol#16-18):
	External calls:
	- onlyTimelockOrEmergencyGovernance() (contracts/governance/EmergencyPausable.sol#16)
		- require(bool,string)(msg.sender == governor().emergencyGovernance() || msg.sender == governor().timelock(),Only emergency governor or governor may call this function.) (contracts/governance/EmergencyGovernable.sol#51-55)
	State variables written after the call(s):
	- super._pause() (contracts/governance/EmergencyPausable.sol#17)
		- _paused = true (node_modules/@openzeppelin/contracts/security/Pausable.sol#75)
",) (contracts/governance/EmergencyPausable.sol,16-18
reentrancy-benign,Low,"Reentrancy in Swap.setSwapFee(uint256) (contracts/swap/Swap.sol#63-67):
	External calls:
	- onlyTimelock() (contracts/swap/Swap.sol#63)
		- require(bool,string)(msg.sender == governor().timelock(),Only governor may call this function.) (contracts/governance/EmergencyGovernable.sol#33-36)
	State variables written after the call(s):
	- swapFee = swapFee_ (contracts/swap/Swap.sol#65)
",uint256) (contracts/swap/Swap.sol,63-67
reentrancy-benign,Low,"Reentrancy in EmergencyPausable.unpause() (contracts/governance/EmergencyPausable.sol#23-25):
	External calls:
	- onlyTimelockOrEmergencyGovernance() (contracts/governance/EmergencyPausable.sol#23)
		- require(bool,string)(msg.sender == governor().emergencyGovernance() || msg.sender == governor().timelock(),Only emergency governor or governor may call this function.) (contracts/governance/EmergencyGovernable.sol#51-55)
	State variables written after the call(s):
	- super._unpause() (contracts/governance/EmergencyPausable.sol#24)
		- _paused = false (node_modules/@openzeppelin/contracts/security/Pausable.sol#87)
",) (contracts/governance/EmergencyPausable.sol,23-25
reentrancy-benign,Low,"Reentrancy in Swap.setFeeRecipient(address) (contracts/swap/Swap.sol#73-76):
	External calls:
	- onlyTimelock() (contracts/swap/Swap.sol#73)
		- require(bool,string)(msg.sender == governor().timelock(),Only governor may call this function.) (contracts/governance/EmergencyGovernable.sol#33-36)
	State variables written after the call(s):
	- feeRecipient = feeRecipient_ (contracts/swap/Swap.sol#74)
",address) (contracts/swap/Swap.sol,73-76
reentrancy-events,Low,"Reentrancy in EmergencyPausable.pause() (contracts/governance/EmergencyPausable.sol#16-18):
	External calls:
	- onlyTimelockOrEmergencyGovernance() (contracts/governance/EmergencyPausable.sol#16)
		- require(bool,string)(msg.sender == governor().emergencyGovernance() || msg.sender == governor().timelock(),Only emergency governor or governor may call this function.) (contracts/governance/EmergencyGovernable.sol#51-55)
	Event emitted after the call(s):
	- Paused(_msgSender()) (node_modules/@openzeppelin/contracts/security/Pausable.sol#76)
		- super._pause() (contracts/governance/EmergencyPausable.sol#17)
",) (contracts/governance/EmergencyPausable.sol,16-18
reentrancy-events,Low,"Reentrancy in Swap.setSwapFee(uint256) (contracts/swap/Swap.sol#63-67):
	External calls:
	- onlyTimelock() (contracts/swap/Swap.sol#63)
		- require(bool,string)(msg.sender == governor().timelock(),Only governor may call this function.) (contracts/governance/EmergencyGovernable.sol#33-36)
	Event emitted after the call(s):
	- NewSwapFee(swapFee) (contracts/swap/Swap.sol#66)
",uint256) (contracts/swap/Swap.sol,63-67
reentrancy-events,Low,"Reentrancy in EmergencyPausable.unpause() (contracts/governance/EmergencyPausable.sol#23-25):
	External calls:
	- onlyTimelockOrEmergencyGovernance() (contracts/governance/EmergencyPausable.sol#23)
		- require(bool,string)(msg.sender == governor().emergencyGovernance() || msg.sender == governor().timelock(),Only emergency governor or governor may call this function.) (contracts/governance/EmergencyGovernable.sol#51-55)
	Event emitted after the call(s):
	- Unpaused(_msgSender()) (node_modules/@openzeppelin/contracts/security/Pausable.sol#88)
		- super._unpause() (contracts/governance/EmergencyPausable.sol#24)
",) (contracts/governance/EmergencyPausable.sol,23-25
reentrancy-events,Low,"Reentrancy in Swap.setFeeRecipient(address) (contracts/swap/Swap.sol#73-76):
	External calls:
	- onlyTimelock() (contracts/swap/Swap.sol#73)
		- require(bool,string)(msg.sender == governor().timelock(),Only governor may call this function.) (contracts/governance/EmergencyGovernable.sol#33-36)
	Event emitted after the call(s):
	- NewFeeRecipient(feeRecipient) (contracts/swap/Swap.sol#75)
",address) (contracts/swap/Swap.sol,73-76
timestamp,Low,"Swap.swapByQuote(address,uint256,address,uint256,address,address,bytes,uint256) (contracts/swap/Swap.sol#106-186) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,Swap::swapByQuote: Deadline exceeded) (contracts/swap/Swap.sol#116-119)
","address,uint256,address,uint256,address,address,bytes,uint256) (contracts/swap/Swap.sol",106-186
assembly,Informational,"Address.isContract(address) (node_modules/@openzeppelin/contracts/utils/Address.sol#26-36) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Address.sol#32-34)
",address) (node_modules/@openzeppelin/contracts/utils/Address.sol,26-36
assembly,Informational,"Address.verifyCallResult(bool,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#195-215) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Address.sol#207-210)
","bool,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",195-215
solc-version,Informational,"Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.0 (node_modules/@openzeppelin/contracts/access/Ownable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/security/Pausable.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/Address.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/Context.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol#3)
	- ^0.8.0 (contracts/governance/EmergencyGovernable.sol#1)
	- ^0.8.0 (contracts/governance/EmergencyPausable.sol#1)
	- ^0.8.0 (contracts/swap/Swap.sol#1)
	- ^0.8.0 (contracts/test/MockToken.sol#1)
	- ^0.8.0 (contracts/test/MockZrxExchangeProxy.sol#1)
	- ^0.8.0 (contracts/utils/Math.sol#1)
",N/A,N/A
low-level-calls,Informational,"Low level call in Swap.fillZrxQuote(IERC20,address,bytes,uint256) (contracts/swap/Swap.sol#200-225):
	- (success,None) = zrxTo.call{value: ethAmount}(zrxData) (contracts/swap/Swap.sol#212)
","IERC20,address,bytes,uint256) (contracts/swap/Swap.sol",200-225
low-level-calls,Informational,"Low level call in Address.sendValue(address,uint256) (node_modules/@openzeppelin/contracts/utils/Address.sol#54-59):
	- (success,None) = recipient.call{value: amount}() (node_modules/@openzeppelin/contracts/utils/Address.sol#57)
","address,uint256) (node_modules/@openzeppelin/contracts/utils/Address.sol",54-59
low-level-calls,Informational,"Low level call in Address.functionStaticCall(address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#151-160):
	- (success,returndata) = target.staticcall(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#158)
","address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",151-160
low-level-calls,Informational,"Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#122-133):
	- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#131)
","address,bytes,uint256,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",122-133
low-level-calls,Informational,"Low level call in Address.functionDelegateCall(address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#178-187):
	- (success,returndata) = target.delegatecall(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#185)
","address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol",178-187
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap(address[],uint256,uint256,bool)._3 (contracts/test/MockZrxExchangeProxy.sol#13) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap3(address[],uint256,uint256,bool)._3 (contracts/test/MockZrxExchangeProxy.sol#46) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap3(address[],uint256,uint256,bool)._2 (contracts/test/MockZrxExchangeProxy.sol#46) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap3(address[],uint256,uint256,bool)._1 (contracts/test/MockZrxExchangeProxy.sol#46) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap2(address[],uint256,uint256,bool)._4 (contracts/test/MockZrxExchangeProxy.sol#37) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap4(address[],uint256,uint256,bool)._3 (contracts/test/MockZrxExchangeProxy.sol#53) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap1(address[],uint256,uint256,bool)._2 (contracts/test/MockZrxExchangeProxy.sol#25) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap(address[],uint256,uint256,bool)._1 (contracts/test/MockZrxExchangeProxy.sol#13) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap2(address[],uint256,uint256,bool)._1 (contracts/test/MockZrxExchangeProxy.sol#37) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap4(address[],uint256,uint256,bool)._1 (contracts/test/MockZrxExchangeProxy.sol#53) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap1(address[],uint256,uint256,bool)._3 (contracts/test/MockZrxExchangeProxy.sol#25) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap5(address[],uint256,uint256,bool)._1 (contracts/test/MockZrxExchangeProxy.sol#61) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap5(address[],uint256,uint256,bool)._3 (contracts/test/MockZrxExchangeProxy.sol#61) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap1(address[],uint256,uint256,bool)._4 (contracts/test/MockZrxExchangeProxy.sol#25) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap5(address[],uint256,uint256,bool)._2 (contracts/test/MockZrxExchangeProxy.sol#61) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap2(address[],uint256,uint256,bool)._2 (contracts/test/MockZrxExchangeProxy.sol#37) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap2(address[],uint256,uint256,bool)._3 (contracts/test/MockZrxExchangeProxy.sol#37) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap5(address[],uint256,uint256,bool)._4 (contracts/test/MockZrxExchangeProxy.sol#61) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap1(address[],uint256,uint256,bool)._1 (contracts/test/MockZrxExchangeProxy.sol#25) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap4(address[],uint256,uint256,bool)._4 (contracts/test/MockZrxExchangeProxy.sol#53) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap(address[],uint256,uint256,bool)._4 (contracts/test/MockZrxExchangeProxy.sol#13) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap(address[],uint256,uint256,bool)._2 (contracts/test/MockZrxExchangeProxy.sol#13) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap3(address[],uint256,uint256,bool)._4 (contracts/test/MockZrxExchangeProxy.sol#46) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter MockZrxExchangeProxy.sellToUniswap4(address[],uint256,uint256,bool)._2 (contracts/test/MockZrxExchangeProxy.sol#53) is not in mixedCase
",N/A,N/A
reentrancy-unlimited-gas,Informational,"Reentrancy in Swap.swapByQuote(address,uint256,address,uint256,address,address,bytes,uint256) (contracts/swap/Swap.sol#106-186):
	External calls:
	- address(msg.sender).transfer(toTransfer_scope_0) (contracts/swap/Swap.sol#173)
	External calls sending eth:
	- (boughtERC20Amount,boughtETHAmount) = fillZrxQuote(IERC20(zrxBuyTokenAddress),zrxTo,zrxData,msg.value) (contracts/swap/Swap.sol#135-140)
		- (success,None) = zrxTo.call{value: ethAmount}(zrxData) (contracts/swap/Swap.sol#212)
	- address(msg.sender).transfer(toTransfer_scope_0) (contracts/swap/Swap.sol#173)
	Event emitted after the call(s):
	- SwappedTokens(zrxSellTokenAddress,zrxBuyTokenAddress,amountToSell,boughtETHAmount,boughtETHAmount.sub(toTransfer_scope_0)) (contracts/swap/Swap.sol#174-180)
","address,uint256,address,uint256,address,address,bytes,uint256) (contracts/swap/Swap.sol",106-186
reentrancy-unlimited-gas,Informational,"Reentrancy in Swap.swapByQuote(address,uint256,address,uint256,address,address,bytes,uint256) (contracts/swap/Swap.sol#106-186):
	External calls:
	- address(msg.sender).transfer(boughtETHAmount) (contracts/swap/Swap.sol#158)
	External calls sending eth:
	- (boughtERC20Amount,boughtETHAmount) = fillZrxQuote(IERC20(zrxBuyTokenAddress),zrxTo,zrxData,msg.value) (contracts/swap/Swap.sol#135-140)
		- (success,None) = zrxTo.call{value: ethAmount}(zrxData) (contracts/swap/Swap.sol#212)
	- address(msg.sender).transfer(boughtETHAmount) (contracts/swap/Swap.sol#158)
	Event emitted after the call(s):
	- SwappedTokens(zrxSellTokenAddress,zrxBuyTokenAddress,amountToSell,boughtERC20Amount,boughtERC20Amount.sub(toTransfer)) (contracts/swap/Swap.sol#160-166)
","address,uint256,address,uint256,address,address,bytes,uint256) (contracts/swap/Swap.sol",106-186
reentrancy-unlimited-gas,Informational,"Reentrancy in Swap.sweepFees(address[]) (contracts/swap/Swap.sol#243-259):
	External calls:
	- feeRecipient.transfer(address(this).balance) (contracts/swap/Swap.sol#257)
	Event emitted after the call(s):
	- FeesSwept(address(0),address(this).balance,feeRecipient) (contracts/swap/Swap.sol#258)
",address[]) (contracts/swap/Swap.sol,243-259
