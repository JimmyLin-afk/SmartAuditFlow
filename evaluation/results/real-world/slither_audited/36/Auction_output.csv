Severity,Description,Line
High,"Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109) uses arbitrary from in transferFrom: IERC20(outputTokens[i_scope_0]).safeTransferFrom(address(basket),msg.sender,outputWeights[i_scope_0]) (contracts/Auction.sol#86)
",69-109
High,"Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109) ignores return value by basketAsERC20.transfer(msg.sender,bondAmount) (contracts/Auction.sol#101)
",69-109
High,"Auction.withdrawBounty(uint256[]) (contracts/Auction.sol#140-151) ignores return value by IERC20(bounty.token).transfer(msg.sender,bounty.amount) (contracts/Auction.sol#146)
",140-151
Medium,"Reentrancy in Auction.bondBurn() (contracts/Auction.sol#111-124):
	External calls:
	- basket.auctionBurn(bondAmount) (contracts/Auction.sol#116)
	State variables written after the call(s):
	- auctionOngoing = false (contracts/Auction.sol#118)
	Auction.auctionOngoing (contracts/Auction.sol#16) can be used in cross function reentrancies:
	- Auction.auctionOngoing (contracts/Auction.sol#16)
	- Auction.bondBurn() (contracts/Auction.sol#111-124)
	- Auction.bondForRebalance() (contracts/Auction.sol#54-67)
	- Auction.killAuction() (contracts/Auction.sol#43-45)
	- Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109)
	- Auction.startAuction() (contracts/Auction.sol#34-41)
	- hasBonded = false (contracts/Auction.sol#117)
	Auction.hasBonded (contracts/Auction.sol#18) can be used in cross function reentrancies:
	- Auction.bondBurn() (contracts/Auction.sol#111-124)
	- Auction.bondForRebalance() (contracts/Auction.sol#54-67)
	- Auction.hasBonded (contracts/Auction.sol#18)
	- Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109)
",111-124
Medium,"Reentrancy in Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109):
	External calls:
	- IERC20(inputTokens[i]).safeTransferFrom(msg.sender,address(basket),inputWeights[i]) (contracts/Auction.sol#82)
	- IERC20(outputTokens[i_scope_0]).safeTransferFrom(address(basket),msg.sender,outputWeights[i_scope_0]) (contracts/Auction.sol#86)
	- basketAsERC20.transfer(msg.sender,bondAmount) (contracts/Auction.sol#101)
	- withdrawBounty(bountyIDs) (contracts/Auction.sol#102)
		- IERC20(bounty.token).transfer(msg.sender,bounty.amount) (contracts/Auction.sol#146)
	- basket.setNewWeights() (contracts/Auction.sol#103)
	- basket.updateIBRatio(newRatio) (contracts/Auction.sol#104)
	State variables written after the call(s):
	- auctionOngoing = false (contracts/Auction.sol#105)
	Auction.auctionOngoing (contracts/Auction.sol#16) can be used in cross function reentrancies:
	- Auction.auctionOngoing (contracts/Auction.sol#16)
	- Auction.bondBurn() (contracts/Auction.sol#111-124)
	- Auction.bondForRebalance() (contracts/Auction.sol#54-67)
	- Auction.killAuction() (contracts/Auction.sol#43-45)
	- Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109)
	- Auction.startAuction() (contracts/Auction.sol#34-41)
	- hasBonded = false (contracts/Auction.sol#106)
	Auction.hasBonded (contracts/Auction.sol#18) can be used in cross function reentrancies:
	- Auction.bondBurn() (contracts/Auction.sol#111-124)
	- Auction.bondForRebalance() (contracts/Auction.sol#54-67)
	- Auction.hasBonded (contracts/Auction.sol#18)
	- Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109)
",69-109
Medium,"Reentrancy in Auction.bondForRebalance() (contracts/Auction.sol#54-67):
	External calls:
	- basketToken.safeTransferFrom(msg.sender,address(this),bondAmount) (contracts/Auction.sol#62)
	State variables written after the call(s):
	- hasBonded = true (contracts/Auction.sol#63)
	Auction.hasBonded (contracts/Auction.sol#18) can be used in cross function reentrancies:
	- Auction.bondBurn() (contracts/Auction.sol#111-124)
	- Auction.bondForRebalance() (contracts/Auction.sol#54-67)
	- Auction.hasBonded (contracts/Auction.sol#18)
	- Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109)
",54-67
Medium,"Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109) ignores return value by basket.updateIBRatio(newRatio) (contracts/Auction.sol#104)
",69-109
Low,"Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109) has external calls inside a loop: require(bool)(IERC20(pendingTokens[i_scope_1]).balanceOf(address(basket)) >= tokensNeeded) (contracts/Auction.sol#98)
",69-109
Low,"Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109) has external calls inside a loop: tokensNeeded = basketAsERC20.totalSupply() * pendingWeights[i_scope_1] * newRatio / BASE / BASE (contracts/Auction.sol#97)
",69-109
Low,"Reentrancy in Auction.bondForRebalance() (contracts/Auction.sol#54-67):
	External calls:
	- basketToken.safeTransferFrom(msg.sender,address(this),bondAmount) (contracts/Auction.sol#62)
	State variables written after the call(s):
	- auctionBonder = msg.sender (contracts/Auction.sol#64)
",54-67
Low,"Reentrancy in Auction.addBounty(IERC20,uint256) (contracts/Auction.sol#126-138):
	External calls:
	- token.safeTransferFrom(msg.sender,address(this),amount) (contracts/Auction.sol#128)
	State variables written after the call(s):
	- _bounties.push(Bounty({token:address(token),amount:amount,active:true})) (contracts/Auction.sol#129-133)
",126-138
Low,"Reentrancy in Auction.bondBurn() (contracts/Auction.sol#111-124):
	External calls:
	- basket.auctionBurn(bondAmount) (contracts/Auction.sol#116)
	- basket.deleteNewIndex() (contracts/Auction.sol#119)
	State variables written after the call(s):
	- auctionBonder = address(0) (contracts/Auction.sol#123)
",111-124
Low,"Reentrancy in Auction.bondForRebalance() (contracts/Auction.sol#54-67):
	External calls:
	- basketToken.safeTransferFrom(msg.sender,address(this),bondAmount) (contracts/Auction.sol#62)
	Event emitted after the call(s):
	- Bonded(msg.sender,bondAmount) (contracts/Auction.sol#66)
",54-67
Low,"Reentrancy in Auction.withdrawBounty(uint256[]) (contracts/Auction.sol#140-151):
	External calls:
	- IERC20(bounty.token).transfer(msg.sender,bounty.amount) (contracts/Auction.sol#146)
	Event emitted after the call(s):
	- BountyClaimed(msg.sender,bounty.token,bounty.amount,bountyIds[i]) (contracts/Auction.sol#149)
",140-151
Low,"Reentrancy in Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109):
	External calls:
	- IERC20(inputTokens[i]).safeTransferFrom(msg.sender,address(basket),inputWeights[i]) (contracts/Auction.sol#82)
	- IERC20(outputTokens[i_scope_0]).safeTransferFrom(address(basket),msg.sender,outputWeights[i_scope_0]) (contracts/Auction.sol#86)
	- basketAsERC20.transfer(msg.sender,bondAmount) (contracts/Auction.sol#101)
	- withdrawBounty(bountyIDs) (contracts/Auction.sol#102)
		- IERC20(bounty.token).transfer(msg.sender,bounty.amount) (contracts/Auction.sol#146)
	Event emitted after the call(s):
	- BountyClaimed(msg.sender,bounty.token,bounty.amount,bountyIds[i]) (contracts/Auction.sol#149)
		- withdrawBounty(bountyIDs) (contracts/Auction.sol#102)
",69-109
Low,"Reentrancy in Auction.bondBurn() (contracts/Auction.sol#111-124):
	External calls:
	- basket.auctionBurn(bondAmount) (contracts/Auction.sol#116)
	- basket.deleteNewIndex() (contracts/Auction.sol#119)
	Event emitted after the call(s):
	- BondBurned(msg.sender,auctionBonder,bondAmount) (contracts/Auction.sol#121)
",111-124
Low,"Reentrancy in Auction.settleAuction(uint256[],address[],uint256[],address[],uint256[]) (contracts/Auction.sol#69-109):
	External calls:
	- IERC20(inputTokens[i]).safeTransferFrom(msg.sender,address(basket),inputWeights[i]) (contracts/Auction.sol#82)
	- IERC20(outputTokens[i_scope_0]).safeTransferFrom(address(basket),msg.sender,outputWeights[i_scope_0]) (contracts/Auction.sol#86)
	- basketAsERC20.transfer(msg.sender,bondAmount) (contracts/Auction.sol#101)
	- withdrawBounty(bountyIDs) (contracts/Auction.sol#102)
		- IERC20(bounty.token).transfer(msg.sender,bounty.amount) (contracts/Auction.sol#146)
	- basket.setNewWeights() (contracts/Auction.sol#103)
	- basket.updateIBRatio(newRatio) (contracts/Auction.sol#104)
	Event emitted after the call(s):
	- AuctionSettled(msg.sender) (contracts/Auction.sol#108)
",69-109
Low,"Reentrancy in Auction.addBounty(IERC20,uint256) (contracts/Auction.sol#126-138):
	External calls:
	- token.safeTransferFrom(msg.sender,address(this),amount) (contracts/Auction.sol#128)
	Event emitted after the call(s):
	- BountyAdded(token,amount,id) (contracts/Auction.sol#136)
",126-138
Informational,"Auction.startAuction() (contracts/Auction.sol#34-41) compares to a boolean constant:
	-require(bool,string)(auctionOngoing == false,ongoing auction) (contracts/Auction.sol#35)
",34-41
Informational,"Auction.BLOCK_DECREMENT (contracts/Auction.sol#14) is never used in Auction (contracts/Auction.sol#9-153)
",9-153
