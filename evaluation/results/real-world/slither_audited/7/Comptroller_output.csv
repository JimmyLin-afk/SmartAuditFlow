Severity,Description,Line
High,"Comptroller.transferComp(address,uint256,uint256) (contracts/Comptroller.sol#1290-1300) ignores return value by blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
",1290-1300
High,"UnitrollerAdminStorage.comptrollerImplementation (contracts/ComptrollerStorage.sol#22) is never initialized. It is used in:
	- Comptroller.adminOrInitializing() (contracts/Comptroller.sol#1148-1150)
",1148-1150
Medium,"Comptroller.seizeVerify(address,address,address,address,uint256) (contracts/Comptroller.sol#592-609) uses a Boolean constant improperly:
	-false (contracts/Comptroller.sol#606)
",592-609
Medium,"Comptroller.repayBorrowVerify(address,address,address,uint256,uint256) (contracts/Comptroller.sol#457-474) uses a Boolean constant improperly:
	-false (contracts/Comptroller.sol#471)
",457-474
Medium,"Comptroller.mintVerify(address,address,uint256,uint256) (contracts/Comptroller.sol#270-281) uses a Boolean constant improperly:
	-false (contracts/Comptroller.sol#278)
",270-281
Medium,"Comptroller.transferVerify(address,address,address,uint256) (contracts/Comptroller.sol#645-656) uses a Boolean constant improperly:
	-false (contracts/Comptroller.sol#653)
",645-656
Medium,"Comptroller.borrowVerify(address,address,uint256) (contracts/Comptroller.sol#408-418) uses a Boolean constant improperly:
	-false (contracts/Comptroller.sol#415)
",408-418
Medium,"Comptroller.liquidateBorrowVerify(address,address,address,address,uint256,uint256) (contracts/Comptroller.sol#527-546) uses a Boolean constant improperly:
	-false (contracts/Comptroller.sol#543)
",527-546
Medium,"Comptroller._addCompMarketInternal(address) (contracts/Comptroller.sol#1387-1408) uses a dangerous strict equality:
	- compSupplyState[cToken].index == 0 && compSupplyState[cToken].block == 0 (contracts/Comptroller.sol#1395)
",1387-1408
Medium,"Reentrancy in Comptroller.seizeAllowed(address,address,address,address,uint256) (contracts/Comptroller.sol#556-582):
	External calls:
	- distributeSupplierComp(cTokenCollateral,borrower,false) (contracts/Comptroller.sol#578)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	- distributeSupplierComp(cTokenCollateral,liquidator,false) (contracts/Comptroller.sol#579)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	State variables written after the call(s):
	- distributeSupplierComp(cTokenCollateral,liquidator,false) (contracts/Comptroller.sol#579)
		- compAccrued[supplier] = transferComp(supplier,supplierAccrued,0) (contracts/Comptroller.sol#1257)
		- compAccrued[supplier] = transferComp(supplier,supplierAccrued,compClaimThreshold) (contracts/Comptroller.sol#1257)
	ComptrollerV3Storage.compAccrued (contracts/ComptrollerStorage.sol#130) can be used in cross function reentrancies:
	- ComptrollerV3Storage.compAccrued (contracts/ComptrollerStorage.sol#130)
	- Comptroller.distributeBorrowerComp(address,address,Exponential.Exp,bool) (contracts/Comptroller.sol#1267-1281)
	- Comptroller.distributeSupplierComp(address,address,bool) (contracts/Comptroller.sol#1243-1259)
	- distributeSupplierComp(cTokenCollateral,liquidator,false) (contracts/Comptroller.sol#579)
		- compSupplierIndex[cToken][supplier] = supplyIndex.mantissa (contracts/Comptroller.sol#1247)
	ComptrollerV3Storage.compSupplierIndex (contracts/ComptrollerStorage.sol#124) can be used in cross function reentrancies:
	- ComptrollerV3Storage.compSupplierIndex (contracts/ComptrollerStorage.sol#124)
	- Comptroller.distributeSupplierComp(address,address,bool) (contracts/Comptroller.sol#1243-1259)
",556-582
Medium,"Reentrancy in Comptroller.claimComp(address[],CToken[],bool,bool) (contracts/Comptroller.sol#1328-1346):
	External calls:
	- distributeBorrowerComp(address(cToken),holders[j],borrowIndex,true) (contracts/Comptroller.sol#1336)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	- distributeSupplierComp(address(cToken),holders[j_scope_0],true) (contracts/Comptroller.sol#1342)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	State variables written after the call(s):
	- distributeBorrowerComp(address(cToken),holders[j],borrowIndex,true) (contracts/Comptroller.sol#1336)
		- compAccrued[borrower] = transferComp(borrower,borrowerAccrued,0) (contracts/Comptroller.sol#1278)
		- compAccrued[borrower] = transferComp(borrower,borrowerAccrued,compClaimThreshold) (contracts/Comptroller.sol#1278)
	ComptrollerV3Storage.compAccrued (contracts/ComptrollerStorage.sol#130) can be used in cross function reentrancies:
	- ComptrollerV3Storage.compAccrued (contracts/ComptrollerStorage.sol#130)
	- Comptroller.distributeBorrowerComp(address,address,Exponential.Exp,bool) (contracts/Comptroller.sol#1267-1281)
	- Comptroller.distributeSupplierComp(address,address,bool) (contracts/Comptroller.sol#1243-1259)
	- distributeSupplierComp(address(cToken),holders[j_scope_0],true) (contracts/Comptroller.sol#1342)
		- compAccrued[supplier] = transferComp(supplier,supplierAccrued,0) (contracts/Comptroller.sol#1257)
		- compAccrued[supplier] = transferComp(supplier,supplierAccrued,compClaimThreshold) (contracts/Comptroller.sol#1257)
	ComptrollerV3Storage.compAccrued (contracts/ComptrollerStorage.sol#130) can be used in cross function reentrancies:
	- ComptrollerV3Storage.compAccrued (contracts/ComptrollerStorage.sol#130)
	- Comptroller.distributeBorrowerComp(address,address,Exponential.Exp,bool) (contracts/Comptroller.sol#1267-1281)
	- Comptroller.distributeSupplierComp(address,address,bool) (contracts/Comptroller.sol#1243-1259)
	- updateCompBorrowIndex(address(cToken),borrowIndex) (contracts/Comptroller.sol#1334)
		- compBorrowState[cToken] = CompMarketState({index:safe224(index.mantissa,new index exceeds 224 bits),block:safe32(blockNumber,block number exceeds 32 bits)}) (contracts/Comptroller.sol#1229-1232)
		- borrowState.block = safe32(blockNumber,block number exceeds 32 bits) (contracts/Comptroller.sol#1234)
	ComptrollerV3Storage.compBorrowState (contracts/ComptrollerStorage.sol#121) can be used in cross function reentrancies:
	- Comptroller._addCompMarketInternal(address) (contracts/Comptroller.sol#1387-1408)
	- ComptrollerV3Storage.compBorrowState (contracts/ComptrollerStorage.sol#121)
	- Comptroller.distributeBorrowerComp(address,address,Exponential.Exp,bool) (contracts/Comptroller.sol#1267-1281)
	- Comptroller.updateCompBorrowIndex(address,Exponential.Exp) (contracts/Comptroller.sol#1219-1236)
	- distributeBorrowerComp(address(cToken),holders[j],borrowIndex,true) (contracts/Comptroller.sol#1336)
		- compBorrowerIndex[cToken][borrower] = borrowIndex.mantissa (contracts/Comptroller.sol#1271)
	ComptrollerV3Storage.compBorrowerIndex (contracts/ComptrollerStorage.sol#127) can be used in cross function reentrancies:
	- ComptrollerV3Storage.compBorrowerIndex (contracts/ComptrollerStorage.sol#127)
	- Comptroller.distributeBorrowerComp(address,address,Exponential.Exp,bool) (contracts/Comptroller.sol#1267-1281)
	- distributeSupplierComp(address(cToken),holders[j_scope_0],true) (contracts/Comptroller.sol#1342)
		- compSupplierIndex[cToken][supplier] = supplyIndex.mantissa (contracts/Comptroller.sol#1247)
	ComptrollerV3Storage.compSupplierIndex (contracts/ComptrollerStorage.sol#124) can be used in cross function reentrancies:
	- ComptrollerV3Storage.compSupplierIndex (contracts/ComptrollerStorage.sol#124)
	- Comptroller.distributeSupplierComp(address,address,bool) (contracts/Comptroller.sol#1243-1259)
	- updateCompSupplyIndex(address(cToken)) (contracts/Comptroller.sol#1340)
		- compSupplyState[cToken] = CompMarketState({index:safe224(index.mantissa,new index exceeds 224 bits),block:safe32(blockNumber,block number exceeds 32 bits)}) (contracts/Comptroller.sol#1206-1209)
		- supplyState.block = safe32(blockNumber,block number exceeds 32 bits) (contracts/Comptroller.sol#1211)
	ComptrollerV3Storage.compSupplyState (contracts/ComptrollerStorage.sol#118) can be used in cross function reentrancies:
	- Comptroller._addCompMarketInternal(address) (contracts/Comptroller.sol#1387-1408)
	- ComptrollerV3Storage.compSupplyState (contracts/ComptrollerStorage.sol#118)
	- Comptroller.distributeSupplierComp(address,address,bool) (contracts/Comptroller.sol#1243-1259)
	- Comptroller.updateCompSupplyIndex(address) (contracts/Comptroller.sol#1196-1213)
",1328-1346
Medium,"Reentrancy in Comptroller.refreshCompSpeedsInternal() (contracts/Comptroller.sol#1162-1190):
	External calls:
	- assetPrice = Exp({mantissa:oracle.getUnderlyingPrice(cToken_scope_1)}) (contracts/Comptroller.sol#1177)
	State variables written after the call(s):
	- compSpeeds[address(cToken_scope_3)] = newSpeed (contracts/Comptroller.sol#1187)
	ComptrollerV3Storage.compSpeeds (contracts/ComptrollerStorage.sol#115) can be used in cross function reentrancies:
	- ComptrollerV3Storage.compSpeeds (contracts/ComptrollerStorage.sol#115)
	- Comptroller.refreshCompSpeedsInternal() (contracts/Comptroller.sol#1162-1190)
	- Comptroller.updateCompBorrowIndex(address,Exponential.Exp) (contracts/Comptroller.sol#1219-1236)
	- Comptroller.updateCompSupplyIndex(address) (contracts/Comptroller.sol#1196-1213)
",1162-1190
Medium,"Reentrancy in Comptroller.transferAllowed(address,address,address,uint256) (contracts/Comptroller.sol#619-636):
	External calls:
	- allowed = redeemAllowedInternal(cToken,src,transferTokens) (contracts/Comptroller.sol#625)
		- vars.oraclePriceMantissa = oracle.getUnderlyingPrice(asset) (contracts/Comptroller.sol#755)
	- distributeSupplierComp(cToken,src,false) (contracts/Comptroller.sol#632)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	- distributeSupplierComp(cToken,dst,false) (contracts/Comptroller.sol#633)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	State variables written after the call(s):
	- distributeSupplierComp(cToken,dst,false) (contracts/Comptroller.sol#633)
		- compAccrued[supplier] = transferComp(supplier,supplierAccrued,0) (contracts/Comptroller.sol#1257)
		- compAccrued[supplier] = transferComp(supplier,supplierAccrued,compClaimThreshold) (contracts/Comptroller.sol#1257)
	ComptrollerV3Storage.compAccrued (contracts/ComptrollerStorage.sol#130) can be used in cross function reentrancies:
	- ComptrollerV3Storage.compAccrued (contracts/ComptrollerStorage.sol#130)
	- Comptroller.distributeBorrowerComp(address,address,Exponential.Exp,bool) (contracts/Comptroller.sol#1267-1281)
	- Comptroller.distributeSupplierComp(address,address,bool) (contracts/Comptroller.sol#1243-1259)
	- distributeSupplierComp(cToken,dst,false) (contracts/Comptroller.sol#633)
		- compSupplierIndex[cToken][supplier] = supplyIndex.mantissa (contracts/Comptroller.sol#1247)
	ComptrollerV3Storage.compSupplierIndex (contracts/ComptrollerStorage.sol#124) can be used in cross function reentrancies:
	- ComptrollerV3Storage.compSupplierIndex (contracts/ComptrollerStorage.sol#124)
	- Comptroller.distributeSupplierComp(address,address,bool) (contracts/Comptroller.sol#1243-1259)
",619-636
Medium,"Comptroller._supportMarket(CToken) (contracts/Comptroller.sol#1015-1033) ignores return value by cToken.isCToken() (contracts/Comptroller.sol#1024)
",1015-1033
Medium,"Comptroller.exitMarket(address) (contracts/Comptroller.sol#183-233) ignores return value by (oErr,tokensHeld,amountOwed,None) = cToken.getAccountSnapshot(msg.sender) (contracts/Comptroller.sol#186)
",183-233
Low,"Comptroller.updateCompBorrowIndex(address,Exponential.Exp) (contracts/Comptroller.sol#1219-1236) has external calls inside a loop: borrowAmount = div_(CToken(cToken).totalBorrows(),marketBorrowIndex) (contracts/Comptroller.sol#1225)
",1219-1236
Low,"Comptroller.transferComp(address,uint256,uint256) (contracts/Comptroller.sol#1290-1300) has external calls inside a loop: bloRemaining = blo.balanceOf(address(this)) (contracts/Comptroller.sol#1293)
",1290-1300
Low,"Comptroller.updateCompSupplyIndex(address) (contracts/Comptroller.sol#1196-1213) has external calls inside a loop: supplyTokens = CToken(cToken).totalSupply() (contracts/Comptroller.sol#1202)
",1196-1213
Low,"Comptroller.distributeSupplierComp(address,address,bool) (contracts/Comptroller.sol#1243-1259) has external calls inside a loop: supplierTokens = CToken(cToken).balanceOf(supplier) (contracts/Comptroller.sol#1254)
",1243-1259
Low,"Comptroller.transferComp(address,uint256,uint256) (contracts/Comptroller.sol#1290-1300) has external calls inside a loop: blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
",1290-1300
Low,"Comptroller.claimComp(address[],CToken[],bool,bool) (contracts/Comptroller.sol#1328-1346) has external calls inside a loop: borrowIndex = Exp({mantissa:cToken.borrowIndex()}) (contracts/Comptroller.sol#1333)
",1328-1346
Low,"Comptroller.distributeBorrowerComp(address,address,Exponential.Exp,bool) (contracts/Comptroller.sol#1267-1281) has external calls inside a loop: borrowerAmount = div_(CToken(cToken).borrowBalanceStored(borrower),marketBorrowIndex) (contracts/Comptroller.sol#1275)
",1267-1281
Low,"Reentrancy in Comptroller.transferAllowed(address,address,address,uint256) (contracts/Comptroller.sol#619-636):
	External calls:
	- allowed = redeemAllowedInternal(cToken,src,transferTokens) (contracts/Comptroller.sol#625)
		- vars.oraclePriceMantissa = oracle.getUnderlyingPrice(asset) (contracts/Comptroller.sol#755)
	State variables written after the call(s):
	- updateCompSupplyIndex(cToken) (contracts/Comptroller.sol#631)
		- compSupplyState[cToken] = CompMarketState({index:safe224(index.mantissa,new index exceeds 224 bits),block:safe32(blockNumber,block number exceeds 32 bits)}) (contracts/Comptroller.sol#1206-1209)
		- supplyState.block = safe32(blockNumber,block number exceeds 32 bits) (contracts/Comptroller.sol#1211)
",619-636
Low,"Reentrancy in Comptroller.borrowAllowed(address,address,uint256) (contracts/Comptroller.sol#350-400):
	External calls:
	- (err_scope_0,None,shortfall) = getHypotheticalAccountLiquidityInternal(borrower,CToken(cToken),0,borrowAmount) (contracts/Comptroller.sol#386)
		- vars.oraclePriceMantissa = oracle.getUnderlyingPrice(asset) (contracts/Comptroller.sol#755)
	State variables written after the call(s):
	- updateCompBorrowIndex(cToken,borrowIndex) (contracts/Comptroller.sol#396)
		- compBorrowState[cToken] = CompMarketState({index:safe224(index.mantissa,new index exceeds 224 bits),block:safe32(blockNumber,block number exceeds 32 bits)}) (contracts/Comptroller.sol#1229-1232)
		- borrowState.block = safe32(blockNumber,block number exceeds 32 bits) (contracts/Comptroller.sol#1234)
",350-400
Low,"Reentrancy in Comptroller.redeemAllowed(address,address,uint256) (contracts/Comptroller.sol#290-301):
	External calls:
	- allowed = redeemAllowedInternal(cToken,redeemer,redeemTokens) (contracts/Comptroller.sol#291)
		- vars.oraclePriceMantissa = oracle.getUnderlyingPrice(asset) (contracts/Comptroller.sol#755)
	State variables written after the call(s):
	- updateCompSupplyIndex(cToken) (contracts/Comptroller.sol#297)
		- compSupplyState[cToken] = CompMarketState({index:safe224(index.mantissa,new index exceeds 224 bits),block:safe32(blockNumber,block number exceeds 32 bits)}) (contracts/Comptroller.sol#1206-1209)
		- supplyState.block = safe32(blockNumber,block number exceeds 32 bits) (contracts/Comptroller.sol#1211)
",290-301
Low,"Reentrancy in Comptroller.exitMarket(address) (contracts/Comptroller.sol#183-233):
	External calls:
	- allowed = redeemAllowedInternal(cTokenAddress,msg.sender,tokensHeld) (contracts/Comptroller.sol#195)
		- vars.oraclePriceMantissa = oracle.getUnderlyingPrice(asset) (contracts/Comptroller.sol#755)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (contracts/ErrorReporter.sol#69)
		- failOpaque(Error.REJECTION,FailureInfo.EXIT_MARKET_REJECTION,allowed) (contracts/Comptroller.sol#197)
	- MarketExited(cToken,msg.sender) (contracts/Comptroller.sol#230)
",183-233
Low,"Reentrancy in Comptroller.borrowAllowed(address,address,uint256) (contracts/Comptroller.sol#350-400):
	External calls:
	- (err_scope_0,None,shortfall) = getHypotheticalAccountLiquidityInternal(borrower,CToken(cToken),0,borrowAmount) (contracts/Comptroller.sol#386)
		- vars.oraclePriceMantissa = oracle.getUnderlyingPrice(asset) (contracts/Comptroller.sol#755)
	- distributeBorrowerComp(cToken,borrower,borrowIndex,false) (contracts/Comptroller.sol#397)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	Event emitted after the call(s):
	- DistributedBorrowerComp(CToken(cToken),borrower,borrowerDelta,borrowIndex.mantissa) (contracts/Comptroller.sol#1279)
		- distributeBorrowerComp(cToken,borrower,borrowIndex,false) (contracts/Comptroller.sol#397)
",350-400
Low,"Reentrancy in Comptroller.transferAllowed(address,address,address,uint256) (contracts/Comptroller.sol#619-636):
	External calls:
	- allowed = redeemAllowedInternal(cToken,src,transferTokens) (contracts/Comptroller.sol#625)
		- vars.oraclePriceMantissa = oracle.getUnderlyingPrice(asset) (contracts/Comptroller.sol#755)
	- distributeSupplierComp(cToken,src,false) (contracts/Comptroller.sol#632)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	- distributeSupplierComp(cToken,dst,false) (contracts/Comptroller.sol#633)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	Event emitted after the call(s):
	- DistributedSupplierComp(CToken(cToken),supplier,supplierDelta,supplyIndex.mantissa) (contracts/Comptroller.sol#1258)
		- distributeSupplierComp(cToken,dst,false) (contracts/Comptroller.sol#633)
",619-636
Low,"Reentrancy in Comptroller.redeemAllowed(address,address,uint256) (contracts/Comptroller.sol#290-301):
	External calls:
	- allowed = redeemAllowedInternal(cToken,redeemer,redeemTokens) (contracts/Comptroller.sol#291)
		- vars.oraclePriceMantissa = oracle.getUnderlyingPrice(asset) (contracts/Comptroller.sol#755)
	- distributeSupplierComp(cToken,redeemer,false) (contracts/Comptroller.sol#298)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	Event emitted after the call(s):
	- DistributedSupplierComp(CToken(cToken),supplier,supplierDelta,supplyIndex.mantissa) (contracts/Comptroller.sol#1258)
		- distributeSupplierComp(cToken,redeemer,false) (contracts/Comptroller.sol#298)
",290-301
Low,"Reentrancy in Comptroller.refreshCompSpeedsInternal() (contracts/Comptroller.sol#1162-1190):
	External calls:
	- assetPrice = Exp({mantissa:oracle.getUnderlyingPrice(cToken_scope_1)}) (contracts/Comptroller.sol#1177)
	Event emitted after the call(s):
	- CompSpeedUpdated(cToken_scope_3,newSpeed) (contracts/Comptroller.sol#1188)
",1162-1190
Low,"Reentrancy in Comptroller.seizeAllowed(address,address,address,address,uint256) (contracts/Comptroller.sol#556-582):
	External calls:
	- distributeSupplierComp(cTokenCollateral,borrower,false) (contracts/Comptroller.sol#578)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	- distributeSupplierComp(cTokenCollateral,liquidator,false) (contracts/Comptroller.sol#579)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	Event emitted after the call(s):
	- DistributedSupplierComp(CToken(cToken),supplier,supplierDelta,supplyIndex.mantissa) (contracts/Comptroller.sol#1258)
		- distributeSupplierComp(cTokenCollateral,liquidator,false) (contracts/Comptroller.sol#579)
",556-582
Low,"Reentrancy in Comptroller.distributeSupplierComp(address,address,bool) (contracts/Comptroller.sol#1243-1259):
	External calls:
	- compAccrued[supplier] = transferComp(supplier,supplierAccrued,0) (contracts/Comptroller.sol#1257)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	- compAccrued[supplier] = transferComp(supplier,supplierAccrued,compClaimThreshold) (contracts/Comptroller.sol#1257)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	Event emitted after the call(s):
	- DistributedSupplierComp(CToken(cToken),supplier,supplierDelta,supplyIndex.mantissa) (contracts/Comptroller.sol#1258)
",1243-1259
Low,"Reentrancy in Comptroller._setCollateralFactor(CToken,uint256) (contracts/Comptroller.sol#919-952):
	External calls:
	- newCollateralFactorMantissa != 0 && oracle.getUnderlyingPrice(cToken) == 0 (contracts/Comptroller.sol#940)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (contracts/ErrorReporter.sol#60)
		- fail(Error.PRICE_ERROR,FailureInfo.SET_COLLATERAL_FACTOR_WITHOUT_PRICE) (contracts/Comptroller.sol#941)
",919-952
Low,"Reentrancy in Comptroller.claimComp(address[],CToken[],bool,bool) (contracts/Comptroller.sol#1328-1346):
	External calls:
	- distributeBorrowerComp(address(cToken),holders[j],borrowIndex,true) (contracts/Comptroller.sol#1336)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	- distributeSupplierComp(address(cToken),holders[j_scope_0],true) (contracts/Comptroller.sol#1342)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	Event emitted after the call(s):
	- DistributedBorrowerComp(CToken(cToken),borrower,borrowerDelta,borrowIndex.mantissa) (contracts/Comptroller.sol#1279)
		- distributeBorrowerComp(address(cToken),holders[j],borrowIndex,true) (contracts/Comptroller.sol#1336)
	- DistributedSupplierComp(CToken(cToken),supplier,supplierDelta,supplyIndex.mantissa) (contracts/Comptroller.sol#1258)
		- distributeSupplierComp(address(cToken),holders[j_scope_0],true) (contracts/Comptroller.sol#1342)
",1328-1346
Low,"Reentrancy in Comptroller.transferAllowed(address,address,address,uint256) (contracts/Comptroller.sol#619-636):
	External calls:
	- allowed = redeemAllowedInternal(cToken,src,transferTokens) (contracts/Comptroller.sol#625)
		- vars.oraclePriceMantissa = oracle.getUnderlyingPrice(asset) (contracts/Comptroller.sol#755)
	- distributeSupplierComp(cToken,src,false) (contracts/Comptroller.sol#632)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	Event emitted after the call(s):
	- DistributedSupplierComp(CToken(cToken),supplier,supplierDelta,supplyIndex.mantissa) (contracts/Comptroller.sol#1258)
		- distributeSupplierComp(cToken,src,false) (contracts/Comptroller.sol#632)
",619-636
Low,"Reentrancy in Comptroller.distributeBorrowerComp(address,address,Exponential.Exp,bool) (contracts/Comptroller.sol#1267-1281):
	External calls:
	- compAccrued[borrower] = transferComp(borrower,borrowerAccrued,0) (contracts/Comptroller.sol#1278)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	- compAccrued[borrower] = transferComp(borrower,borrowerAccrued,compClaimThreshold) (contracts/Comptroller.sol#1278)
		- blo.transfer(user,userAccrued) (contracts/Comptroller.sol#1295)
	Event emitted after the call(s):
	- DistributedBorrowerComp(CToken(cToken),borrower,borrowerDelta,borrowIndex.mantissa) (contracts/Comptroller.sol#1279)
",1267-1281
Informational,"Comptroller.claimComp(address[],CToken[],bool,bool) (contracts/Comptroller.sol#1328-1346) compares to a boolean constant:
	-borrowers == true (contracts/Comptroller.sol#1332)
",1328-1346
Informational,"Comptroller._addCompMarketInternal(address) (contracts/Comptroller.sol#1387-1408) compares to a boolean constant:
	-require(bool,string)(market.isComped == false,comp market already added) (contracts/Comptroller.sol#1390)
",1387-1408
Informational,"Comptroller._setBorrowPaused(CToken,bool) (contracts/Comptroller.sol#1112-1120) compares to a boolean constant:
	-require(bool,string)(msg.sender == admin || state == true,not an admin) (contracts/Comptroller.sol#1115)
",1112-1120
Informational,"Comptroller._setSeizePaused(bool) (contracts/Comptroller.sol#1131-1138) compares to a boolean constant:
	-require(bool,string)(msg.sender == admin || state == true,not an admin) (contracts/Comptroller.sol#1133)
",1131-1138
Informational,"Comptroller.addToMarketInternal(CToken,address) (contracts/Comptroller.sol#145-174) compares to a boolean constant:
	-marketToJoin.accountMembership[borrower] == true (contracts/Comptroller.sol#153)
",145-174
Informational,"Comptroller.claimComp(address[],CToken[],bool,bool) (contracts/Comptroller.sol#1328-1346) compares to a boolean constant:
	-suppliers == true (contracts/Comptroller.sol#1339)
",1328-1346
Informational,"Comptroller._dropCompMarket(address) (contracts/Comptroller.sol#1414-1424) compares to a boolean constant:
	-require(bool,string)(market.isComped == true,market is not a comp market) (contracts/Comptroller.sol#1418)
",1414-1424
Informational,"Comptroller._setTransferPaused(bool) (contracts/Comptroller.sol#1122-1129) compares to a boolean constant:
	-require(bool,string)(msg.sender == admin || state == true,not an admin) (contracts/Comptroller.sol#1124)
",1122-1129
Informational,"Comptroller._setMintPaused(CToken,bool) (contracts/Comptroller.sol#1102-1110) compares to a boolean constant:
	-require(bool,string)(msg.sender == admin || state == true,not an admin) (contracts/Comptroller.sol#1105)
",1102-1110
Informational,"Comptroller._addCompMarketInternal(address) (contracts/Comptroller.sol#1387-1408) compares to a boolean constant:
	-require(bool,string)(market.isListed == true,comp market is not listed) (contracts/Comptroller.sol#1389)
",1387-1408
Informational,"Function Comptroller._dropCompMarket(address) (contracts/Comptroller.sol#1414-1424) is not in mixedCase
",1414-1424
Informational,"Function Comptroller._setCompRate(uint256) (contracts/Comptroller.sol#1363-1371) is not in mixedCase
",1363-1371
Informational,"Function Comptroller._setMaxAssets(uint256) (contracts/Comptroller.sol#960-971) is not in mixedCase
",960-971
Informational,"Function Comptroller._setLiquidationIncentive(uint256) (contracts/Comptroller.sol#979-1007) is not in mixedCase
",979-1007
Informational,"Function Comptroller._setCollateralFactor(CToken,uint256) (contracts/Comptroller.sol#919-952) is not in mixedCase
",919-952
Informational,"Function Comptroller._setCompAddress(address) (contracts/Comptroller.sol#1354-1357) is not in mixedCase
",1354-1357
Informational,"Function Comptroller._setCloseFactor(uint256) (contracts/Comptroller.sol#888-910) is not in mixedCase
",888-910
Informational,"Function Comptroller._supportMarket(CToken) (contracts/Comptroller.sol#1015-1033) is not in mixedCase
",1015-1033
Informational,"Function Comptroller._setPriceOracle(PriceOracle) (contracts/Comptroller.sol#864-880) is not in mixedCase
",864-880
Informational,"Function Comptroller._setTransferPaused(bool) (contracts/Comptroller.sol#1122-1129) is not in mixedCase
",1122-1129
Informational,"Function Comptroller._setBorrowCapGuardian(address) (contracts/Comptroller.sol#1067-1078) is not in mixedCase
",1067-1078
Informational,"Function Comptroller._setMarketBorrowCaps(CToken[],uint256[]) (contracts/Comptroller.sol#1049-1061) is not in mixedCase
",1049-1061
Informational,"Function Comptroller._become(Unitroller) (contracts/Comptroller.sol#1140-1143) is not in mixedCase
",1140-1143
Informational,"Function Comptroller._setPauseGuardian(address) (contracts/Comptroller.sol#1085-1100) is not in mixedCase
",1085-1100
Informational,"Function Comptroller._setSeizePaused(bool) (contracts/Comptroller.sol#1131-1138) is not in mixedCase
",1131-1138
Informational,"Function Comptroller._setMintPaused(CToken,bool) (contracts/Comptroller.sol#1102-1110) is not in mixedCase
",1102-1110
Informational,"Function Comptroller._setBorrowPaused(CToken,bool) (contracts/Comptroller.sol#1112-1120) is not in mixedCase
",1112-1120
Informational,"Function Comptroller._addCompMarkets(address[]) (contracts/Comptroller.sol#1377-1385) is not in mixedCase
",1377-1385
Informational,"Redundant expression ""repayAmount (contracts/Comptroller.sol#436)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""transferTokens (contracts/Comptroller.sol#650)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""liquidator (contracts/Comptroller.sol#491)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""borrower (contracts/Comptroller.sol#466)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""borrower (contracts/Comptroller.sol#602)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""borrowAmount (contracts/Comptroller.sol#412)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""liquidator (contracts/Comptroller.sol#537)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""mintTokens (contracts/Comptroller.sol#275)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""payer (contracts/Comptroller.sol#434)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""payer (contracts/Comptroller.sol#465)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""actualRepayAmount (contracts/Comptroller.sol#467)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""cToken (contracts/Comptroller.sol#647)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""seizeTokens (contracts/Comptroller.sol#566)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""borrowerIndex (contracts/Comptroller.sol#468)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""src (contracts/Comptroller.sol#648)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""cTokenBorrowed (contracts/Comptroller.sol#535)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""cTokenCollateral (contracts/Comptroller.sol#536)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""seizeTokens (contracts/Comptroller.sol#540)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""cToken (contracts/Comptroller.sol#272)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""cTokenBorrowed (contracts/Comptroller.sol#600)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""liquidator (contracts/Comptroller.sol#601)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""mintAmount (contracts/Comptroller.sol#250)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""minter (contracts/Comptroller.sol#273)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""redeemer (contracts/Comptroller.sol#335)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""borrower (contracts/Comptroller.sol#435)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""cTokenCollateral (contracts/Comptroller.sol#599)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""borrower (contracts/Comptroller.sol#411)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""cToken (contracts/Comptroller.sol#334)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""dst (contracts/Comptroller.sol#649)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""minter (contracts/Comptroller.sol#249)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""seizeTokens (contracts/Comptroller.sol#603)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""actualRepayAmount (contracts/Comptroller.sol#539)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""borrower (contracts/Comptroller.sol#538)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""cToken (contracts/Comptroller.sol#464)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""cToken (contracts/Comptroller.sol#410)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Redundant expression ""actualMintAmount (contracts/Comptroller.sol#274)"" inComptroller (contracts/Comptroller.sol#18-1446)
",18-1446
Informational,"Exponential.mantissaOne (contracts/Exponential.sol#18) is never used in Comptroller (contracts/Comptroller.sol#18-1446)
",18-1446
