Check,Severity,Description,Filename,Line
shadowing-local,Low,"ERC20Upgradeable.__ERC20_init(string,string).symbol (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#58) shadows:
	- ERC20Upgradeable.symbol() (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#80-82) (function)
",) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol,80-82
shadowing-local,Low,"ERC20Upgradeable.__ERC20_init_unchained(string,string).name (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#63) shadows:
	- ERC20Upgradeable.name() (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#72-74) (function)
",) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol,72-74
shadowing-local,Low,"ERC20Upgradeable.__ERC20_init_unchained(string,string).symbol (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#63) shadows:
	- ERC20Upgradeable.symbol() (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#80-82) (function)
",) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol,80-82
shadowing-local,Low,"ERC20Upgradeable.__ERC20_init(string,string).name (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#58) shadows:
	- ERC20Upgradeable.name() (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#72-74) (function)
",) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol,72-74
missing-zero-check,Low,"WrappedIbbtcEth.initialize(address,address,address)._governance (contracts/WrappedIbbtcEth.sol#37) lacks a zero-check on :
		- governance = _governance (contracts/WrappedIbbtcEth.sol#39)
",N/A,N/A
missing-zero-check,Low,"WrappedIbbtcEth.setPendingGovernance(address)._pendingGovernance (contracts/WrappedIbbtcEth.sol#49) lacks a zero-check on :
		- pendingGovernance = _pendingGovernance (contracts/WrappedIbbtcEth.sol#50)
",N/A,N/A
missing-zero-check,Low,"WrappedIbbtc.setPendingGovernance(address)._pendingGovernance (contracts/WrappedIbbtc.sol#48) lacks a zero-check on :
		- pendingGovernance = _pendingGovernance (contracts/WrappedIbbtc.sol#49)
",N/A,N/A
missing-zero-check,Low,"WrappedIbbtc.initialize(address,address,address)._governance (contracts/WrappedIbbtc.sol#38) lacks a zero-check on :
		- governance = _governance (contracts/WrappedIbbtc.sol#40)
",N/A,N/A
reentrancy-benign,Low,"Reentrancy in WrappedIbbtcEth.mint(uint256) (contracts/WrappedIbbtcEth.sol#80-83):
	External calls:
	- require(bool)(ibbtc.transferFrom(_msgSender(),address(this),_shares)) (contracts/WrappedIbbtcEth.sol#81)
	State variables written after the call(s):
	- _mint(_msgSender(),_shares) (contracts/WrappedIbbtcEth.sol#82)
		- _balances[account] = _balances[account].add(amount) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#241)
	- _mint(_msgSender(),_shares) (contracts/WrappedIbbtcEth.sol#82)
		- _totalSupply = _totalSupply.add(amount) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#240)
",uint256) (contracts/WrappedIbbtcEth.sol,80-83
reentrancy-benign,Low,"Reentrancy in WrappedIbbtc.mint(uint256) (contracts/WrappedIbbtc.sol#67-70):
	External calls:
	- require(bool)(ibbtc.transferFrom(_msgSender(),address(this),_shares)) (contracts/WrappedIbbtc.sol#68)
	State variables written after the call(s):
	- _mint(_msgSender(),_shares) (contracts/WrappedIbbtc.sol#69)
		- _balances[account] = _balances[account].add(amount) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#241)
	- _mint(_msgSender(),_shares) (contracts/WrappedIbbtc.sol#69)
		- _totalSupply = _totalSupply.add(amount) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#240)
",uint256) (contracts/WrappedIbbtc.sol,67-70
reentrancy-events,Low,"Reentrancy in WrappedIbbtc.mint(uint256) (contracts/WrappedIbbtc.sol#67-70):
	External calls:
	- require(bool)(ibbtc.transferFrom(_msgSender(),address(this),_shares)) (contracts/WrappedIbbtc.sol#68)
	Event emitted after the call(s):
	- Transfer(address(0),account,amount) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#242)
		- _mint(_msgSender(),_shares) (contracts/WrappedIbbtc.sol#69)
",uint256) (contracts/WrappedIbbtc.sol,67-70
reentrancy-events,Low,"Reentrancy in WrappedIbbtcEth.mint(uint256) (contracts/WrappedIbbtcEth.sol#80-83):
	External calls:
	- require(bool)(ibbtc.transferFrom(_msgSender(),address(this),_shares)) (contracts/WrappedIbbtcEth.sol#81)
	Event emitted after the call(s):
	- Transfer(address(0),account,amount) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#242)
		- _mint(_msgSender(),_shares) (contracts/WrappedIbbtcEth.sol#82)
",uint256) (contracts/WrappedIbbtcEth.sol,80-83
assembly,Informational,"AddressUpgradeable._functionCallWithValue(address,bytes,uint256,string) (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#119-140) uses assembly
	- INLINE ASM (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#132-135)
","address,bytes,uint256,string) (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",119-140
assembly,Informational,"Initializable._isConstructor() (deps/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol#50-61) uses assembly
	- INLINE ASM (deps/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol#59)
",) (deps/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol,50-61
assembly,Informational,"AddressUpgradeable.isContract(address) (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#26-35) uses assembly
	- INLINE ASM (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#33)
",address) (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol,26-35
pragma,Informational,"4 different versions of Solidity are used:
	- Version constraint ^0.6.0 is used by:
		-^0.6.0 (contracts/ICore.sol#3)
		-^0.6.0 (contracts/ICoreOracle.sol#3)
		-^0.6.0 (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol#3)
		-^0.6.0 (deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol#3)
		-^0.6.0 (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#3)
		-^0.6.0 (deps/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol#3)
	- Version constraint ^0.6.12 is used by:
		-^0.6.12 (contracts/WrappedIbbtc.sol#2)
		-^0.6.12 (contracts/WrappedIbbtcEth.sol#2)
	- Version constraint >=0.4.24<0.7.0 is used by:
		->=0.4.24<0.7.0 (deps/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol#3)
	- Version constraint ^0.6.2 is used by:
		-^0.6.2 (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#3)
",N/A,N/A
dead-code,Informational,"ContextUpgradeable._msgData() (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol#27-30) is never used and should be removed
",) (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol,27-30
dead-code,Informational,"ContextUpgradeable.__Context_init() (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol#17-19) is never used and should be removed
",) (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol,17-19
dead-code,Informational,"ERC20Upgradeable._setupDecimals(uint8) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#294-296) is never used and should be removed
",uint8) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol,294-296
solc-version,Informational,"Version constraint >=0.4.24<0.7.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData.
It is used by:
	- >=0.4.24<0.7.0 (deps/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol#3)
",N/A,N/A
solc-version,Informational,"Version constraint ^0.6.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ArraySliceDynamicallyEncodedBaseType
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- YulOptimizerRedundantAssignmentBreakContinue.
It is used by:
	- ^0.6.0 (contracts/ICore.sol#3)
	- ^0.6.0 (contracts/ICoreOracle.sol#3)
	- ^0.6.0 (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol#3)
	- ^0.6.0 (deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol#3)
	- ^0.6.0 (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#3)
	- ^0.6.0 (deps/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol#3)
",N/A,N/A
solc-version,Informational,"Version constraint ^0.6.12 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup.
It is used by:
	- ^0.6.12 (contracts/WrappedIbbtc.sol#2)
	- ^0.6.12 (contracts/WrappedIbbtcEth.sol#2)
",N/A,N/A
solc-version,Informational,"Version constraint ^0.6.2 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ArraySliceDynamicallyEncodedBaseType
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow.
It is used by:
	- ^0.6.2 (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#3)
",N/A,N/A
solc-version,Informational,"solc-0.6.12 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
",N/A,N/A
low-level-calls,Informational,"Low level call in AddressUpgradeable._functionCallWithValue(address,bytes,uint256,string) (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#119-140):
	- (success,returndata) = target.call{value: weiValue}(data) (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#123)
","address,bytes,uint256,string) (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",119-140
low-level-calls,Informational,"Low level call in AddressUpgradeable.sendValue(address,uint256) (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#53-59):
	- (success,None) = recipient.call{value: amount}() (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#57)
","address,uint256) (deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",53-59
missing-inheritance,Informational,"WrappedIbbtc (contracts/WrappedIbbtc.sol#11-154) should inherit from ICoreOracle (contracts/ICoreOracle.sol#5-7)
",contracts/WrappedIbbtc.sol,11-154
naming-convention,Informational,"Parameter WrappedIbbtc.initialize(address,address,address)._governance (contracts/WrappedIbbtc.sol#38) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Variable ContextUpgradeable.__gap (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol#31) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter WrappedIbbtcEth.setPendingGovernance(address)._pendingGovernance (contracts/WrappedIbbtcEth.sol#49) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter WrappedIbbtcEth.initialize(address,address,address)._core (contracts/WrappedIbbtcEth.sol#37) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter WrappedIbbtc.setOracle(address)._oracle (contracts/WrappedIbbtc.sol#53) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter WrappedIbbtcEth.burn(uint256)._shares (contracts/WrappedIbbtcEth.sol#86) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter WrappedIbbtcEth.setCore(address)._core (contracts/WrappedIbbtcEth.sol#56) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function ERC20Upgradeable.__ERC20_init_unchained(string,string) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#63-67) is not in mixedCase
","string,string) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",63-67
naming-convention,Informational,"Parameter WrappedIbbtcEth.mint(uint256)._shares (contracts/WrappedIbbtcEth.sol#80) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function ERC20Upgradeable.__ERC20_init(string,string) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#58-61) is not in mixedCase
","string,string) (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",58-61
naming-convention,Informational,"Function ContextUpgradeable.__Context_init_unchained() (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol#21-22) is not in mixedCase
",) (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol,21-22
naming-convention,Informational,"Variable ERC20Upgradeable.__gap (deps/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#313) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter WrappedIbbtc.burn(uint256)._shares (contracts/WrappedIbbtc.sol#73) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter WrappedIbbtcEth.initialize(address,address,address)._governance (contracts/WrappedIbbtcEth.sol#37) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter WrappedIbbtc.initialize(address,address,address)._ibbtc (contracts/WrappedIbbtc.sol#38) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter WrappedIbbtc.mint(uint256)._shares (contracts/WrappedIbbtc.sol#67) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter WrappedIbbtc.setPendingGovernance(address)._pendingGovernance (contracts/WrappedIbbtc.sol#48) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Function ContextUpgradeable.__Context_init() (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol#17-19) is not in mixedCase
",) (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol,17-19
naming-convention,Informational,"Parameter WrappedIbbtc.initialize(address,address,address)._oracle (contracts/WrappedIbbtc.sol#38) is not in mixedCase
",N/A,N/A
naming-convention,Informational,"Parameter WrappedIbbtcEth.initialize(address,address,address)._ibbtc (contracts/WrappedIbbtcEth.sol#37) is not in mixedCase
",N/A,N/A
redundant-statements,Informational,"Redundant expression ""this (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol#28)"" inContextUpgradeable (deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol#16-32)
",deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol,16-32
